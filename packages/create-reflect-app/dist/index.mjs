import{intro as s,text as p,isCancel as f,cancel as m,spinner as y,outro as d}from"@clack/prompts";import o from"picocolors";import r from"node:fs";import a from"node:path";import{fileURLToPath as u}from"node:url";const h=a.resolve(u(import.meta.url),"../..","template");async function v(){console.clear(),s(`${o.bgCyan(o.black("Reflect: create-reflect-app"))}`);const e=await p({message:"Where should we create your project?",placeholder:"./my-reflect-app",validate:g});f(e)&&(m("Operation cancelled."),process.exit(0));const t=y();t.start("Copying files"),n(h,e),t.stop("Copied files"),d(`${o.underline(o.cyan("https://reflect.net/contact"))}`)}function g(e){if(!/^(?:@[a-z\d\-*~][a-z\d\-*._~]*\/)?[a-z\d\-~][a-z\d\-._~]*$/.test(e))return"Invalid project name."}function S(e,t){r.statSync(e).isDirectory()?n(e,t):r.copyFileSync(e,t)}function n(e,t){r.mkdirSync(t,{recursive:!0});for(const c of r.readdirSync(e)){const i=a.resolve(e,c),l=a.resolve(t,c);S(i,l)}}v().catch(console.error);
