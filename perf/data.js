window.BENCHMARK_DATA = {
  "lastUpdate": 1647266440141,
  "repoUrl": "https://github.com/rocicorp/replicache",
  "entries": {
    "Benchmark": [
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "32ca6f6da69be6e394c8b4ad53c81eeaeb77293c",
          "message": "touch",
          "timestamp": "2020-09-25T14:36:16-10:00",
          "tree_id": "f5b2a73abfd4f5029f33c0d0de5b11391c6cd659",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/32ca6f6da69be6e394c8b4ad53c81eeaeb77293c"
        },
        "date": 1601080738009,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 0.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.49,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "deb10341f5dfed5d4cf014da732d3199c079be74",
          "message": "sync package-lock with package json",
          "timestamp": "2020-09-25T14:36:47-10:00",
          "tree_id": "317f7b7b5bfe46ec297dbb8037d88c5fd8f310b9",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/deb10341f5dfed5d4cf014da732d3199c079be74"
        },
        "date": 1601080780426,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 0.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58271f005189ded9b2063a7467a0af60925266c8",
          "message": "Update README.md\n\nMoving perf data to hacking.md",
          "timestamp": "2020-09-26T13:10:03-10:00",
          "tree_id": "0089cd0281dacf681ee749d3fc777c891c4bfce2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/58271f005189ded9b2063a7467a0af60925266c8"
        },
        "date": 1601161945437,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 0.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 13.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 11.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e25e932cd784c77fde2af4de7b5db87d332c4ea9",
          "message": "Update HACKING.md",
          "timestamp": "2020-09-26T13:10:59-10:00",
          "tree_id": "0848895396e5ac8dc21c9778ccab3f127e770b2f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/e25e932cd784c77fde2af4de7b5db87d332c4ea9"
        },
        "date": 1601162008755,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 0.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5a298beba4505f8fb5464b0e0c835648f690c941",
          "message": "Remove some remnants from jest (#122)",
          "timestamp": "2020-09-28T09:36:30-10:00",
          "tree_id": "3cbc08b76cfcb24b4f9f604cf7dd3f0c77f3080d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5a298beba4505f8fb5464b0e0c835648f690c941"
        },
        "date": 1601321943039,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 0.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 0.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "409d4ee69228078c463a9ed5edac1dee69211c28",
          "message": "Remove diff-server from the JS SDK (#120)\n\nOne can always get it from\r\nhttps://github.com/rocicorp/diff-server/releases/latest/download/\r\n\r\nFixes #76",
          "timestamp": "2020-09-28T11:35:48-10:00",
          "tree_id": "de95123eddebb8ab67ca044b7efdfca12915f638",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/409d4ee69228078c463a9ed5edac1dee69211c28"
        },
        "date": 1601329090858,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 0.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "b6a519f2798fce35d4a6a1f0e816613d69c78fd8",
          "message": "Bump version to 0.4.0",
          "timestamp": "2020-09-29T01:06:05-10:00",
          "tree_id": "ba33a6b86f8ef93d9974e34ed849ec4021d23ab8",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b6a519f2798fce35d4a6a1f0e816613d69c78fd8"
        },
        "date": 1601377683412,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "203075ffa1c24cb30f09f7c15425917f308b6e00",
          "message": "Update dev instructions",
          "timestamp": "2020-09-30T11:03:33-10:00",
          "tree_id": "5cbb54ba181e09cf0ad04c9680ac72b7ec714e9a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/203075ffa1c24cb30f09f7c15425917f308b6e00"
        },
        "date": 1601500017728,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "3ecb887dd384adf5849add3862bb4db8fc7b9223",
          "message": "Add instructions to build for production with rollup.",
          "timestamp": "2020-09-30T12:13:04-10:00",
          "tree_id": "ebcdc9fc7b845d1042603682ca13cfac0890649d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/3ecb887dd384adf5849add3862bb4db8fc7b9223"
        },
        "date": 1601504134232,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.66,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "83053ec8a966609d8c04abba71048b9ada28d37d",
          "message": "Add script for Now to use",
          "timestamp": "2020-09-30T12:16:49-10:00",
          "tree_id": "14090c85fef200e7e8849b5f76ce439f1fa2665d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/83053ec8a966609d8c04abba71048b9ada28d37d"
        },
        "date": 1601504346916,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.87,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "44866e6999be52655320cc799349f7e5698525ab",
          "message": "Adjust build script",
          "timestamp": "2020-09-30T14:39:36-10:00",
          "tree_id": "df4eebf09ae1087845ab9d68e42f1663f99de3fe",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/44866e6999be52655320cc799349f7e5698525ab"
        },
        "date": 1601512934378,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "6c8b0e9ba804698f120764d9d0afd7435b00b9ae",
          "message": "Give up and use released replicache",
          "timestamp": "2020-09-30T14:42:43-10:00",
          "tree_id": "00d5805f8644109f36291c18def92c3f5d5cb735",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6c8b0e9ba804698f120764d9d0afd7435b00b9ae"
        },
        "date": 1601513202364,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "cf0e24fef911c072ca6d6f57aabdfe7d1ea0fc2a",
          "message": "Copy over wasm dir to output",
          "timestamp": "2020-09-30T14:45:05-10:00",
          "tree_id": "8a37363571cc1edafa5b63379a5f66f0069475b4",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cf0e24fef911c072ca6d6f57aabdfe7d1ea0fc2a"
        },
        "date": 1601513236039,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "f7c1d557be74971f529941154507493a3f2a1172",
          "message": "Move tab handler to last button in row",
          "timestamp": "2020-09-30T16:07:09-10:00",
          "tree_id": "065f8173355dd66f3024ca961a3cc5af604c0ede",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f7c1d557be74971f529941154507493a3f2a1172"
        },
        "date": 1601518176310,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "28ba3722e9e4795c0a865283991536ed78617dca",
          "message": "Add a serviceworker!",
          "timestamp": "2020-09-30T17:36:03-10:00",
          "tree_id": "0603d3b61f437fdbcc5a60384cc0fadf9f57bcca",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/28ba3722e9e4795c0a865283991536ed78617dca"
        },
        "date": 1601523529734,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "8621bee34e0373cb014bdd1830ce5a059921870e",
          "message": "mobile viewport",
          "timestamp": "2020-09-30T17:56:58-10:00",
          "tree_id": "9517f2ad3a79fd2968bcb0b2d296642dd19ed5b3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8621bee34e0373cb014bdd1830ce5a059921870e"
        },
        "date": 1601524751938,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "238f29b32edeb09a5b642f2fc8f543442b206f18",
          "message": "Remove auto-select code which doesn't work well on mobile.\n\nAlso disable zoom.",
          "timestamp": "2020-09-30T19:22:01-10:00",
          "tree_id": "a88875d3c5ecae89dc988604a5293be841f65ca2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/238f29b32edeb09a5b642f2fc8f543442b206f18"
        },
        "date": 1601529864398,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.89,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "102c91e59d58fbbe5d4c5595dddf5e9ed7b32be6",
          "message": "Try a different way to disable scaling.",
          "timestamp": "2020-09-30T19:28:17-10:00",
          "tree_id": "08c28e921398899568ed3811524a617facab8bbe",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/102c91e59d58fbbe5d4c5595dddf5e9ed7b32be6"
        },
        "date": 1601530252661,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "59ad815451abc950f153c7594c82cb1da7400fdc",
          "message": "scalable=no",
          "timestamp": "2020-09-30T21:19:53-10:00",
          "tree_id": "22222437903306be16296e77b458925df2f28df8",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/59ad815451abc950f153c7594c82cb1da7400fdc"
        },
        "date": 1601536912352,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "0036c4eefde17f41fd3470e57cb16ac4f1b074a4",
          "message": "slow down push a bit",
          "timestamp": "2020-09-30T21:26:18-10:00",
          "tree_id": "755274b8d68d83c0c3118e1e8c7ecab04a99ea98",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/0036c4eefde17f41fd3470e57cb16ac4f1b074a4"
        },
        "date": 1601537314124,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "29b84871219c59c125b381040d2c17004826ffec",
          "message": "Try to prevent double-tap to zoom",
          "timestamp": "2020-09-30T21:31:24-10:00",
          "tree_id": "68995379c677459e7498d77f065124cc3bb3fa31",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/29b84871219c59c125b381040d2c17004826ffec"
        },
        "date": 1601537625187,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "0bbe190aca5b518301d348c5134950320a794fc4",
          "message": "bring back focus thing for desktop only",
          "timestamp": "2020-09-30T22:26:21-10:00",
          "tree_id": "13ca4735737c10c39b6b78edf1851855e3eba4b5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/0bbe190aca5b518301d348c5134950320a794fc4"
        },
        "date": 1601540910271,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "456293ffff7bc7c3028441b7228e8ac9c8829724",
          "message": "Handle 401 statusCode from data layer\n\nThis is basically just making the test excercise the Rust code.\n\nFixes #106",
          "timestamp": "2020-10-02T09:07:26-10:00",
          "tree_id": "08945e669c13f0298d38fcd1723b31ac6ac33f62",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/456293ffff7bc7c3028441b7228e8ac9c8829724"
        },
        "date": 1601665775129,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "c29b8f4284660af5016811a256bd0e0123a62861",
          "message": "Revert \"Remove diff-server from the JS SDK (#120)\"\n\nThis reverts commit 409d4ee69228078c463a9ed5edac1dee69211c28.",
          "timestamp": "2020-10-02T09:46:47-10:00",
          "tree_id": "5fb90bb94e771176f8158df654770ba05fbdda22",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/c29b8f4284660af5016811a256bd0e0123a62861"
        },
        "date": 1601668154909,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "bc70dc7affa21aefe43808366437047684c65570",
          "message": "Bump version to 0.5.0.",
          "timestamp": "2020-10-02T09:47:55-10:00",
          "tree_id": "96dfa7386b0b587fbd2a0ad1ac4149b0243aae4a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/bc70dc7affa21aefe43808366437047684c65570"
        },
        "date": 1601668254573,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "35acae4e1158dc4f8f69bdd223904b3a4b72a0d8",
          "message": "Doc sprucing",
          "timestamp": "2020-10-02T10:23:22-10:00",
          "tree_id": "352b366e6dbac7acfbe4ee67b61574347f407621",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/35acae4e1158dc4f8f69bdd223904b3a4b72a0d8"
        },
        "date": 1601670372792,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "43d584bab8e86424cd510120b096b51124bad7d5",
          "message": "Rename unit test GH Action (#131)",
          "timestamp": "2020-10-02T12:11:53-10:00",
          "tree_id": "ece288435e69567450ef0d4f801aec2e81e0eff3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/43d584bab8e86424cd510120b096b51124bad7d5"
        },
        "date": 1601676854897,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "17654cfbd82d18f6c695cf511d42bbfe45487678",
          "message": "Deprecate repmInvoker (#130)\n\nIn favor of wasmModule parameter. This has the same type as the param to\r\nREPMWasmInvoker, which allows a path, a fetch promise etc.",
          "timestamp": "2020-10-02T15:25:29-10:00",
          "tree_id": "1da6fe5e8be435ccaade3674517047999f3985d6",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/17654cfbd82d18f6c695cf511d42bbfe45487678"
        },
        "date": 1601688477935,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "a3d665b77a692780ed1a533211016e574987e1a9",
          "message": "Bump version to 0.5.1",
          "timestamp": "2020-10-02T15:31:30-10:00",
          "tree_id": "1237d123a935043716677c96dc65617b5439669f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a3d665b77a692780ed1a533211016e574987e1a9"
        },
        "date": 1601688831112,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "aef0cbedbd61314c5b75bdb505d19c45b03f7254",
          "message": "Bump version to 0.5.2.",
          "timestamp": "2020-10-02T16:10:52-10:00",
          "tree_id": "3a47e49bd7d901e5cd022f07d091d114e73f9273",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/aef0cbedbd61314c5b75bdb505d19c45b03f7254"
        },
        "date": 1601691190568,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.9,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "fa464255ab6ab3569746ea7f011de067738ae387",
          "message": "Bump version to 0.5.2.",
          "timestamp": "2020-10-02T16:12:43-10:00",
          "tree_id": "fceb499f0419aef60fdb67ce5eeaee52f9719461",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fa464255ab6ab3569746ea7f011de067738ae387"
        },
        "date": 1601691292899,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "73635175fa58b1e97985b8c2085a00edd2fecf84",
          "message": "Update replicache to 0.5.2",
          "timestamp": "2020-10-02T16:16:05-10:00",
          "tree_id": "ec86bcc232b52fc6eeb84c347db49766d418b190",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/73635175fa58b1e97985b8c2085a00edd2fecf84"
        },
        "date": 1601691542703,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "bcb355792e1a8a002105045656d8d97d11b6b3d1",
          "message": "futz",
          "timestamp": "2020-10-04T10:41:41-10:00",
          "tree_id": "2824966653ed0d532e30ffe90730dde046adcc06",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/bcb355792e1a8a002105045656d8d97d11b6b3d1"
        },
        "date": 1601844228471,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "6e926be94d13404597ab1d3cd4b817b1fad9ce10",
          "message": "update docs",
          "timestamp": "2020-10-16T12:30:08-10:00",
          "tree_id": "92b1abf4ebdd40bb9445d81661d74d8d362151f5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6e926be94d13404597ab1d3cd4b817b1fad9ce10"
        },
        "date": 1602887539732,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "89157472245bdb531a84cf493e8dabc3319acfb5",
          "message": "Bump version to 0.6.0",
          "timestamp": "2020-10-16T12:32:13-10:00",
          "tree_id": "0a7def3afd7cfe5702748344abbee2f03417dec0",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/89157472245bdb531a84cf493e8dabc3319acfb5"
        },
        "date": 1602887690739,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "98eb3ce3ab2dc2df034c0f564ec22680f676992e",
          "message": "Whoops confused repc version and replicache-sdk-js version.",
          "timestamp": "2020-10-16T12:35:20-10:00",
          "tree_id": "89fe51d8d640574efb85d8dc19dd5f85e316391d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/98eb3ce3ab2dc2df034c0f564ec22680f676992e"
        },
        "date": 1602887879350,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c429a0fbd59df47fa56448435892531a77b073f4",
          "message": "Export CreateIndexOptions type (#136)",
          "timestamp": "2020-10-16T12:53:41-10:00",
          "tree_id": "7ccfbc28477b03867ca4b631a4115bd552c4e506",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/c429a0fbd59df47fa56448435892531a77b073f4"
        },
        "date": 1602888975092,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "ad9a8ef51e5cd96a2e0eb0a4d93912592fd67527",
          "message": "Some documentation updates:\n\n- Use interface instead of type for all option types and exclude\n  from export. This causes the __named_parameters syntax at usage\n  site and excludes the separate (useless) struct from the docs\n  which is nice.\n- Improve deprecatedness of REPMWasmInvoker and friends.",
          "timestamp": "2020-10-17T06:27:25-10:00",
          "tree_id": "6d7a08e6f364a0c4b1074df63e9b4fa83df9f314",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ad9a8ef51e5cd96a2e0eb0a4d93912592fd67527"
        },
        "date": 1602952197815,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "b4cdf6a640409940af8e0229ff33b853a8556309",
          "message": "Revert change to sample app to use indexes. They aren't working yet.",
          "timestamp": "2020-10-17T08:06:19-10:00",
          "tree_id": "a12cd01bfba47fb963132da5ee7e92a896cf6e46",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b4cdf6a640409940af8e0229ff33b853a8556309"
        },
        "date": 1602958126968,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "56b6980b17282600b737f5c1ba4c2c10f69a751e",
          "message": "Bump version to 0.7.0",
          "timestamp": "2020-10-17T10:20:32-10:00",
          "tree_id": "02397e8802bc56c6d786233712090827b63a483d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/56b6980b17282600b737f5c1ba4c2c10f69a751e"
        },
        "date": 1602966183459,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "773398bf0f4e77a326cc4a8ab5ac8f540e0d2861",
          "message": "update docs",
          "timestamp": "2020-10-17T10:22:17-10:00",
          "tree_id": "440c9ec661ed40dc34e108d18b0b6e0aabf8e3fe",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/773398bf0f4e77a326cc4a8ab5ac8f540e0d2861"
        },
        "date": 1602966264784,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "9640afcd06ccb7e3b7135b6fef011aff1aeb3d7b",
          "message": "Revert \"Revert change to sample app to use indexes. They aren't working yet.\"\n\nThis reverts commit b4cdf6a640409940af8e0229ff33b853a8556309.",
          "timestamp": "2020-10-17T10:28:02-10:00",
          "tree_id": "964999b23b69bdd822fc11303c1c5dbbb6590ced",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/9640afcd06ccb7e3b7135b6fef011aff1aeb3d7b"
        },
        "date": 1602966625181,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2c9609546bec56a605e3b45c2921c8ff6afb23f6",
          "message": "Prefer property shorthand (#142)",
          "timestamp": "2020-10-19T08:42:20-10:00",
          "tree_id": "45c59d6c2decae30e09d263fed810289c6f3f588",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2c9609546bec56a605e3b45c2921c8ff6afb23f6"
        },
        "date": 1603133055459,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "07d7d0ccc1a579862389e3ac6beca48fa6791b00",
          "message": "Update to TypeScript 4.0 (#152)\n\nMain reason was to get access to named tuples... things got hard to\r\nfollow.",
          "timestamp": "2020-10-22T11:31:08-10:00",
          "tree_id": "3a644c74af737788f21432f47ba8de0ef6d087b2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/07d7d0ccc1a579862389e3ac6beca48fa6791b00"
        },
        "date": 1603402394000,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fe0ddecc705dd5a7eef23c43a7248a8007f83bb4",
          "message": "Remove load batching of scan (#153)\n\nWe pass the initial limit to scan.\r\n\r\nSimplify the code to load all the items and remove loading on demand.\r\n\r\nFixes https://github.com/rocicorp/repc/issues/231",
          "timestamp": "2020-10-22T12:03:28-10:00",
          "tree_id": "b3dedbc53333c2bf59ceded6e030d4dfa899455f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fe0ddecc705dd5a7eef23c43a7248a8007f83bb4"
        },
        "date": 1603404326838,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9995cb6ad3a70fc79135fe3d1c77fbd36440200a",
          "message": "Add receiver to ScanRequest (#156)",
          "timestamp": "2020-10-22T12:59:46-10:00",
          "tree_id": "49b534aed89061ae2f525e1fb560124957670596",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/9995cb6ad3a70fc79135fe3d1c77fbd36440200a"
        },
        "date": 1603407706474,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e075b3d9bb2339c85316c4c40239d80d9bcb77b4",
          "message": "Rename ScanId -> ScanKey and id to key (#157)\n\nDeprecate the old ones but allow them to be used.\r\n\r\nFor the RPC we send both id and key.\r\n\r\nTowards #154",
          "timestamp": "2020-10-22T13:27:42-10:00",
          "tree_id": "cb18d48c3889de844def99eb60171a964dabc3da",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/e075b3d9bb2339c85316c4c40239d80d9bcb77b4"
        },
        "date": 1603409451066,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 1.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2989c85ebb66bfed3fa955f9cef53a7edff7a00d",
          "message": "Remove console.debug (#158)\n\nFor awesome performance gain!",
          "timestamp": "2020-10-22T14:29:58-10:00",
          "tree_id": "55e2ff96c2fcc936a7926225d95fc9e40fa0e017",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2989c85ebb66bfed3fa955f9cef53a7edff7a00d"
        },
        "date": 1603413089505,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 26.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 28.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7160965a92820871b13aa44c2d00b6353ced9151",
          "message": "Move the computation of the random strings outside the perf loop (#160)\n\ncrypto.getRandomValues is not super fast.",
          "timestamp": "2020-10-22T16:13:29-10:00",
          "tree_id": "1c2c962bbcb93a48b106b5d52cc4d8825720e75a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/7160965a92820871b13aa44c2d00b6353ced9151"
        },
        "date": 1603419341847,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 24.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "187f29eabf8ab072d030416d41a0daab1f5ae723",
          "message": "Add release section to HACKING.md",
          "timestamp": "2020-10-22T16:47:06-10:00",
          "tree_id": "2b183ec559a2364757224bd677f22d6b67994961",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/187f29eabf8ab072d030416d41a0daab1f5ae723"
        },
        "date": 1603421320736,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 26.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 27.9,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "c70a4bbc4cbc24ee14153faf2008b8dacb0a41ff",
          "message": "Add VERSION file.",
          "timestamp": "2020-10-23T01:18:12-10:00",
          "tree_id": "1e9db21441686f3ebe92da8f7b61575919e5b2c8",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/c70a4bbc4cbc24ee14153faf2008b8dacb0a41ff"
        },
        "date": 1603452067528,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.87,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "64996c61c7c24fbff73b84d474677949ed8fb810",
          "message": "Roll repc to 0.11.0",
          "timestamp": "2020-10-23T05:24:16-10:00",
          "tree_id": "04d3e64072887072a565a3c075bb85dd4b504563",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/64996c61c7c24fbff73b84d474677949ed8fb810"
        },
        "date": 1603466757713,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.94,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "5769be0628867a099fb4729186a84508db95af75",
          "message": "Bump version to 0.9.0.\n\nHad to skip past 0.7.0 and 0.8.0 because there are previous\n(accidental) unpublished versions on npm and you can't overwrite.",
          "timestamp": "2020-10-23T05:34:46-10:00",
          "tree_id": "e3a6f6bbf1ccfdea5c7256055ec5594577d404ec",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5769be0628867a099fb4729186a84508db95af75"
        },
        "date": 1603467426666,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "24a5e3d3645ff2fce0e6660e61d9c2d8206a2026",
          "message": "Enable scan performance tests (#161)\n\nPlaywright chromium uses incognito mode by default. Also, headless\r\nchromium gets even less storage quota (running with headless: false\r\npassed).\r\n\r\nWe can launch Playwright chromium with a profile directory and we gets\r\nlots of storage and everyone is happy!\r\n\r\nTowards #137",
          "timestamp": "2020-10-23T10:56:26-10:00",
          "tree_id": "29533f4d384f55a4177e6ef33da4dcff56d2f558",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/24a5e3d3645ff2fce0e6660e61d9c2d8206a2026"
        },
        "date": 1603486718075,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a216449614dd709b0ddbdcb45d1472c1cc7f1621",
          "message": "Update perf.js.yml\n\nThe web hook does not seem to work",
          "timestamp": "2020-10-23T12:12:19-10:00",
          "tree_id": "f41f1bd37b26b43e566d2d2b58066521a4053352",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a216449614dd709b0ddbdcb45d1472c1cc7f1621"
        },
        "date": 1603491257312,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ab44a067f7a2be05428c91ed2d1e04c4bdffe818",
          "message": "Disable console.log in perf test (#162)",
          "timestamp": "2020-10-23T12:31:55-10:00",
          "tree_id": "21667ea1867b847bf0d14b0904234385f5430457",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ab44a067f7a2be05428c91ed2d1e04c4bdffe818"
        },
        "date": 1603492416799,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "16e0219c90a0029c4717a6f0bb14ff9d97f1f14a",
          "message": "Update HACKING.md\n\nNeed to include branch name in vercel url",
          "timestamp": "2020-10-23T12:37:02-10:00",
          "tree_id": "ba8eef62fe396815cc409c60654e8bf21238b44f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/16e0219c90a0029c4717a6f0bb14ff9d97f1f14a"
        },
        "date": 1603492743272,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.49,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d8753750edd08197f5401edb22f200be3120290d",
          "message": "Mark ScanKey exclusive as required (#163)\n\nFixes #155",
          "timestamp": "2020-10-23T13:52:51-10:00",
          "tree_id": "4c178332d39b762cb0733457d6533fe99e786a37",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d8753750edd08197f5401edb22f200be3120290d"
        },
        "date": 1603497273872,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.89,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 24.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "789de696e664ae9682be0f2edd2ed6b6686ddc05",
          "message": "Remove out.cjs and main field in package.json (#164)\n\nCloses #151",
          "timestamp": "2020-10-26T12:40:25-10:00",
          "tree_id": "5551d16ece8e3aa04eab6814def095b6fced5d12",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/789de696e664ae9682be0f2edd2ed6b6686ddc05"
        },
        "date": 1603752156678,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "f07de8b60de29132f439c9ee44198ea3c8ae9029",
          "message": "Bump version to 1.0.0.",
          "timestamp": "2020-10-26T12:50:00-10:00",
          "tree_id": "eb2305bb95af73a004435a2461a31fa8d02cce74",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f07de8b60de29132f439c9ee44198ea3c8ae9029"
        },
        "date": 1603752700091,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.87,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "49610274ff7cbfe75504f853f9924b1ecc218c6b",
          "message": "Remove dependency cycle (#166)\n\nThere was a cycle between transactions.ts and scan-iterator.ts. It was\r\nharmless but also easy to fix.",
          "timestamp": "2020-10-26T17:18:57-10:00",
          "tree_id": "0beb42d5fcd1aea811e39e78d381175618ac8117",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/49610274ff7cbfe75504f853f9924b1ecc218c6b"
        },
        "date": 1603768857760,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d3ba553331c284ec3cd672c6944657ca73e3f73f",
          "message": "Make ScanKey exclusive optional (#167)\n\nand default to false.\r\n\r\nFixes #155",
          "timestamp": "2020-10-27T10:27:43-10:00",
          "tree_id": "5bfc533bdc27b43b7aeefa6a100e1a87f9479f8f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d3ba553331c284ec3cd672c6944657ca73e3f73f"
        },
        "date": 1603830577065,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a5685db3d7feffacf88ab641a8effdc41769368d",
          "message": "Remove support for ScanBound id (#169)\n\nFixes #154",
          "timestamp": "2020-10-27T12:40:30-10:00",
          "tree_id": "bebdcd83f07ac878cecdd2fd7bc2dc8140c03c68",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a5685db3d7feffacf88ab641a8effdc41769368d"
        },
        "date": 1603838539668,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "7574e3226ba6f42cf4f5b8b66d72b2d8ae1ecd70",
          "message": "Docs",
          "timestamp": "2020-10-28T16:19:20-10:00",
          "tree_id": "bee01c39db37ed48840255fa0e4527712084838c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/7574e3226ba6f42cf4f5b8b66d72b2d8ae1ecd70"
        },
        "date": 1603938057148,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 25.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b3c9970877d6ffbf559aa2a2cbb00d3bd87115a1",
          "message": "Update README.md",
          "timestamp": "2020-10-30T15:55:05-10:00",
          "tree_id": "31e01bd4da53e43de54636cdf551fc3c02d229e5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b3c9970877d6ffbf559aa2a2cbb00d3bd87115a1"
        },
        "date": 1604109408922,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 15.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "0 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "adb83433588d115802ee4f4bbbfd941de71f73a8",
          "message": "Add perf test that writes a single byte in a write transaction.\n\nTowards #146",
          "timestamp": "2020-11-03T13:50:43-08:00",
          "tree_id": "cdbc87c45b050f7c3e89668712868f8fb9ec0c34",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/adb83433588d115802ee4f4bbbfd941de71f73a8"
        },
        "date": 1604440350715,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "71 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "8ba64f20f184010d7ee0bd524c8868216cd8271d",
          "message": "Update font URL. The CSS we are caching changed its target. Not sure what correct way to do this is.",
          "timestamp": "2020-11-03T15:29:35-10:00",
          "tree_id": "034080c5098ac062b8227d41b4ad86b2de051d0b",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8ba64f20f184010d7ee0bd524c8868216cd8271d"
        },
        "date": 1604453504390,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 15.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "68 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cee07011a7d7fccdf4a83905933423f5196a576e",
          "message": "Stop hotlinking to font URLs which aren't stable. (#175)",
          "timestamp": "2020-11-03T20:39:11-10:00",
          "tree_id": "145fab4303b0250c9001e13f5af7aab522243f29",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cee07011a7d7fccdf4a83905933423f5196a576e"
        },
        "date": 1604472082001,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6c2e6064f79ac1334c11797069c5ca578f47c110",
          "message": "Attempted fix for https://github.com/rocicorp/replicache-sdk-js/issues/172 (#176)",
          "timestamp": "2020-11-04T12:28:42-10:00",
          "tree_id": "f743a0f1c0970fa0a1dea0899b8a1fdb853b3a9a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6c2e6064f79ac1334c11797069c5ca578f47c110"
        },
        "date": 1604529029573,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "23 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "da8ee72723f1cb5bb0aea46309d4f28a389f9ba7",
          "message": "Update README.md",
          "timestamp": "2020-11-05T07:44:27-10:00",
          "tree_id": "a1d48f301ba1f0c1428930d7be93519afb735029",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/da8ee72723f1cb5bb0aea46309d4f28a389f9ba7"
        },
        "date": 1604598397041,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "63c44cc24cdeaa40053b533625f3bf0b380ed985",
          "message": "Add test for scan over index with arrays\n\nJS side of https://github.com/rocicorp/repc/commit/d236be1cfaad55c0503f6096e682e30a9150df71\n\nCloses https://github.com/rocicorp/replicache-sdk-js/issues/137",
          "timestamp": "2020-11-05T14:54:34-08:00",
          "tree_id": "0cfdcc0a1d6d8ce8612e94f91a2ca8e31a74c7b2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/63c44cc24cdeaa40053b533625f3bf0b380ed985"
        },
        "date": 1604617000883,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "62 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "039e033ec631f9526d9bafbfad776f3c37a9a557",
          "message": "Docs",
          "timestamp": "2020-11-05T15:06:01-08:00",
          "tree_id": "186eecf4c597b2b80f8d020c77b4857b5dd211e7",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/039e033ec631f9526d9bafbfad776f3c37a9a557"
        },
        "date": 1604617714709,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5341b41b1cc014e3e7cfcb4e6979bc05a0860166",
          "message": "Remove ScanKey type\n\nScanOptions changed to no longer use it",
          "timestamp": "2020-11-05T15:23:56-08:00",
          "tree_id": "f9fee6d5854cec1862b2fe348b0a4696dd581fe2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5341b41b1cc014e3e7cfcb4e6979bc05a0860166"
        },
        "date": 1604618754187,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "51a60d5fe756c579ae7669ce8868dc51c6942ba9",
          "message": "Bump version to 2.0.0.",
          "timestamp": "2020-11-05T15:24:48-08:00",
          "tree_id": "06fc143ceb78e5daee5b959309fb99099d9fe1bd",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/51a60d5fe756c579ae7669ce8868dc51c6942ba9"
        },
        "date": 1604618867061,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.12,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "abb175620e17d0fe91582ccf21669d810fd3818e",
          "message": "Roll repc to 0.14.0, bump replicache-sdk-js to 2.0.1 (#187)\n\n* Roll repc to 0.14.0\r\n\r\n* Bump version to 2.0.1.",
          "timestamp": "2020-11-05T15:24:09-10:00",
          "tree_id": "ea2a03504f29aa8481de39394a400689ea76ea60",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/abb175620e17d0fe91582ccf21669d810fd3818e"
        },
        "date": 1604625975225,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "47 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "9cb0f5370ea6dddee09f5b8535bb77bbbffbf553",
          "message": "pretty",
          "timestamp": "2020-11-05T16:04:56-10:00",
          "tree_id": "22c1f206e7a4ed896975fdbd66d6c01d59b4ac2a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/9cb0f5370ea6dddee09f5b8535bb77bbbffbf553"
        },
        "date": 1604628408269,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b6c28910c268c3bff373fd2b62918b2d01dbb437",
          "message": "Update README.md",
          "timestamp": "2020-11-06T13:19:01-08:00",
          "tree_id": "49d43d33e15fede4ad75c1d045f1e8bed6520a87",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b6c28910c268c3bff373fd2b62918b2d01dbb437"
        },
        "date": 1604697664565,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "a5092a8d6c19057aa94c808ec5061189d3a00469",
          "message": "Allows Next.js using Webpack 5 to work\n\nThere are a bunch of Webpack/Next.js issues to work around:\n\n- `import.meta.url` generates `file:` URL. Using the `new URL` pattern\n  tells Webpack to do runtime URLs.\n- `experimental.asyncWebAssembly` causes Webpack to parse the wasm file\n  and validate imports which it doesn't do correctly. Instead you need\n  to use `type: \"asset/resource\"`.\n  - But this puts the wasm file in `_next` which cause 404. We need to\n    tell webpack to put the file in `static/` too\n\nTowards #151",
          "timestamp": "2020-11-06T15:59:13-08:00",
          "tree_id": "cc64968cd434f33bdca5a16d5d941b24e975049d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a5092a8d6c19057aa94c808ec5061189d3a00469"
        },
        "date": 1604707268048,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "14b737c9a3cb4a020888cdbab04b6a9d2df8c319",
          "message": "2.0.2",
          "timestamp": "2020-11-06T15:59:59-08:00",
          "tree_id": "071a27f420953fc3815f3bf24d925eacaa2dd203",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/14b737c9a3cb4a020888cdbab04b6a9d2df8c319"
        },
        "date": 1604707318521,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "95d63ffbaac567aa4524de1ae481065b8b1a78b5",
          "message": "Use asset/resource for wasm files\n\nTowards #151",
          "timestamp": "2020-11-06T16:12:00-08:00",
          "tree_id": "76ba187698611ddec4cb5901dd5d05de8db08210",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/95d63ffbaac567aa4524de1ae481065b8b1a78b5"
        },
        "date": 1604708062743,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 29.41,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "56 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "92a9ae6a94be2926188ca55393164b40758addde",
          "message": "Introduce IndexTransaction (#193)\n\nAPI Change!\r\n\r\nNow `createIndex` and `dropIndex` are only available on Replicache. The\r\n`IndexTransaction` interface is currently not exposed.",
          "timestamp": "2020-11-09T13:50:02-08:00",
          "tree_id": "47f65101c15a5ed0c43ec62c1f52930441a79c73",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/92a9ae6a94be2926188ca55393164b40758addde"
        },
        "date": 1604958699861,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1a83d41b2c17a45e34f1ec80497c0fbdad611146",
          "message": "Remove retryCommit (#195)\n\nIt was a remnant of the Noms implementation",
          "timestamp": "2020-11-09T15:56:43-08:00",
          "tree_id": "50ca50e84b575ed30256831e3f791047873f0be6",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/1a83d41b2c17a45e34f1ec80497c0fbdad611146"
        },
        "date": 1604966292043,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "95c3d456f5ab0a4f0cbccb8b04760b4dddfd1922",
          "message": "Disable sync interval entirely since we have push.",
          "timestamp": "2020-11-10T09:58:17-10:00",
          "tree_id": "b23761308473b774d2d43a7af0178c69ad9fb6d5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/95c3d456f5ab0a4f0cbccb8b04760b4dddfd1922"
        },
        "date": 1605038381535,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3fa513d41834f9292edf06a270319c73a78b0df0",
          "message": "If a mutator is not registered use a no op function (#194)\n\nIf a mutator is not registered we log a warning but we use an empty\r\nfunction as a mutator to make repc able to move forward.\r\n\r\nFixes #188",
          "timestamp": "2020-11-10T14:37:40-08:00",
          "tree_id": "3c07c15391e190fd2cce235c8f9c8c9ca471559a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/3fa513d41834f9292edf06a270319c73a78b0df0"
        },
        "date": 1605047972638,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fe6c89c4280906ce60bf83d3a6af83cea4fe29a3",
          "message": "Remove useless check (#199)\n\nWe already ask for a limited number of results so no need to check\r\nagain.",
          "timestamp": "2020-11-11T15:24:52-08:00",
          "tree_id": "5e29f3f70a631e202e9c6127eb7df09bbd481547",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fe6c89c4280906ce60bf83d3a6af83cea4fe29a3"
        },
        "date": 1605137182456,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "ae3a7705f0f0feb8ed0935674d392a0c506e80a1",
          "message": "Docs",
          "timestamp": "2020-11-12T10:48:33-08:00",
          "tree_id": "6c1f47c2cc03b9368095a8126f1c8b02ae34594c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ae3a7705f0f0feb8ed0935674d392a0c506e80a1"
        },
        "date": 1605207008003,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "cde293103ae58f2e5a3ebebc879eaa7d747c1637",
          "message": "Add license field to package.json",
          "timestamp": "2020-11-12T10:56:48-08:00",
          "tree_id": "a86f82314b0316160944ce43a2acfbe4e4d69ff3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cde293103ae58f2e5a3ebebc879eaa7d747c1637"
        },
        "date": 1605207496325,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "1b79016e96255a56270cf38ae4e91f8cc97ff123",
          "message": "Bump version to 3.0.0.",
          "timestamp": "2020-11-12T10:57:08-08:00",
          "tree_id": "6f0a0c2770913dffb63da2cd2216d8b86083f35a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/1b79016e96255a56270cf38ae4e91f8cc97ff123"
        },
        "date": 1605207598266,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1c769258365cbc79d1e859d28d33b8a6838ad39d",
          "message": "Update README.md",
          "timestamp": "2020-11-12T11:10:33-08:00",
          "tree_id": "c21c4c24b5d31e64304810fb6de4ebfa2bad882f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/1c769258365cbc79d1e859d28d33b8a6838ad39d"
        },
        "date": 1605208327169,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "28dbc65e1f50cddeeee290c3876d1c83c5e496b1",
          "message": "The perf test broke in 92a9ae6",
          "timestamp": "2020-11-12T15:11:08-08:00",
          "tree_id": "e0e6cbc0c989026e6943e5939151fbabdaa2b0c2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/28dbc65e1f50cddeeee290c3876d1c83c5e496b1"
        },
        "date": 1605222775310,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a1fe87d990088ad4d1d8035c9baa8c7d9d4b1cad",
          "message": "Update sample/redo to use 3.0.0 (#204)\n\nEnded up copying and renaming the wasm file to public. Webpack 4 is too\r\nbroken.",
          "timestamp": "2020-11-12T15:12:07-08:00",
          "tree_id": "82a0d6944f7654c436634b71a8657b6eac390f3d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a1fe87d990088ad4d1d8035c9baa8c7d9d4b1cad"
        },
        "date": 1605222833395,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b054d40198b0d53d785f77c6229dd2ade2e58d31",
          "message": "Add more docs to wasmModule (#209)\n\nFixes #188",
          "timestamp": "2020-11-16T13:52:41-08:00",
          "tree_id": "bbe51b7f1ec47200d252a9b66377ee203576fdf0",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b054d40198b0d53d785f77c6229dd2ade2e58d31"
        },
        "date": 1605563669388,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "bfb64cb0922ee381d9257814e3de5691c8f6090e",
          "message": "Fix path in perf test",
          "timestamp": "2020-11-16T14:09:54-08:00",
          "tree_id": "771120d01ca08b58d08f87097f9717ebf569912a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/bfb64cb0922ee381d9257814e3de5691c8f6090e"
        },
        "date": 1605564826374,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "62 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "787a7d15982fa83263d6e1a3861fc535560b9b90",
          "message": "Log more errors when sync fails (#210)\n\nWe didn't use to log anything when auth failed.\r\n\r\nTowards #188",
          "timestamp": "2020-11-16T15:33:06-08:00",
          "tree_id": "d264c60afb109b7fe8e0ffb121d910f6a8721ed5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/787a7d15982fa83263d6e1a3861fc535560b9b90"
        },
        "date": 1605569721583,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "62 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e67341a42e1a4b04d317478562b43097c8d81aa5",
          "message": "Only try MAX_AUTH_RETRIES (#211)\n\nAfter that throw!\r\n\r\nTowards #188",
          "timestamp": "2020-11-16T16:04:43-08:00",
          "tree_id": "a0b8efdccb93ccb7c86bddbc43fcde70949a727a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/e67341a42e1a4b04d317478562b43097c8d81aa5"
        },
        "date": 1605571616057,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.94,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "af5dfad0efdd88d4fed71630bb0b85e76bbcdfc7",
          "message": "Group replay log lines (#212)\n\nFixes #207",
          "timestamp": "2020-11-17T10:36:01-08:00",
          "tree_id": "6737c1601a0c66493cea4599cf23feddafc94831",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/af5dfad0efdd88d4fed71630bb0b85e76bbcdfc7"
        },
        "date": 1605638293004,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "77 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "f2f1509c2218cbb7097bcb759bbc648258cf1f8d",
          "message": "Update lit-todo to Replicache 3.0, finally.\n\nGave up trying to properly migrate this tiny sample and just\ntaught sw to force-update clients on update. Good enough.",
          "timestamp": "2020-11-18T01:00:24-10:00",
          "tree_id": "58b8a3505ccc5fa3f187f0eb65c66e67e341b6c7",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f2f1509c2218cbb7097bcb759bbc648258cf1f8d"
        },
        "date": 1605697330679,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.12,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 24.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "40 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "f9fd62c5ef6af385b7790995ec0c4667c6cd8905",
          "message": "Name the Replicache instance.\n\nThis is an easy way to start fresh on the client. Because\nbackend is nuking data on every schema change, it makes clients\nunable to sync because they are at a sequence number far ahead\nof server.\n\nReally what we need to do is put a version number in the protocol\nand nuke local state when it changes but ... another day.",
          "timestamp": "2020-11-18T01:21:43-10:00",
          "tree_id": "0db7cfc3e88fd069418a848b9b5a49217d79e2d4",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f9fd62c5ef6af385b7790995ec0c4667c6cd8905"
        },
        "date": 1605698620216,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "bea82e42427901e06fea6643c9a14812c3b1799c",
          "message": "lit-todo: Minor cleanups",
          "timestamp": "2020-11-18T10:50:47-08:00",
          "tree_id": "f6bd5883afe76f49851359e9f5e95d37b7ad921f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/bea82e42427901e06fea6643c9a14812c3b1799c"
        },
        "date": 1605725564596,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 24.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 47.62,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "90c0dec2bfbfd7e8b7fcded18bd333926bb3f58d",
          "message": "Add setup function to bench\n\nThis allows us to populate the DB once for read tests. Which allows us\nto spend more time testing whart we really care about.",
          "timestamp": "2020-11-18T16:06:34-08:00",
          "tree_id": "60ebf52f489f30e9a5f331f7819ffa803bb9dc82",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/90c0dec2bfbfd7e8b7fcded18bd333926bb3f58d"
        },
        "date": 1605744547418,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "70 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ccae585afc9a41dcdcaa72e596da47c5f6b0b897",
          "message": "Allow mutator function to be called with 0 arguments (#217)",
          "timestamp": "2020-11-19T12:25:40-08:00",
          "tree_id": "988d7768889a100a39abf17699025ca8ee90de5f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ccae585afc9a41dcdcaa72e596da47c5f6b0b897"
        },
        "date": 1605817679527,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "a1c6693acd6c4bfc7c4505f6f14ce69e378b2525",
          "message": "Docs",
          "timestamp": "2020-11-19T12:26:37-08:00",
          "tree_id": "d5ae8078cd48e72f989dc924619c86df91fddc3b",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a1c6693acd6c4bfc7c4505f6f14ce69e378b2525"
        },
        "date": 1605817747975,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 24.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "3c8133610ac3f60acac909f6355b5ad307767312",
          "message": "Don't use \\0 in random strings\n\nWhen we build indexes over these values \\0 is an error which skews the\nperformance numbers a bit.\n\nTowards #218",
          "timestamp": "2020-11-19T14:36:30-08:00",
          "tree_id": "4fa9db01b712e2b13d989f01c90fcb2af491a2be",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/3c8133610ac3f60acac909f6355b5ad307767312"
        },
        "date": 1605825513211,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "b31a00ab2b39f32b77485c7c3de4e1e5f4ff09d6",
          "message": "eslint no-var",
          "timestamp": "2020-11-19T14:55:56-08:00",
          "tree_id": "c5302272b23d445256f67d367c997573516df840",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b31a00ab2b39f32b77485c7c3de4e1e5f4ff09d6"
        },
        "date": 1605826736464,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "44 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.59,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 50,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "6597500e296eea73f76ca3837851d730df97af30",
          "message": "Whoops. Fix broken sync on redo.replicache.dev.\n\nI changed the user id for the demo on the backend and changed it\non the frontend, but the bit for pusher-js was non-DRY.\n\n😬",
          "timestamp": "2020-11-19T13:57:10-10:00",
          "tree_id": "66334b44c9254e3ed4fae4feecce5e5ecb920bfe",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6597500e296eea73f76ca3837851d730df97af30"
        },
        "date": 1605830376683,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "35 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 31.25,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "62 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "18651d3c53f35b61898be43e89f89e003f3224be",
          "message": "Do one intial sync on load.\n\nThis stopped working a few commits back when I took out the timer sync.",
          "timestamp": "2020-11-19T14:54:22-10:00",
          "tree_id": "0f236e268eb2019d288a96c7ceb8f17c9a27c60c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/18651d3c53f35b61898be43e89f89e003f3224be"
        },
        "date": 1605833785066,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 50,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "d2e12a6884204fed36c4ccda45c15fa9d6ef4abf",
          "message": "Info instead of error for repeated reauth failures\n\nAlso, reduce the AMX_REAUTH_TRIES to 8.\n\nFollow up to #211",
          "timestamp": "2020-11-23T12:34:50-08:00",
          "tree_id": "fc687f99768e1326a6cc6b4fa82ee6b5df7c2b1a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d2e12a6884204fed36c4ccda45c15fa9d6ef4abf"
        },
        "date": 1606163822819,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "ad41718a61317fc46de52bd7574955d35e40d7df",
          "message": "Give up on service worker for awhile.\n\nIt's just making everything harder :(",
          "timestamp": "2020-11-23T11:45:46-10:00",
          "tree_id": "5253612c9a0a84e170d8f605880ca2536d91a87c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ad41718a61317fc46de52bd7574955d35e40d7df"
        },
        "date": 1606168076984,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.94,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.59,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "35 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "082651656e470eaf33cfff9145cd282f69a608a5",
          "message": "format",
          "timestamp": "2020-11-23T11:48:11-10:00",
          "tree_id": "4bf09e5b3c5050d81ba003612aa8c636738150bf",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/082651656e470eaf33cfff9145cd282f69a608a5"
        },
        "date": 1606168222746,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "75 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "68e9f8e73ad9ca35296af1c83bd4937643d8a1a2",
          "message": "Fix extraneous pull requests caused by disconnect() method on\nPusherjs not working when called on subscription. For some reason\nit exists on both but needs to be called on the connection.",
          "timestamp": "2020-11-23T14:08:48-10:00",
          "tree_id": "02061582ca26a102aaccb3f9392993acae1aadfc",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/68e9f8e73ad9ca35296af1c83bd4937643d8a1a2"
        },
        "date": 1606176678369,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "d7770b9d5b213c7ef7ef3d794be3d5d60f5e5c7a",
          "message": "Bump highlight.js from 9.18.1 to 9.18.5\n\nBumps [highlight.js](https://github.com/highlightjs/highlight.js) from 9.18.1 to 9.18.5.\n- [Release notes](https://github.com/highlightjs/highlight.js/releases)\n- [Changelog](https://github.com/highlightjs/highlight.js/blob/9.18.5/CHANGES.md)\n- [Commits](https://github.com/highlightjs/highlight.js/compare/9.18.1...9.18.5)\n\nSigned-off-by: dependabot[bot] <support@github.com>",
          "timestamp": "2020-11-30T10:54:17-08:00",
          "tree_id": "404e54d5b9b2201844c49552db85346dcdce244a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d7770b9d5b213c7ef7ef3d794be3d5d60f5e5c7a"
        },
        "date": 1606762594654,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.57,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "16 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.49,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "66 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "194a53fe14d7202cd90e77b8f924bbea36ed0fe6",
          "message": "Docs",
          "timestamp": "2020-12-01T12:05:51-08:00",
          "tree_id": "85b0ce3c5a537495f8ffd3419b1551fe67ce051d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/194a53fe14d7202cd90e77b8f924bbea36ed0fe6"
        },
        "date": 1606854369095,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "34 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "72 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "529baf09a6806d816d1b41ddbc592de42e2da55d",
          "message": "Rename validate to cjs",
          "timestamp": "2020-12-01T12:15:53-08:00",
          "tree_id": "c8fcd7bdfa51ce0cb62e4463388897f0d485787f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/529baf09a6806d816d1b41ddbc592de42e2da55d"
        },
        "date": 1606854560588,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "9f14305096c586b0182aedf4021111400c4bbd79",
          "message": "Add `--devtools` flag to perf runner\n\nThis makes it easier to do a performance recording in Devtools",
          "timestamp": "2020-12-03T11:27:49-08:00",
          "tree_id": "cf1f66ef224f969c3c50aaefdc16bba81fdaf5a9",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/9f14305096c586b0182aedf4021111400c4bbd79"
        },
        "date": 1607023805474,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "39 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8ca0cd78d981e8ba8eb9e54a5c5f5d37b264b258",
          "message": "Simplify ScanIterator further (#228)",
          "timestamp": "2020-12-03T11:44:03-08:00",
          "tree_id": "8594e11946de6bbbca8b6621a6713541895fac86",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8ca0cd78d981e8ba8eb9e54a5c5f5d37b264b258"
        },
        "date": 1607024778601,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "34 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5a046918acc198a489b9be6bf7286f1a8cb4b2b7",
          "message": "Make sure syncInterval option is documented",
          "timestamp": "2020-12-03T15:09:41-08:00",
          "tree_id": "6c7dd39a2fd563166072c58234cada2b6224d7c2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5a046918acc198a489b9be6bf7286f1a8cb4b2b7"
        },
        "date": 1607037107137,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "76 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aa@chromium.org",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d24aa5f850b72905e04a0f298c0867dcc296e17c",
          "message": "Update README.md",
          "timestamp": "2020-12-07T01:58:46-10:00",
          "tree_id": "c500a549f34aeede6566ec0f2e85787576b9b65d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d24aa5f850b72905e04a0f298c0867dcc296e17c"
        },
        "date": 1607342454094,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "738168fd572d77b32a35bf3105cc40d0bbecd118",
          "message": "Use Smis for kind",
          "timestamp": "2020-12-08T13:11:51-08:00",
          "tree_id": "b012d9dcce023403a5af1a99629e0af07a177193",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/738168fd572d77b32a35bf3105cc40d0bbecd118"
        },
        "date": 1607462050784,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "32 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 33.33,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "64 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "c1afb7e2eba461cd273dc7113e236b3d9f602864",
          "message": "Remove some old replicache-client left overs",
          "timestamp": "2020-12-10T13:02:35-08:00",
          "tree_id": "216f1b2d4da52993eba3569e723a3232fa624335",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/c1afb7e2eba461cd273dc7113e236b3d9f602864"
        },
        "date": 1607634294352,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "33 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "73beb7eb216d278df69081dc12bcd5cc779f15c6",
          "message": "Fix typo",
          "timestamp": "2020-12-11T22:50:53-08:00",
          "tree_id": "50ef489005bcc51bb02b7625b6b2af5579655115",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/73beb7eb216d278df69081dc12bcd5cc779f15c6"
        },
        "date": 1607755992233,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.87,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "33 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "e90d13cf27049c162bd07218d5d2705c50832543",
          "message": "Bump ini from 1.3.5 to 1.3.8 in /sample/next\n\nBumps [ini](https://github.com/isaacs/ini) from 1.3.5 to 1.3.8.\n- [Release notes](https://github.com/isaacs/ini/releases)\n- [Commits](https://github.com/isaacs/ini/compare/v1.3.5...v1.3.8)\n\nSigned-off-by: dependabot[bot] <support@github.com>",
          "timestamp": "2020-12-14T11:51:22-08:00",
          "tree_id": "c03c0e86956562e96113c7695d60806123e3f40d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/e90d13cf27049c162bd07218d5d2705c50832543"
        },
        "date": 1607975625450,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "32 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ac61a8ec312d713eb20849a843e7ea702183a510",
          "message": "ScanIterator: Get rid of stream controller (#238)\n\nAt this point and for the foreseeable future, the actual iteration is\r\nsynchronous so enqueueing using a ReadableStreamDefaultController is\r\noverkill (it will just put all the entries in an internal list).\r\n\r\nWe might want to allow some other way of iterating over the scan result\r\nthat allows early exits but that requires a change in the API so we can\r\ndeal with that later.\r\n\r\nFollow up to #235",
          "timestamp": "2020-12-15T11:00:30-08:00",
          "tree_id": "6c89b4a12b66f3720925feaec095bf5b539ba7c9",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ac61a8ec312d713eb20849a843e7ea702183a510"
        },
        "date": 1608058968940,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "40 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "69 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "f3fff7dfd4df9b8534e11154c573615258817269",
          "message": "Call subscribe onData when query retval changes\n\nFor `subscribe`, we now only call `onData` if the return value of the\n`body` function changes compared to last time.\n\nThis requires that we store the last return value to be able to compare\nwith that.\n\nWe consider the values equal if they behave like `JSON.stringify(a) ===\nJSON.stringify(b)` except for the ordering of the property keys.\n\n*BREAKING CHANGE*\n\nThis is a breaking API change because subscribe now has a slightly more\nrestricted type which can lead to new TypeScript type errors.\n\nAlso, we changed the type signature from `ToJSON` to `JSONValue` in a\nfew places.\n\nhttps://github.com/rocicorp/replicache-sdk-js/issues/63",
          "timestamp": "2020-12-15T11:24:04-08:00",
          "tree_id": "2ecee161e748fc0f70f93a40c2e32ba1f9cc0c9e",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f3fff7dfd4df9b8534e11154c573615258817269"
        },
        "date": 1608060399631,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "35 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 30.3,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "59 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "4016d987efcb1383325d3d7845472e73970cf6a1",
          "message": "Remove some deprecated API\n\nExport all reachable types so that they get documented",
          "timestamp": "2020-12-15T11:50:32-08:00",
          "tree_id": "8aa1381fb8b2fbb396871531d67328d80643be76",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/4016d987efcb1383325d3d7845472e73970cf6a1"
        },
        "date": 1608061958853,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 47.62,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "6b5faf1ddd550395ac6e1eb509a4c5b826b335f7",
          "message": "Docs",
          "timestamp": "2020-12-15T11:52:30-08:00",
          "tree_id": "7327827cc445711c462ef9eeca39d5beed9aa371",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6b5faf1ddd550395ac6e1eb509a4c5b826b335f7"
        },
        "date": 1608062093572,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "84ec679ad7ee71258b900c7d9e3fa4fc140418b8",
          "message": "Bump version to 4.0.0.",
          "timestamp": "2020-12-15T11:59:56-08:00",
          "tree_id": "85bb232ba71b0a2e0685a8fdb6b0131d76d20b8f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/84ec679ad7ee71258b900c7d9e3fa4fc140418b8"
        },
        "date": 1608062547161,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 33.33,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "65 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "b07bc1c0fbfa166be5d374ff3bd28839dda854ec",
          "message": "Add perf test for createIndex\n\nTowards #146",
          "timestamp": "2020-12-15T12:59:20-08:00",
          "tree_id": "9f4d32396790ab790b999308920ba45cf359084e",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b07bc1c0fbfa166be5d374ff3bd28839dda854ec"
        },
        "date": 1608066150683,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "40 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.05,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "585c3b98f2a74bed86adbdd488250b0ffc2e8a29",
          "message": "Update JSDoc for subscribe",
          "timestamp": "2020-12-15T14:14:08-08:00",
          "tree_id": "c3b04b571952b1e8ad5185a3e8fdcb40dee743e4",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/585c3b98f2a74bed86adbdd488250b0ffc2e8a29"
        },
        "date": 1608070651936,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "70 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.37,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "9b2d1de7e425020644a41d806d83876cf8d6b56d",
          "message": "Update sample/lit-todo to 4.0.0\n\nFixes #190",
          "timestamp": "2020-12-15T14:29:40-08:00",
          "tree_id": "90c8812b2d52ef36e4af736d8c0a4a4bed5db874",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/9b2d1de7e425020644a41d806d83876cf8d6b56d"
        },
        "date": 1608071554152,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 24.66,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "93 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 24.39,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.18,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8da53e8c655dddc7dbaf847a286c684c41f39289",
          "message": "Update sample/redo to 4.0.0 (#244)",
          "timestamp": "2020-12-16T09:55:53-08:00",
          "tree_id": "171001ebb5b78136944b3de7b3bd478a37ded5d5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8da53e8c655dddc7dbaf847a286c684c41f39289"
        },
        "date": 1608141569379,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "85 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.87,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "37 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.07,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "f62ebdf502eb16ec557f169a3e52b83938c2b8d4",
          "message": "Relax JSONObject type a bit\n\nWe need to allow undefined after all. It is common to use optional\nfields and TypeScript cannot distinguish those from the value undefined.",
          "timestamp": "2020-12-16T11:21:11-08:00",
          "tree_id": "5c3511f89b564a4cf5208c855d516f010b5fc3ca",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f62ebdf502eb16ec557f169a3e52b83938c2b8d4"
        },
        "date": 1608146643104,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "73 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5ace4fae05477ad1953d768723deccab8315f77d",
          "message": "Bump version to 4.0.1.",
          "timestamp": "2020-12-16T11:22:50-08:00",
          "tree_id": "da50108493618e0b35e4fe3b2a0f421ada3dca5c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5ace4fae05477ad1953d768723deccab8315f77d"
        },
        "date": 1608146757307,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "84 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "4c2e7da0062370aad7323847e944171b8902f62d",
          "message": "Run tests on WebKit again",
          "timestamp": "2020-12-16T11:22:21-08:00",
          "tree_id": "d706cdfc688fb1c100f4f1eb77089baf576c0d0f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/4c2e7da0062370aad7323847e944171b8902f62d"
        },
        "date": 1608146798994,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 33.33,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "65 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fb69ba2034ae0da662007c5b991ba5154f744d2b",
          "message": "Update redo sample to 4.0.1\n\nThis is to allow Partial JSON objects in mutator args again.",
          "timestamp": "2020-12-16T11:47:21-08:00",
          "tree_id": "fb47a3cce1d444582e00ddcbeed4a11e0faccc37",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fb69ba2034ae0da662007c5b991ba5154f744d2b"
        },
        "date": 1608148224275,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.52,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "36 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.95,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "829f378959d2a8736206af25eff83dce59d66d76",
          "message": "Update Next sample to 4.0.0 (#245)",
          "timestamp": "2020-12-16T15:12:31-08:00",
          "tree_id": "827fc47fd550f82c2f4cd79397c3a875af6a3f9d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/829f378959d2a8736206af25eff83dce59d66d76"
        },
        "date": 1608160526390,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.12,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.49,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.94,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "34 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "67 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 17.86,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "35 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.92,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1ad47153aaf5e9dff0b500034746f00c478b78b1",
          "message": "Use esbuild for sample/cal (#248)\n\nGet rid of headache infusing webpack.\r\n\r\n```\r\n$ time node build.js\r\nnode build.js  0.21s user 0.09s system 72% cpu 0.412 total\r\n```",
          "timestamp": "2020-12-16T15:13:18-08:00",
          "tree_id": "9cd6c073bf072511d6da2875431686aca2dc457b",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/1ad47153aaf5e9dff0b500034746f00c478b78b1"
        },
        "date": 1608160603832,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "39 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "73 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.83,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.55,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "cd9de5fae552480421b2236a40b7ab5d67e76a96",
          "message": "Use Promise.resolve instead of queueMicrotask\n\nSome old iOS (?) Safari is missing it",
          "timestamp": "2020-12-18T21:25:33-08:00",
          "tree_id": "c9646fd41cf61f3b74ff42edc9254eaa871a4b9a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cd9de5fae552480421b2236a40b7ab5d67e76a96"
        },
        "date": 1608355721531,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "77 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.87,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.77,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "f6927d24e08816d69dcbd3b3fd1e5847558254c1",
          "message": "Update npm deps",
          "timestamp": "2021-01-04T11:47:19-08:00",
          "tree_id": "108590fd302f046533df481886c90a63ce203ee0",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f6927d24e08816d69dcbd3b3fd1e5847558254c1"
        },
        "date": 1609790194127,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "35 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 33.33,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "66 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.87,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "37 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.86,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "932976225b2f09b59fb31e8da1f8f6be9f9edcde",
          "message": "Update Typedoc to 0.20\n\nTypedoc now officially supports documenting the exported symbols. We\nused to use a branch/beta to get this behavior\n\nIt also stopped using highlight.js which GitHub was nagging us about...",
          "timestamp": "2021-01-05T10:44:11-08:00",
          "tree_id": "17be7842371e3b83352b85e5a5af6fd9c5548fd4",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/932976225b2f09b59fb31e8da1f8f6be9f9edcde"
        },
        "date": 1609872426292,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "40 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "67 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8c17a834ee1a829e9677b2ce687dfeb7a90839dc",
          "message": "master -> main",
          "timestamp": "2021-01-14T22:00:48-08:00",
          "tree_id": "404945d4e5f2e667e8a5e6179e19a48cb38991e5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8c17a834ee1a829e9677b2ce687dfeb7a90839dc"
        },
        "date": 1610690629031,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "71 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.28,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8b4a2009bebdb566e8b58284ab593e6596aff9ac",
          "message": "More jsdoc (#253)\n\nEverything should have JSDoc\r\n\r\nCo-authored-by: Aaron Boodman <aaron@aaronboodman.com>",
          "timestamp": "2021-01-15T14:20:41-08:00",
          "tree_id": "09f588dc8ba7fd914285998effead8928a2b32bc",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8b4a2009bebdb566e8b58284ab593e6596aff9ac"
        },
        "date": 1610749413955,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "84 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.98,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "0aa15671aa02c6cffbbe582ccd595fd4332c352a",
          "message": "Add test for type checking index/key",
          "timestamp": "2021-01-15T14:38:37-08:00",
          "tree_id": "7ee910d07905d2bf2f297379522352a1d94c7163",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/0aa15671aa02c6cffbbe582ccd595fd4332c352a"
        },
        "date": 1610750507118,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fd262f8c7bcee6402cd32d4b3b3c85f7aa3bcd68",
          "message": "Allowlist",
          "timestamp": "2021-01-20T13:35:23-08:00",
          "tree_id": "43bee7494b4862ccd5991c12dc45f38b97dcaef9",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fd262f8c7bcee6402cd32d4b3b3c85f7aa3bcd68"
        },
        "date": 1611178695199,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.9,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "81 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.85,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58d61850feb94b93056ce5e7d06b9c284495e1d5",
          "message": "Get rid of create-react-app gunk (#256)\n\nUse esbuild and light-server instead",
          "timestamp": "2021-01-21T13:02:46-08:00",
          "tree_id": "e5cbd6fd33b68c4f791d64be6c7043f9ee6aba04",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/58d61850feb94b93056ce5e7d06b9c284495e1d5"
        },
        "date": 1611263154071,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "72 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.52,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "37 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "db9a2d80101a559a2213a7838e8346a096c43d67",
          "message": "Update README.md",
          "timestamp": "2021-01-25T14:35:50-10:00",
          "tree_id": "84922a7ebe146f401a05ba01887b444d434a8703",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/db9a2d80101a559a2213a7838e8346a096c43d67"
        },
        "date": 1611621578407,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "39 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.28,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "7a7934054623980dc1a697ce63d1409dd5cc70ba",
          "message": "Update comments too",
          "timestamp": "2021-01-26T11:36:47-08:00",
          "tree_id": "e0205207cab41f83430112d07efe0c9d12833c43",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/7a7934054623980dc1a697ce63d1409dd5cc70ba"
        },
        "date": 1611690006466,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "68 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.29,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "64cfe22a783272dc32d24d183080debb9ded6afc",
          "message": "master -> main",
          "timestamp": "2021-01-26T11:39:17-08:00",
          "tree_id": "d27fcc1a4c411859340aaa1ebd6af572ea4d8f57",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/64cfe22a783272dc32d24d183080debb9ded6afc"
        },
        "date": 1611690144069,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "76 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.05,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "9fb34eeee10fb215f3e639cc73d388827d787f1f",
          "message": "fix link to sample\n\nThe link was pointing to cal which is a bit confusing",
          "timestamp": "2021-01-26T11:41:37-08:00",
          "tree_id": "643fc57a6d9e8f4ea24c074c7415a17e3ad62300",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/9fb34eeee10fb215f3e639cc73d388827d787f1f"
        },
        "date": 1611690281249,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "85 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "6aa632b5aedb60697e4c59c143679cadb20df94d",
          "message": "Trying to fix links back to github\n\nBy using https://github.com/gdelmas/typedoc-plugin-sourcefile-url\n\nand updating vercel's build command to something likeL\n\nnpm run doc -- --sourcefile-url-prefix https://github.com/rocicorp/replicache-sdk-js/blob/`git rev-parse --short HEAD`/src/",
          "timestamp": "2021-01-26T21:03:03-08:00",
          "tree_id": "6e5d9274219446b2f9420153bb2d9767953872f6",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6aa632b5aedb60697e4c59c143679cadb20df94d"
        },
        "date": 1611723947362,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "93 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.57,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "25216c412fcfbef0015e51a60a7d45a3855e6009",
          "message": "More type checking for register param(s)",
          "timestamp": "2021-01-29T15:20:30-08:00",
          "tree_id": "c0d5adae648509392cd9999eff33c3c48662b51a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/25216c412fcfbef0015e51a60a7d45a3855e6009"
        },
        "date": 1611962588081,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.12,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 47.62,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "94 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.67,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "4a5126d40d809ca0edb981883fe93cc8adb6b5ed",
          "message": "Add clientViewURL to ReplicacheOptions\n\nThis is now needed to allow talking to you own data layer.\n\nRoll deps\n\nTHIS IS A BREAKING CHANGE and requires a major version.",
          "timestamp": "2021-02-01T11:59:40-08:00",
          "tree_id": "3d749bf965f1f0da47a121994140e1bd6d4fba5c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/4a5126d40d809ca0edb981883fe93cc8adb6b5ed"
        },
        "date": 1612209749243,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "82 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "2a5a443c61f0ecb3162f0e5bc1b25d6d474cd594",
          "message": "Bump version to 5.0.0.",
          "timestamp": "2021-02-01T12:02:52-08:00",
          "tree_id": "169f613e454f1231379b82a151590531a6f10f88",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2a5a443c61f0ecb3162f0e5bc1b25d6d474cd594"
        },
        "date": 1612209999188,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.57,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.59,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "77 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 25.64,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "331f43773f3c11c130c926a463b7f7b8dbda6cb2",
          "message": "Migrate redo to 5.0.0",
          "timestamp": "2021-02-01T12:33:59-08:00",
          "tree_id": "0d9b123ca323b4440b0b37a9eaaf5cf5249081d3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/331f43773f3c11c130c926a463b7f7b8dbda6cb2"
        },
        "date": 1612211806394,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.9,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "90 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 24.39,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.15,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "43efb3d068604f52a4e68be67ca4e461c23dd08c",
          "message": "Migrate lit-todo to 5.0.0",
          "timestamp": "2021-02-01T12:54:33-08:00",
          "tree_id": "a51ef6d0438197a1ca346af5c947b08946d2526f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/43efb3d068604f52a4e68be67ca4e461c23dd08c"
        },
        "date": 1612213050636,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.83,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "0186c096d5ab575a034c4de65465d1cfd451778e",
          "message": "Migrate cal to 5.0.0",
          "timestamp": "2021-02-01T14:19:19-08:00",
          "tree_id": "bc623b33448ae59e082c7c1f4b5565a8254cd555",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/0186c096d5ab575a034c4de65465d1cfd451778e"
        },
        "date": 1612218148079,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "72 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.95,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "ceb75164394005aa5a86322ad510ee1396fb5a3f",
          "message": "Bump version to 5.0.1.",
          "timestamp": "2021-02-01T14:56:36-08:00",
          "tree_id": "65f251bf015eaedddb884e3e50b1a113a04aaefe",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ceb75164394005aa5a86322ad510ee1396fb5a3f"
        },
        "date": 1612220389953,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "81 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "152a97f902fd17cfdc8ca15ce84c3d7d2d9b42be",
          "message": "update docs, example for self-signup (#260)",
          "timestamp": "2021-02-02T09:44:42-10:00",
          "tree_id": "13de462eae754f64318d2110056bbb52525a5fb2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/152a97f902fd17cfdc8ca15ce84c3d7d2d9b42be"
        },
        "date": 1612295261455,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "39 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "71 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.28,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "7e3ef9b4b10009c7973ec56caa7687ce2c2f0e3b",
          "message": "Bump version to 5.1.0.",
          "timestamp": "2021-02-02T13:45:18-08:00",
          "tree_id": "e25fc00fc4917a1c5213ffc968ccceb8cb811220",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/7e3ef9b4b10009c7973ec56caa7687ce2c2f0e3b"
        },
        "date": 1612302513554,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "91 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "46 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "5a195db939055b24269c21746f97518cee96a100",
          "message": "New quickstart!",
          "timestamp": "2021-02-04T13:58:30-10:00",
          "tree_id": "602755a034df225c36ec16691ea00e2167e9b9c3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5a195db939055b24269c21746f97518cee96a100"
        },
        "date": 1612483281138,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "89bc7779270760641c8c17cca741d974cd6ab888",
          "message": "Update QUICKSTART.md",
          "timestamp": "2021-02-04T14:14:00-10:00",
          "tree_id": "ad4774a3c50f07d0b6a6eea18fe23efe4f2b2ce1",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/89bc7779270760641c8c17cca741d974cd6ab888"
        },
        "date": 1612484239328,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "82 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2dda6b7407a93b3fc7d0057ae3d65cbd67e85e3e",
          "message": "Update README.md",
          "timestamp": "2021-02-04T14:14:48-10:00",
          "tree_id": "e5586e832945b677ae668170c7072231fbe4b7bf",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2dda6b7407a93b3fc7d0057ae3d65cbd67e85e3e"
        },
        "date": 1612484256172,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "39 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.31,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b4413758d74d930f438d1c5c81b2eea1292e4633",
          "message": "Update QUICKSTART.md",
          "timestamp": "2021-02-04T14:36:33-10:00",
          "tree_id": "de4fe950266570c8924ca59a0b0008c53b6a8fe6",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b4413758d74d930f438d1c5c81b2eea1292e4633"
        },
        "date": 1612485565603,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.87,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.08,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cad481775afa6c772641f61fb9f2e8b0cffc4bc9",
          "message": "Update QUICKSTART.md",
          "timestamp": "2021-02-04T14:42:31-10:00",
          "tree_id": "e89a637fbd693990b18fde8e5f96f285730b3a6e",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cad481775afa6c772641f61fb9f2e8b0cffc4bc9"
        },
        "date": 1612485937973,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "39 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "68 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cd0cd88965fd0e2bedc99f70ba21bcc0b5b289ea",
          "message": "Update QUICKSTART.md",
          "timestamp": "2021-02-04T22:12:45-10:00",
          "tree_id": "6b6e374c38af1367a0fa43079967246d4c02686d",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cd0cd88965fd0e2bedc99f70ba21bcc0b5b289ea"
        },
        "date": 1612512942707,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.49,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "88 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.59,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8ff0cfa06fcc2d52963ac69fe00f16c8a3c0ef0e",
          "message": "Update QUICKSTART.md",
          "timestamp": "2021-02-04T22:31:44-10:00",
          "tree_id": "7102618026f5ecc1a8afe36f58f6180e3fe80812",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8ff0cfa06fcc2d52963ac69fe00f16c8a3c0ef0e"
        },
        "date": 1612514085189,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "66 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.46,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a676569918ca0d0fa48c43f365423d90317bfee0",
          "message": "Update QUICKSTART.md",
          "timestamp": "2021-02-04T22:39:48-10:00",
          "tree_id": "b192bd409f8f367e7dc4c752909bb29e57a45a67",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a676569918ca0d0fa48c43f365423d90317bfee0"
        },
        "date": 1612514570746,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "40 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "70 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.78,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7c263298c21e072615d4d39ff588829c625851f6",
          "message": "Update QUICKSTART.md",
          "timestamp": "2021-02-04T22:40:07-10:00",
          "tree_id": "c6217d8bce52aa4fdaae8e1f17e072e582aa5e86",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/7c263298c21e072615d4d39ff588829c625851f6"
        },
        "date": 1612514581710,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "73 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 25,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.62,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "12 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d8ab523e341be05a8596dc433f29ecc387f1cee7",
          "message": "Update README.md",
          "timestamp": "2021-02-07T12:30:03-10:00",
          "tree_id": "253887339bfdf19fb4c16ba907c359fdf2afdea3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d8ab523e341be05a8596dc433f29ecc387f1cee7"
        },
        "date": 1612737192709,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "69 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "2cd817749e559d53c876b283a31ddf58b13fca70",
          "message": "Update some deps",
          "timestamp": "2021-02-10T15:04:30-08:00",
          "tree_id": "b06382d8668d5a0a69ea5bbb4eca0cd9394180b3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2cd817749e559d53c876b283a31ddf58b13fca70"
        },
        "date": 1612998473312,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "34 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "70 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.87,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "1c64a0a1075be21819d7902fa10cc70bbc002e4c",
          "message": "Fix formatting",
          "timestamp": "2021-02-10T21:36:32-08:00",
          "tree_id": "b08127d57c2485c401e8031bc2e38020221d81a0",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/1c64a0a1075be21819d7902fa10cc70bbc002e4c"
        },
        "date": 1613021972921,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "91 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "46 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.03,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fc1f4f67d1647a91c8b80d32d273039b62336e3c",
          "message": "Revert \"Fix formatting\"\n\nThis reverts commit 1c64a0a1075be21819d7902fa10cc70bbc002e4c.",
          "timestamp": "2021-02-10T21:38:27-08:00",
          "tree_id": "b06382d8668d5a0a69ea5bbb4eca0cd9394180b3",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fc1f4f67d1647a91c8b80d32d273039b62336e3c"
        },
        "date": 1613022105286,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "71 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.81,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.38,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "b0ccc30bc453d3427e632b769086afeb74222e97",
          "message": "Format again",
          "timestamp": "2021-02-10T21:41:21-08:00",
          "tree_id": "b08127d57c2485c401e8031bc2e38020221d81a0",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/b0ccc30bc453d3427e632b769086afeb74222e97"
        },
        "date": 1613022258062,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "40 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.81,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5b73d43078af03a51bd087936bb4a103b709d4e0",
          "message": "Add a write/subscribe/get roundtrip performance test\n\nThis tests the amount of time it takes to do a mutation, dispatching the\nsubscribe and then doing the get.",
          "timestamp": "2021-02-10T21:55:07-08:00",
          "tree_id": "97e0ebf3670a341848c629746b410bea524020f5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5b73d43078af03a51bd087936bb4a103b709d4e0"
        },
        "date": 1613023088499,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "82 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 111.11,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "210 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.31,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5c77b16a5310eafbce81ac654efd8fcc8ce6bdec",
          "message": "Use the html reporter for tests again",
          "timestamp": "2021-02-11T10:28:58-08:00",
          "tree_id": "bb8a08970f5120d81b6391bf223f22f265d341a7",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/5c77b16a5310eafbce81ac654efd8fcc8ce6bdec"
        },
        "date": 1613068344824,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.89,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "178 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "6607afc6c7ecb56185071b7a716e3039f6750174",
          "message": "Make sure clientViewURL is absolute\n\nFixes #273",
          "timestamp": "2021-02-11T11:01:10-08:00",
          "tree_id": "d45de2aefc2dbf545614b00fcf9650e636e1b2b4",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6607afc6c7ecb56185071b7a716e3039f6750174"
        },
        "date": 1613070259685,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "39 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 31.25,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "60 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 83.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "155 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.55,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "737c33ab7b216976688d056fe75d76edb3939409",
          "message": "Add useMemstore to ReplicacheOptions (#278)\n\n* Add useMemstore to ReplicacheOptions\r\n\r\n* Roll repc to 0.19.0",
          "timestamp": "2021-02-17T13:36:29-08:00",
          "tree_id": "4bbf0f1736da0a115ce92f7594e47c39d9dab289",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/737c33ab7b216976688d056fe75d76edb3939409"
        },
        "date": 1613598404532,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "88 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 125,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "223 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "46 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.21,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "e1bb09dce09bff839669aaa7bc05b2c7cf43cd08",
          "message": "Fix JSDoc link to closed",
          "timestamp": "2021-02-17T13:52:35-08:00",
          "tree_id": "9ba6f1dd6484ee2e63e980bb9050aacf239597ff",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/e1bb09dce09bff839669aaa7bc05b2c7cf43cd08"
        },
        "date": 1613599230927,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "188 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.9,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e55998b8a4d524f8434b779f2fb6fcd595a73d61",
          "message": "Add isEmpty() (#269)\n\nThis is purely done outside Repc at the moment.\r\n\r\nFixes #264",
          "timestamp": "2021-02-17T13:56:01-08:00",
          "tree_id": "28cc3b8b307eca4b9c7dc89be6db5862d489ca0c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/e55998b8a4d524f8434b779f2fb6fcd595a73d61"
        },
        "date": 1613599420336,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.9,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "76 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 76.92,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "197 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.08,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fa6df729df398ac9fe6f0f00bd6affe065c735c4",
          "message": "Update typedoc version",
          "timestamp": "2021-02-17T14:03:38-08:00",
          "tree_id": "40ac0947d2e8ad080c78a5dd996ca7691db97030",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fa6df729df398ac9fe6f0f00bd6affe065c735c4"
        },
        "date": 1613600309500,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 125,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "214 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.95,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "62126c53e60e3acc8d2ad2d383621c7957e7d654",
          "message": "Remove docs folder (#279)\n\nNo need to keep this folder",
          "timestamp": "2021-02-17T14:25:11-08:00",
          "tree_id": "3b4942d499955ba6b55dbe01999f662bee295dec",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/62126c53e60e3acc8d2ad2d383621c7957e7d654"
        },
        "date": 1613601809659,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "92 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 125,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "237 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.81,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.15,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "129dbe381d27efb02371c0a69d0d96cd1fb0270f",
          "message": "Bump version to 5.2.0.",
          "timestamp": "2021-02-17T14:29:01-08:00",
          "tree_id": "04bb69334396f80845a36fd61727e924c9a45a1b",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/129dbe381d27efb02371c0a69d0d96cd1fb0270f"
        },
        "date": 1613601854606,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "35 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 32.26,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "64 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 83.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "153 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "19997c2894acf268e3423d6e9a0aaa9a5ef59505",
          "message": "Prevent multiple queued up syncs\n\nMultiple calls to sync during an in progress sync queued up all those\nsyncs to later be called sequentially.\n\nFixes #277",
          "timestamp": "2021-02-17T21:02:58-08:00",
          "tree_id": "48573fb4042b26042fafa7369c14863c5bc3ad09",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/19997c2894acf268e3423d6e9a0aaa9a5ef59505"
        },
        "date": 1613624749747,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "80 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 111.11,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "206 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "8e559a6f79a98d2cd82bf49cb29d2fd20d53156b",
          "message": "Add a teardown method to perf tests\n\nAllows reusing the replicache instance between the test iterations\n\nThis is useful when testing the perf with a memstore because without\nthis change we close the replicache db which clears all the data.",
          "timestamp": "2021-02-22T09:48:37-08:00",
          "tree_id": "f87342a3ddcea4acadbade92080b128f2c323bd2",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/8e559a6f79a98d2cd82bf49cb29d2fd20d53156b"
        },
        "date": 1614016295969,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "48 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 28.57,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "57 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 62.5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "122 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.24,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "6f1edf0cd036501dc2140fe83577760aaa629fc0",
          "message": "Make sure we unsubscribe in the perf test\n\nWe were accumulating lots of subscriptions. Oops!",
          "timestamp": "2021-02-22T11:13:20-08:00",
          "tree_id": "6e85c76874c5bc8ab17a3805add930e7d09cb549",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/6f1edf0cd036501dc2140fe83577760aaa629fc0"
        },
        "date": 1614021363102,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 25.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "50 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 47.62,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "93 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 125,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "235 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.85,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "98e0a6d32c4c84cce77478a832f3b6991d3491e2",
          "message": "Fix missing type defs for index RPCs",
          "timestamp": "2021-03-01T08:28:01-08:00",
          "tree_id": "ecf94d0aaba7aa47699f23ce59764ff6339f1550",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/98e0a6d32c4c84cce77478a832f3b6991d3491e2"
        },
        "date": 1614616261383,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 27.9,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "54 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 27.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "78 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 83.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "197 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 28.57,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.62,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "12 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "0817053c7fef45bb76509543ce7515c169e8ec5c",
          "message": "Do not sync on replay",
          "timestamp": "2021-03-02T11:32:54-08:00",
          "tree_id": "b9c921434bd47dd89fecd1836687a53e9c02c976",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/0817053c7fef45bb76509543ce7515c169e8ec5c"
        },
        "date": 1614713765652,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 34.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "67 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "166 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fcd2a6232a422dc968c7f15896654b73502f97bc",
          "message": "DiffSync (#284)\n\nBreaking Change!\r\n\r\nThis is the JS side of https://github.com/rocicorp/repc/issues/290\r\n\r\nIt removes the diff-server and instead does pulls directly from the data layer.\r\n\r\nWe also split apart sync into pull & push",
          "timestamp": "2021-03-03T15:07:13-08:00",
          "tree_id": "e08a18476b0da5355b54580cda8ffa975bb5aaca",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/fcd2a6232a422dc968c7f15896654b73502f97bc"
        },
        "date": 1614813019778,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "74 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "149 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.52,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "37 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.08,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "bd19432c96a106994b8de5531e6644a672594819",
          "message": "Bump version to 6.0.0.",
          "timestamp": "2021-03-03T15:20:26-08:00",
          "tree_id": "3a50a27fc6fef6306bdf16ce6cd7756d3bc828ae",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/bd19432c96a106994b8de5531e6644a672594819"
        },
        "date": 1614813850487,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.37,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.94,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "76 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "152 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.9,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "2b74ed21129ee8857783183739b64fdb548f3da6",
          "message": "6.0.0-beta.2",
          "timestamp": "2021-03-03T15:24:42-08:00",
          "tree_id": "5f7e41a9aedb7d962ed82ef56a926fdffe42e790",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2b74ed21129ee8857783183739b64fdb548f3da6"
        },
        "date": 1614814218462,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.62,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "40 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 40,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "78 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 71.43,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "159 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.08,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d32aec2b964a4eff280d439a2a4196037baad951",
          "message": "Get rid of diff-server (#293)",
          "timestamp": "2021-03-03T16:02:08-08:00",
          "tree_id": "191bb45a4cf766b594296361559fe3fa9a91540a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d32aec2b964a4eff280d439a2a4196037baad951"
        },
        "date": 1614816326183,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 37.04,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "73 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "151 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 25.64,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "52 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.56,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a2b20b6d14e526b9a4fd038631fb86d2f1f08443",
          "message": "Remove some more references to diff server (#295)",
          "timestamp": "2021-03-04T10:11:38-08:00",
          "tree_id": "cd993fb6b81e8d772cf8155b7c46dbe2656546bc",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a2b20b6d14e526b9a4fd038631fb86d2f1f08443"
        },
        "date": 1614881684461,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "71 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 83.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "143 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.9,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c3b3facd6c31cb6d3090c9d3cf8c4ae2fed55e9d",
          "message": "Update package.json",
          "timestamp": "2021-03-04T10:04:37-10:00",
          "tree_id": "edaaf42727681d7d9bcbbd2ae3bbdad0be1414f4",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/c3b3facd6c31cb6d3090c9d3cf8c4ae2fed55e9d"
        },
        "date": 1614888458140,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.87,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 25.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "51 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "70 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "156 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.81,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.35,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a00fef353d6dae2b3f88983ab8cef136e97c3984",
          "message": "preserveSymlinks in tsconfig (#297)\n\nI was seeing red squigglies",
          "timestamp": "2021-03-04T12:27:02-08:00",
          "tree_id": "6977818abfd16d18588337892999936b0388b24a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/a00fef353d6dae2b3f88983ab8cef136e97c3984"
        },
        "date": 1614889804697,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "76 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "163 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "0496f50ba2922d9ab11c25f85fcbcc8864ca7487",
          "message": "Point links to stable docs.\n\nWe need to move this all into a docs system so it can be versioned\ntogether, but another day. This works-ish for now.",
          "timestamp": "2021-03-04T16:56:42-10:00",
          "tree_id": "84d5a8dd808949f0697dd0db4f78ffd12165899f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/0496f50ba2922d9ab11c25f85fcbcc8864ca7487"
        },
        "date": 1614913366895,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "48 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "77 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "161 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.93,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "93b5fcf7e8a3227a58268126909f0f531b0ad478",
          "message": "Fix onSync for pull/push (#298)\n\nonSync is called when `isPushing || isPulling` changes.\r\n\r\nFixes #289",
          "timestamp": "2021-03-05T19:03:34Z",
          "tree_id": "03fd9301847cffaf7c3fef894d17ba9c15feea2a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/93b5fcf7e8a3227a58268126909f0f531b0ad478"
        },
        "date": 1614971195960,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 38.46,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "76 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.91,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "153 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.9,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bdc383af228545b8570a914a6b664d39bf650542",
          "message": "Make sure we only send one push at the time (#299)\n\nWe allow push and pulls to be sent at the same time but if there are\r\nmultiple calls to push/pull then the first pull/push needs to finish\r\nbefore we send another pull/push.\r\n\r\nIf there are multiple pull/push calls during an existing pull/push these\r\ngets collapsed into a single pull/push.\r\n\r\nTowards #294",
          "timestamp": "2021-03-08T11:33:21-08:00",
          "tree_id": "3629707989b74d2039e6872eee1aeba2e47e2c3f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/bdc383af228545b8570a914a6b664d39bf650542"
        },
        "date": 1615232167851,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.49,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "47 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "82 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 29.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "98 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.63,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0724de839fc4da34a1e40df8225eb3dbe64908a8",
          "message": "Add schemaVersion to ReplicacheOptions (#301)\n\nThis gets sent as part of the pull and push requests\r\n\r\nTowards https://github.com/rocicorp/repc/issues/290",
          "timestamp": "2021-03-08T13:49:57-08:00",
          "tree_id": "75b4dbb9c18e3fd7d0a21b4ac3054bb02219baed",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/0724de839fc4da34a1e40df8225eb3dbe64908a8"
        },
        "date": 1615240374314,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "44 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "84 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "99 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.57,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "2e2c3961d5d6586afc2fadc3a846d105cc48c85f",
          "message": "No more validate-binaries-for-publish",
          "timestamp": "2021-03-08T13:55:56-08:00",
          "tree_id": "bad098951050cf50b26c02a4bdae454a567c57e8",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2e2c3961d5d6586afc2fadc3a846d105cc48c85f"
        },
        "date": 1615240756605,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 25.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "51 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "87 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 27.03,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "109 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.74,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.03,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "33275d861bc9ef732c4b2366e0d943052fba76de",
          "message": "Turn off webkit testing\n\nPlaywright/webkit hangs",
          "timestamp": "2021-03-08T15:01:02-08:00",
          "tree_id": "799250b3f7af2c0c4026033dbd4267a1f247c5fe",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/33275d861bc9ef732c4b2366e0d943052fba76de"
        },
        "date": 1615244682649,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "91 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 29.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "99 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.23,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.17,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "884ed8463274a56e5983a1d0f89f89a3178cec16",
          "message": "Bump elliptic from 6.5.3 to 6.5.4 in /sample/next (#302)\n\nBumps [elliptic](https://github.com/indutny/elliptic) from 6.5.3 to 6.5.4.\r\n- [Release notes](https://github.com/indutny/elliptic/releases)\r\n- [Commits](https://github.com/indutny/elliptic/compare/v6.5.3...v6.5.4)\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2021-03-08T15:32:05-08:00",
          "tree_id": "254a7889143132923eeee2df157f2b5c67b76249",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/884ed8463274a56e5983a1d0f89f89a3178cec16"
        },
        "date": 1615246514637,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 58.82,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "117 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 142.86,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "113 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.93,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9f28f722d6cea7f7acf975555b2a61a6b6fa2f79",
          "message": "Upgrade to TS 4.2 (#304)",
          "timestamp": "2021-03-09T19:09:13Z",
          "tree_id": "73cbf6bd89d8a7a9a40ccf6ab9d39370c74c933c",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/9f28f722d6cea7f7acf975555b2a61a6b6fa2f79"
        },
        "date": 1615317200302,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 47.62,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "90 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.83,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.72,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ac4f9ba64644b53da799670f8ac20e2ae1f04833",
          "message": "Expose clientID (#305)\n\nFixes #275",
          "timestamp": "2021-03-10T11:06:36-08:00",
          "tree_id": "5307b0964ed3b6861171be76298e86389b3b6b1f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ac4f9ba64644b53da799670f8ac20e2ae1f04833"
        },
        "date": 1615403463616,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "44 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 41.67,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "83 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 62.5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "89 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.83,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.67,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4ec3c564a189c637a872ad2d1875877869b700ce",
          "message": "Delete all the sample (#306)\n\nhttps://i.imgflip.com/5113yn.jpg",
          "timestamp": "2021-03-12T20:45:03Z",
          "tree_id": "b2b93862cde9888b2e5047ea5268fb2278896e42",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/4ec3c564a189c637a872ad2d1875877869b700ce"
        },
        "date": 1615582087262,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 45.45,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "89 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 33.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "97 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.52,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.1,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f39519f0e2b23e05d7fbf877325879de4978ac51",
          "message": "Update JSDoc and md (#308)\n\nTo remove references to sample/ and make sure we point at the correct md\r\nfiles from the jsdocs.",
          "timestamp": "2021-03-12T21:24:21Z",
          "tree_id": "9a7c6fe2caa029effbe42b2ef3733badd525078a",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f39519f0e2b23e05d7fbf877325879de4978ac51"
        },
        "date": 1615584443918,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "87 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 43.48,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "88 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.83,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f9283a7dfea83dfde47848ae71fa732de4bbb882",
          "message": "Introduce a ConnectionLoop class with a delegate (#307)\n\nThis adds a new class, `ConnectionLoop` which is basically a run/game/dispatch loop. It runs forever but it is an async loop so it waits for state changes to continue.\r\n\r\nIt is factored in such a way that it can be used for both pull and push.\r\n\r\nThis has pretty extensive tests using fake timers which \"easily\" allows us to ensure we wait for 60s after a lot of failures etc.\r\n\r\nTowards #294",
          "timestamp": "2021-03-15T20:34:54-07:00",
          "tree_id": "b5d9db4c9c5898e4d23a3f31bc4ad956f11d4706",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f9283a7dfea83dfde47848ae71fa732de4bbb882"
        },
        "date": 1615865922336,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 52.63,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "103 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 22.22,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "103 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "608c75531226c7c42c41d9aff506d0ebdc531b12",
          "message": "Use the ConnectionLoop for push and pull (#309)\n\n* Use the ConnectionLoop for push and pull\r\n\r\nBreaking change! This removes `sync` and renames `syncInterval` to\r\n`pullInterval`.\r\n\r\nFixes #294",
          "timestamp": "2021-03-19T10:36:24-07:00",
          "tree_id": "c28c43edec4b9d8cf4128f26f4df252ab7e44fca",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/608c75531226c7c42c41d9aff506d0ebdc531b12"
        },
        "date": 1616175564813,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 50,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "98 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 35.71,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "78 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.52,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "37 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.08,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "90cde440ea2a248cefef0d92c76cbc3fb50a35a3",
          "message": "Use performance.now for better more accurate measure",
          "timestamp": "2021-03-19T11:28:56-07:00",
          "tree_id": "40ee27b3a581a34ce700648a725ab21c152f8883",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/90cde440ea2a248cefef0d92c76cbc3fb50a35a3"
        },
        "date": 1616178739972,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.57,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.21,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 42.94,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "85 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 36.15,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "73 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.46,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.35,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f5583dec5fddf72ed964170af53067145ff39e50",
          "message": "Make pull and push return void (#313)\n\nThis requires us to use fake timers in the tests which depends on\r\nhttps://github.com/rocicorp/repc/pull/332",
          "timestamp": "2021-03-19T14:40:14-07:00",
          "tree_id": "067e35e703e1dae7a7d6592cbef17cd576e362bd",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f5583dec5fddf72ed964170af53067145ff39e50"
        },
        "date": 1616190202588,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 46.03,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "90 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 33.29,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "69 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.63,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.51,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f74f6191c78ffb0f7fea3ff05a76c0a065dcbe8f",
          "message": "Use an enum for RPC instead of strings (#249)\n\nStrings are slow for JS <-> Rust",
          "timestamp": "2021-03-20T14:47:39-07:00",
          "tree_id": "0c4b111bdb08dee5d0b530078fa8e9928151c2d0",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/f74f6191c78ffb0f7fea3ff05a76c0a065dcbe8f"
        },
        "date": 1616277037291,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.93,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 0.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 24.12,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 47.53,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "95 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 36.52,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "77 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "70a86beee115bca9b4215dc115e5da4e437e2eab",
          "message": "Make push \"private\" (#314)\n\nIt is actually protected so that the tests can access it.",
          "timestamp": "2021-03-22T14:10:31-07:00",
          "tree_id": "b853b30d1a9be9e08a99f365a850b06fffb28664",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/70a86beee115bca9b4215dc115e5da4e437e2eab"
        },
        "date": 1616447611092,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.63,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 48.3,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "60 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 31.98,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "74 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.38,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.8,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "54691515fac818cd6e0f24afdf08649812c3c7d8",
          "message": "Make Replicache a named export (#320)\n\nBreaking change!\r\n\r\nNow you have to import using:\r\n\r\n```\r\nimport {Replicache} from 'replicache';\r\n```",
          "timestamp": "2021-03-23T12:18:00-07:00",
          "tree_id": "8361ae8e378a047528210db604c8e8f92ade0a34",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/54691515fac818cd6e0f24afdf08649812c3c7d8"
        },
        "date": 1616527262830,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.59,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 24.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "48 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 48.77,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "66 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 33.06,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "75 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.72,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "46 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.13,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba88bd862cd04793f37ff6f2ace63edc57a06f3c",
          "message": "Generate CommonJS files (#327)\n\nOur npm package is now a CJS package :'(\r\n\r\nWe still include the ESM file in the npm package but we do not tell npm\r\nabout it. You can use it by importing \"replicache/out/replicache.mjs\"\r\nfor now.",
          "timestamp": "2021-03-24T15:37:14-07:00",
          "tree_id": "5f3ffdf7fe49abd59527a8e3e788878ef40d9ca4",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ba88bd862cd04793f37ff6f2ace63edc57a06f3c"
        },
        "date": 1616625610967,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 57,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "107 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 30.77,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "82 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.17,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "36 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.35,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "d943f832bd53bc0f713e322a69c60d8a80d3a130",
          "message": "Bump version to 6.0.0.",
          "timestamp": "2021-03-24T15:52:17-07:00",
          "tree_id": "54f97af2146a9fff64d4767a7c0fa8e270709d92",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/d943f832bd53bc0f713e322a69c60d8a80d3a130"
        },
        "date": 1616626567249,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.47,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 24.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "47 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 51.87,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 34.34,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "78 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.18,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cf10f6e75b03936cabcfaaa48cff31e5aba24b23",
          "message": "Create launch-checklist.md",
          "timestamp": "2021-03-24T13:04:59-10:00",
          "tree_id": "0d2553b83cf0d8d30e7d508391844294e3041ccc",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cf10f6e75b03936cabcfaaa48cff31e5aba24b23"
        },
        "date": 1616627285836,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 54.87,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "77 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 35.32,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "81 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.04,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.32,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "cde0335df4d814bef75ecbdbf85990168779e164",
          "message": "Beginning of new setup guide.",
          "timestamp": "2021-03-25T05:36:35-10:00",
          "tree_id": "d843d5ec15361d0230391fd7bc9675c0909b61f5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/cde0335df4d814bef75ecbdbf85990168779e164"
        },
        "date": 1616686783207,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 50.99,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 33.35,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "72 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.85,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "37 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.14,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "3ebd51c2790d514bab1fbd4409dfb4d7e25e0eff",
          "message": "Minor typos fixed in setup.md",
          "timestamp": "2021-03-25T11:24:18-07:00",
          "tree_id": "c9b08de23f37db17dfb341c18203a5827c046c22",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/3ebd51c2790d514bab1fbd4409dfb4d7e25e0eff"
        },
        "date": 1616696845859,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.91,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 23.39,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "48 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 49.59,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 35.29,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "76 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.61,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.96,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2bac76614cbc74448b4817bc61a1042ed70eec23",
          "message": "Update README.md",
          "timestamp": "2021-03-25T09:00:06-10:00",
          "tree_id": "623917f74cfbd334bacae4bae869f5855d39f58f",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/2bac76614cbc74448b4817bc61a1042ed70eec23"
        },
        "date": 1616698998104,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.33,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 50.89,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "85 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 34.46,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "76 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.58,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.75,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "ea63ea6b05b64542a8bb7b1061722ba4e623edbf",
          "message": "Merge in contents of main Replicache repo",
          "timestamp": "2021-03-25T09:07:55-10:00",
          "tree_id": "5b37b7f66368792f032b2ab52984d67ed42488a5",
          "url": "https://github.com/rocicorp/replicache-sdk-js/commit/ea63ea6b05b64542a8bb7b1061722ba4e623edbf"
        },
        "date": 1616699465550,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.76,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 25.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "50 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 53.89,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "106 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 37.31,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "79 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.35,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c242d896aceb0f2c7080b4599913d2bb76ddef4a",
          "message": "Update README.md",
          "timestamp": "2021-03-25T09:20:23-10:00",
          "tree_id": "7565ad5867862672994ffea2affbb8a17e3fe3a3",
          "url": "https://github.com/rocicorp/replicache/commit/c242d896aceb0f2c7080b4599913d2bb76ddef4a"
        },
        "date": 1616700206930,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.9,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.88,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "44 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 53.36,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "80 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 37.15,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "75 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.98,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.19,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "c03409f91f13fcac06c099c18ed8fac30768cb66",
          "message": "Fix references to replicache-sdk-js.\n\nAlso, remove QUICKSTART.md, which is no longer used.",
          "timestamp": "2021-03-25T09:32:52-10:00",
          "tree_id": "b21f90e0a2b89743c4603f57b16ec3bf5ff57815",
          "url": "https://github.com/rocicorp/replicache/commit/c03409f91f13fcac06c099c18ed8fac30768cb66"
        },
        "date": 1616700960251,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.99,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 56.15,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "108 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 35.66,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "79 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.75,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "37 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.38,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "30969e1ddd645d2df121b00c66b97d460756c52c",
          "message": "Update setup.md",
          "timestamp": "2021-03-25T10:47:10-10:00",
          "tree_id": "41583700f9003ffaa162e28cb8115dd7eae5e0d4",
          "url": "https://github.com/rocicorp/replicache/commit/30969e1ddd645d2df121b00c66b97d460756c52c"
        },
        "date": 1616705409680,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.54,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 50.99,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 35.52,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "71 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.96,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.78,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "43f5d849873daa6814655ae19af850a4e12fde57",
          "message": "npm run format",
          "timestamp": "2021-03-25T14:14:43-07:00",
          "tree_id": "7816d903b8d52d6db2e541cf5b8f78f71b3e3dcf",
          "url": "https://github.com/rocicorp/replicache/commit/43f5d849873daa6814655ae19af850a4e12fde57"
        },
        "date": 1616707060066,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "16 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 24.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "50 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 24.34,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 53.38,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "106 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 34.9,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "79 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.94,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9c0074fc4ea404e2802022644a8770fe6e42a5f9",
          "message": "Update setup.md",
          "timestamp": "2021-03-25T11:47:21-10:00",
          "tree_id": "59c57eed04bb006a1912bfa3343cd6763715c063",
          "url": "https://github.com/rocicorp/replicache/commit/9c0074fc4ea404e2802022644a8770fe6e42a5f9"
        },
        "date": 1616709032978,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 0.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "44 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 50.03,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "98 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 32.7,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "74 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.87,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.71,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7707dfcfaed4467b7adab1c966c6cb0d28e8396c",
          "message": "add launch checklist (#333)",
          "timestamp": "2021-03-25T11:50:21-10:00",
          "tree_id": "b7bdbc8ea09b9602557850f2a987f5f6db183b2c",
          "url": "https://github.com/rocicorp/replicache/commit/7707dfcfaed4467b7adab1c966c6cb0d28e8396c"
        },
        "date": 1616709209055,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 0.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.65,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.59,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 46.39,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "70 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 33.65,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "71 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.72,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.55,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1fbd4734b51c8595dcea97896e8fd35f3d544522",
          "message": "Treat non 200 status as an error (#337)\n\nNow ConnectionLoop invokeSend needs to return `Promise<boolean>`. If it\r\nreturns `false` or throws then the send is considered a failure and will\r\nget retried.\r\n\r\nMake _invokePush and _invokePull look at the httpStatusCode and use that\r\nto compute the return value.\r\n\r\nFixes #332",
          "timestamp": "2021-03-25T15:00:22-07:00",
          "tree_id": "b320be4b6015742d8653df6f9dfcaf76f4978202",
          "url": "https://github.com/rocicorp/replicache/commit/1fbd4734b51c8595dcea97896e8fd35f3d544522"
        },
        "date": 1616709807135,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.74,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.81,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.61,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 24.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "50 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 53.09,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "103 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 130.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "215 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.72,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.16,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "86551e95a5accd7fc1a4ab163f2e38c492056579",
          "message": "Add some movies to the setup guide.",
          "timestamp": "2021-03-25T13:48:19-10:00",
          "tree_id": "90664e812d46867309100d949882f8bd16541114",
          "url": "https://github.com/rocicorp/replicache/commit/86551e95a5accd7fc1a4ab163f2e38c492056579"
        },
        "date": 1616716269339,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.55,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "16 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 8.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 26.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "52 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 25.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 57.36,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 133.07,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "228 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 25.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.89,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "12 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8623b95bf03809e06afeb987b344b36da9eed31",
          "message": "Update setup.md",
          "timestamp": "2021-03-25T13:49:38-10:00",
          "tree_id": "5e0e719e2e29bb321fe623ce36292afb4fe19f9c",
          "url": "https://github.com/rocicorp/replicache/commit/c8623b95bf03809e06afeb987b344b36da9eed31"
        },
        "date": 1616716358747,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 0.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.84,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.62,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 50.19,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 119.4,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "195 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.2,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.8,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "ec8b26097dfc3f6d2db78a0461dd6c8689a70f0c",
          "message": "npm run format",
          "timestamp": "2021-03-25T17:11:38-07:00",
          "tree_id": "0042183038f2b9a032f299aaf4048dac70f5adfa",
          "url": "https://github.com/rocicorp/replicache/commit/ec8b26097dfc3f6d2db78a0461dd6c8689a70f0c"
        },
        "date": 1616717689964,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.23,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.12,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.92,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.57,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 51.76,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 121.95,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "216 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.86,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.73,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a9ae41a56e32e4dd65df88d43e3f4670f5dca6a9",
          "message": "Call pull and push on startup (#338)\n\nFixes #328",
          "timestamp": "2021-03-26T00:14:11Z",
          "tree_id": "66741367eedec3482fd06829acf0ffe5d3853d54",
          "url": "https://github.com/rocicorp/replicache/commit/a9ae41a56e32e4dd65df88d43e3f4670f5dca6a9"
        },
        "date": 1616717865224,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.28,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 47.84,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "95 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 136.71,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "220 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.47,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "eea699fd84fbfc06110e9ad3811b760de85c3c20",
          "message": "small edits to setup guide (#340)",
          "timestamp": "2021-03-25T15:25:40-10:00",
          "tree_id": "efe3733c1f75bd6223a2d61e02fdd3fb8d5b75f1",
          "url": "https://github.com/rocicorp/replicache/commit/eea699fd84fbfc06110e9ad3811b760de85c3c20"
        },
        "date": 1616722124723,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.02,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.57,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.36,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "44 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 46.05,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "88 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 121.8,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "191 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.15,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.56,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8d5cf21e3da409d89b36e2c54e5702f5b40b23c2",
          "message": "tiny fixups to readme (#341)",
          "timestamp": "2021-03-26T10:30:47-10:00",
          "tree_id": "ce0917a05f6ae4e31cf778968a63ecbe5f82b6a1",
          "url": "https://github.com/rocicorp/replicache/commit/8d5cf21e3da409d89b36e2c54e5702f5b40b23c2"
        },
        "date": 1616790842105,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.49,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.51,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.85,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 43.22,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "84 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 126.02,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "205 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.47,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.08,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "508d5f32d671170c87b7ac725eb16865a9f58b9a",
          "message": "Fix reference to API docs",
          "timestamp": "2021-03-26T13:56:15-07:00",
          "tree_id": "ded9c356b138cc7fd42e1ac5cc52b02aef8fc292",
          "url": "https://github.com/rocicorp/replicache/commit/508d5f32d671170c87b7ac725eb16865a9f58b9a"
        },
        "date": 1616792369559,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.04,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.46,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.75,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 45.4,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "81 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 137.27,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "231 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.76,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.16,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "e77e3d95474598d367927123459d8eaebc1b07cb",
          "message": "Use js.replicache.dev for link",
          "timestamp": "2021-03-26T14:22:44-07:00",
          "tree_id": "c7468e02870e149e7f7df0a01385ad6570689cd1",
          "url": "https://github.com/rocicorp/replicache/commit/e77e3d95474598d367927123459d8eaebc1b07cb"
        },
        "date": 1616793970510,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.27,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 0.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.66,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.57,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 45.35,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "87 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 122.4,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "195 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.06,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.66,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "007252e954eea57104237051df764165fdf5db64",
          "message": "Do not expose push to ReplicacheTest (#342)\n\nThe goal is to get rid of `beginPull` and `maybeEndPull` from\r\nReplicacheTest too and instead test these at a higher level using purely\r\npublic API.",
          "timestamp": "2021-03-26T14:41:09-07:00",
          "tree_id": "960f05787998731a72ac7b6b1c853bdf3b848eeb",
          "url": "https://github.com/rocicorp/replicache/commit/007252e954eea57104237051df764165fdf5db64"
        },
        "date": 1616795071456,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.01,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.95,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 47.38,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 120.26,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "200 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.33,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.66,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": false,
          "id": "9b56fd67b31bfa1ac6c4b05fd8e644591229a7de",
          "message": "Bump version to 6.1.0.",
          "timestamp": "2021-03-26T14:46:47-07:00",
          "tree_id": "66004c314178e03b979d602a2aeeabe9416f9138",
          "url": "https://github.com/rocicorp/replicache/commit/9b56fd67b31bfa1ac6c4b05fd8e644591229a7de"
        },
        "date": 1616795568351,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.25,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.58,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.56,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.6,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.72,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 46.81,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "91 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 121.95,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "189 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.48,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.95,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "8761d26bf8c82164cb6e04669c9e77e507688200",
          "message": "Skip one await",
          "timestamp": "2021-03-29T12:01:17-10:00",
          "tree_id": "fa0d6bfbe0b3c5d01ef12aad876b740a4a61bf02",
          "url": "https://github.com/rocicorp/replicache/commit/8761d26bf8c82164cb6e04669c9e77e507688200"
        },
        "date": 1617055451902,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.69,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.18,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.35,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.52,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.67,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.45,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.94,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 55.14,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "106 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 135.41,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "232 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.92,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.48,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "655926e6d795a5c4a87cf44674eef80f197a6e92",
          "message": "Bump version to 6.1.1.",
          "timestamp": "2021-03-29T12:58:14-10:00",
          "tree_id": "9019a2a5fd87eec1d93545e56543715f588250a9",
          "url": "https://github.com/rocicorp/replicache/commit/655926e6d795a5c4a87cf44674eef80f197a6e92"
        },
        "date": 1617058881285,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.8,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.08,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.13,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 24.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "50 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 23.94,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "write single byte",
            "value": 51.36,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 132.45,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "209 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.84,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.46,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "11 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "f7af1eefc4e94b535c00fbc87a29c5540caca1fb",
          "message": "Handle storage events correctly with memstore and other edge cases.\n\nFixes #345.",
          "timestamp": "2021-03-29T15:18:47-10:00",
          "tree_id": "9c3925647a1825b444a5fad1cdc5cf96f563b94a",
          "url": "https://github.com/rocicorp/replicache/commit/f7af1eefc4e94b535c00fbc87a29c5540caca1fb"
        },
        "date": 1617067324340,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.97,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.7,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.77,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.03,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.05,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.43,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.16,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.5,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 45.8,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "59 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 113.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "177 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.12,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.7,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "a216231831e9a2da640e24c02ebbab85efcaae21",
          "message": "Bump version to 6.1.2.",
          "timestamp": "2021-03-29T15:19:29-10:00",
          "tree_id": "a2547d9b48fe5091ee78e5689acb7d3c12ff0c62",
          "url": "https://github.com/rocicorp/replicache/commit/a216231831e9a2da640e24c02ebbab85efcaae21"
        },
        "date": 1617067361433,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.4,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.07,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.42,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.48,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "14 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.78,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.96,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 19.57,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 58.98,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "79 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 144.3,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "243 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.4,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.29,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "563c71120c23ac7506d5db0db2e29b4d2b6a6634",
          "message": "Include TypeScript definition file too.",
          "timestamp": "2021-03-29T18:47:26-10:00",
          "tree_id": "1c65075fe24dbf25a66a12ddd3a71b1b151ed515",
          "url": "https://github.com/rocicorp/replicache/commit/563c71120c23ac7506d5db0db2e29b4d2b6a6634"
        },
        "date": 1617079861817,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 0.41,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.98,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.24,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.73,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "42 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 18.64,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 53.69,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "92 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 137.93,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "233 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.44,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.15,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "c88d1bce0609b064a28d1876f335010bf986414e",
          "message": "Bump version to 6.1.3.",
          "timestamp": "2021-03-29T18:48:00-10:00",
          "tree_id": "0155ba2acd00e4f56642aafcee2b02b1149f731e",
          "url": "https://github.com/rocicorp/replicache/commit/c88d1bce0609b064a28d1876f335010bf986414e"
        },
        "date": 1617079871725,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.82,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.06,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.68,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 18.86,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 17.71,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "write single byte",
            "value": 54.5,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "81 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 132.89,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "218 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 18.89,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.8,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dff72f4054279002278aec9e843493e121f145f2",
          "message": "Introduce logLevel to ReplicacheOptions (#347)\n\nFixes #331",
          "timestamp": "2021-03-30T22:06:01-07:00",
          "tree_id": "9698d48a1517a0cd3d6e1a4d50f91bf2732fbaad",
          "url": "https://github.com/rocicorp/replicache/commit/dff72f4054279002278aec9e843493e121f145f2"
        },
        "date": 1617167337219,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.66,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.15,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.26,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.44,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 52.49,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "65 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 143.99,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "255 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.9,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.4,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "a09757cbbfa5ba1984de0c65287623379c05239b",
          "message": "Followup to dff72f4\n\nUse debug even for request failures",
          "timestamp": "2021-03-31T21:21:04-07:00",
          "tree_id": "b95513ef9eb1a108d54ec834c44f3b9f08227710",
          "url": "https://github.com/rocicorp/replicache/commit/a09757cbbfa5ba1984de0c65287623379c05239b"
        },
        "date": 1617251108987,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.53,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.38,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.22,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.29,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 21.19,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "43 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.1,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 53.5,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "71 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 136.15,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "240 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 19.67,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.21,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "1d0c8de768f28858ac07e5be8dad36fd84beb014",
          "message": "Update npm dependencies",
          "timestamp": "2021-03-31T21:52:22-07:00",
          "tree_id": "f5a617343410032b3008fdd7f30a112be3abd60a",
          "url": "https://github.com/rocicorp/replicache/commit/1d0c8de768f28858ac07e5be8dad36fd84beb014"
        },
        "date": 1617252935252,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.79,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.09,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.14,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.32,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.11,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "13 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.2,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 24.17,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.31,
            "range": "±0.0%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "write single byte",
            "value": 48.73,
            "range": "±0.0%",
            "unit": "tx/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 121.95,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "205 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 22.27,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.11,
            "range": "±0.0%",
            "unit": "op/s",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "11426954d25c96077c49857c9abb7b3a5c07b6a7",
          "message": "Rework benchmarks to cleanup and add idb tests. (#349)",
          "timestamp": "2021-04-02T22:40:52-10:00",
          "tree_id": "89cff0b1ebf3ed4b23ac9a6cd0ed2e477e975fc5",
          "url": "https://github.com/rocicorp/replicache/commit/11426954d25c96077c49857c9abb7b3a5c07b6a7"
        },
        "date": 1617439399044,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.77,
            "range": "±342.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.78,
            "range": "±38.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.69,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.57,
            "range": "±141.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.08,
            "range": "±57.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 2.91,
            "range": "±60.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.73,
            "range": "±19.7%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 25.76,
            "range": "±14.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±724.4%",
            "unit": "MB/s",
            "extra": "61 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 125.61,
            "range": "±724.6%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 25.68,
            "range": "±5.3%",
            "unit": "ops/sec",
            "extra": "13 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.59,
            "range": "±8.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "4e87945a2d133b49fae910817cf66129fe899250",
          "message": "Bump version to 6.1.4.",
          "timestamp": "2021-04-03T15:52:45-10:00",
          "tree_id": "ff2df15f4d11f2be5fe04347eccc112bff48e186",
          "url": "https://github.com/rocicorp/replicache/commit/4e87945a2d133b49fae910817cf66129fe899250"
        },
        "date": 1617501297896,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.33,
            "range": "±343.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.35,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.4,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.4,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 9.25,
            "range": "±44.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 9.9,
            "range": "±39.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 20.69,
            "range": "±264.1%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 20.66,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±703.5%",
            "unit": "MB/s",
            "extra": "59 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 130.49,
            "range": "±536.0%",
            "unit": "ops/sec",
            "extra": "66 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 21.22,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "11 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.64,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c96d46d9efd167d4b2307310679dfb6029207ca3",
          "message": "Minor refactoring of tests (#351)\n\nUse local rep variable in test functions.",
          "timestamp": "2021-04-07T22:39:56Z",
          "tree_id": "69a2edb19ef5d788285afde64ca129f52c6d416b",
          "url": "https://github.com/rocicorp/replicache/commit/c96d46d9efd167d4b2307310679dfb6029207ca3"
        },
        "date": 1617835319616,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.06,
            "range": "±275.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6,
            "range": "±59.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.53,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.58,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 9.24,
            "range": "±23.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 10.65,
            "range": "±7.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 22.64,
            "range": "±42.8%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 22.48,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±7410.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 117.15,
            "range": "±340.5%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 23.45,
            "range": "±16.3%",
            "unit": "ops/sec",
            "extra": "12 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 5.3,
            "range": "±5.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "eb79db2ff276e8d976f5503eb3996c39f890b6c4",
          "message": "Update setup.md",
          "timestamp": "2021-04-09T11:09:41-10:00",
          "tree_id": "a724fbe553773bfb29da5d885ceaa27764251086",
          "url": "https://github.com/rocicorp/replicache/commit/eb79db2ff276e8d976f5503eb3996c39f890b6c4"
        },
        "date": 1618002721413,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.98,
            "range": "±193.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.67,
            "range": "±7.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.31,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.21,
            "range": "±223.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 8.69,
            "range": "±20.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 9.76,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 19.43,
            "range": "±25.8%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 21.01,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±560.8%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 105.39,
            "range": "±586.2%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 20.21,
            "range": "±35.7%",
            "unit": "ops/sec",
            "extra": "11 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.76,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83d0ed70f045f257cba4837376a79a1a1cc622fa",
          "message": "Feat: Register mutations using ReplicacheOptions (#350)\n\nThis adds a `mutators` option to `ReplicacheOptions` which contains the\r\nmutators to register.\r\n\r\nThese mutators are available as `mutate` on the `Replicache` instance after\r\nconstruction.\r\n\r\nThis deprecates `register` too.\r\n\r\nFixes #329",
          "timestamp": "2021-04-09T15:53:25-07:00",
          "tree_id": "e930aba2765eb1094ed8add6d129f3c62ca212de",
          "url": "https://github.com/rocicorp/replicache/commit/83d0ed70f045f257cba4837376a79a1a1cc622fa"
        },
        "date": 1618008958070,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.77,
            "range": "±169.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.62,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.13,
            "range": "±21.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.7,
            "range": "±1.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.64,
            "range": "±21.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.58,
            "range": "±24.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 9.55,
            "range": "±48.5%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.21,
            "range": "±56.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±736.5%",
            "unit": "MB/s",
            "extra": "52 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 79.54,
            "range": "±361.4%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 9.2,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.27,
            "range": "±27.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "de37958e26cc6f66c4225a8514e4b55ac5465d14",
          "message": "Feat: Add scan().entries().toArray() etc (#353)\n\nThis adds convenience methods to the async iterator returned by scan, allowing\r\nyou to asynchronously get an array. For example:\r\n\r\n```js\r\nawait scan().entries().toArray()\r\nawait scan().values().toArray()\r\nawait scan().keys().toArray()\r\nawait scan().toArray() // Same as values\r\n```\r\n\r\nFixes #292",
          "timestamp": "2021-04-12T12:02:51-07:00",
          "tree_id": "b42ab94160e397d1c0c17d0fae7146210ed648da",
          "url": "https://github.com/rocicorp/replicache/commit/de37958e26cc6f66c4225a8514e4b55ac5465d14"
        },
        "date": 1618254329161,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.61,
            "range": "±160.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.25,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.26,
            "range": "±279.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.76,
            "range": "±111.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.21,
            "range": "±21.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.08,
            "range": "±39.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.72,
            "range": "±49.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.11,
            "range": "±43.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±3642.4%",
            "unit": "MB/s",
            "extra": "29 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 85.43,
            "range": "±450.8%",
            "unit": "ops/sec",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 7.93,
            "range": "±24.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.99,
            "range": "±22.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9851d6e87dfe8c342cd66de021fe04b35cf65fcf",
          "message": "Bump repc to 0.26.0 (#354)",
          "timestamp": "2021-04-12T19:08:45Z",
          "tree_id": "083f15a4c8513ad1705d85075b6094023a01c6a6",
          "url": "https://github.com/rocicorp/replicache/commit/9851d6e87dfe8c342cd66de021fe04b35cf65fcf"
        },
        "date": 1618254667906,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.68,
            "range": "±165.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.33,
            "range": "±3.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.32,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.79,
            "range": "±299.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.58,
            "range": "±22.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.66,
            "range": "±50.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.45,
            "range": "±51.7%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.15,
            "range": "±46.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±704.6%",
            "unit": "MB/s",
            "extra": "61 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.58,
            "range": "±420.6%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 8.68,
            "range": "±14.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.99,
            "range": "±4.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "59aa5c4e68e05b1094876c0ee65a67d051c9591f",
          "message": "Roll repc to 0.27.0",
          "timestamp": "2021-04-12T14:37:57-07:00",
          "tree_id": "65a0d60f3ebda5b18ab560cd74b2c63a42d6de0a",
          "url": "https://github.com/rocicorp/replicache/commit/59aa5c4e68e05b1094876c0ee65a67d051c9591f"
        },
        "date": 1618263639396,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.29,
            "range": "±156.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.55,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.04,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.33,
            "range": "±170.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.94,
            "range": "±31.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 8.57,
            "range": "±30.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.49,
            "range": "±62.5%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.6,
            "range": "±46.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±799.2%",
            "unit": "MB/s",
            "extra": "63 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 97.87,
            "range": "±430.1%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 11.99,
            "range": "±25.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.96,
            "range": "±26.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "42b120a776076135f2b635a382a9dbe4a391a9a1",
          "message": "Bump version to 6.2.0.",
          "timestamp": "2021-04-12T14:59:30-07:00",
          "tree_id": "abf4feba9482065341d33dedd29b59c5971597cd",
          "url": "https://github.com/rocicorp/replicache/commit/42b120a776076135f2b635a382a9dbe4a391a9a1"
        },
        "date": 1618264929101,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.88,
            "range": "±161.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3,
            "range": "±21.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.33,
            "range": "±14.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±14.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.04,
            "range": "±25.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.66,
            "range": "±25.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.76,
            "range": "±44.7%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.75,
            "range": "±111.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±650.8%",
            "unit": "MB/s",
            "extra": "53 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 83.05,
            "range": "±426.7%",
            "unit": "ops/sec",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 10.39,
            "range": "±18.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.81,
            "range": "±35.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "23464ba6f4325db5dd2d41c3a814e7d32b2b869e",
          "message": "Remove unneeded typedoc.json",
          "timestamp": "2021-04-13T12:44:48-10:00",
          "tree_id": "51902d38b016e3be735e05eaa7cedd266025a355",
          "url": "https://github.com/rocicorp/replicache/commit/23464ba6f4325db5dd2d41c3a814e7d32b2b869e"
        },
        "date": 1618354057293,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.22,
            "range": "±184.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.14,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.71,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.27,
            "range": "±16.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.92,
            "range": "±26.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.07,
            "range": "±29.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 15.38,
            "range": "±57.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.79,
            "range": "±51.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±724.3%",
            "unit": "MB/s",
            "extra": "51 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 78.39,
            "range": "±316.6%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 10.28,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.34,
            "range": "±17.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "e8d4b93b199e64a00f6332fc95592dfd1eac5d15",
          "message": "Shard the integration guide into a number of smaller steps.\n\nAlso spruce by making use of the Docusaurus \"admonitions\" feature liberally.",
          "timestamp": "2021-04-13T14:56:31-10:00",
          "tree_id": "324e9f4ab995ea286b259462fa9152fcb94baec9",
          "url": "https://github.com/rocicorp/replicache/commit/e8d4b93b199e64a00f6332fc95592dfd1eac5d15"
        },
        "date": 1618361944415,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.07,
            "range": "±172.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.89,
            "range": "±10.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.3,
            "range": "±10.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.76,
            "range": "±42.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.17,
            "range": "±18.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.92,
            "range": "±31.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.87,
            "range": "±41.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.88,
            "range": "±59.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±635.6%",
            "unit": "MB/s",
            "extra": "55 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 85.89,
            "range": "±419.2%",
            "unit": "ops/sec",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 10.25,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.44,
            "range": "±39.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "42a2266af26e6660c00ab01a22561016f3b7b0dc",
          "message": "npm add is just an alias for npm install",
          "timestamp": "2021-04-14T11:46:35-07:00",
          "tree_id": "c1aa15b97422c59eed4354a22e1693846d72acca",
          "url": "https://github.com/rocicorp/replicache/commit/42a2266af26e6660c00ab01a22561016f3b7b0dc"
        },
        "date": 1618426184815,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.59,
            "range": "±156.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.23,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.29,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.63,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.68,
            "range": "±34.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.84,
            "range": "±33.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.24,
            "range": "±47.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.01,
            "range": "±59.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±609.2%",
            "unit": "MB/s",
            "extra": "54 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 85.88,
            "range": "±357.8%",
            "unit": "ops/sec",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 8.28,
            "range": "±19.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.96,
            "range": "±25.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1c35493c11ef7892db23953002bb3fd96e75b794",
          "message": "Update README.md",
          "timestamp": "2021-04-14T14:27:57-10:00",
          "tree_id": "9db4983f89f8d238f0b2b59865c2ef67fb9a13a7",
          "url": "https://github.com/rocicorp/replicache/commit/1c35493c11ef7892db23953002bb3fd96e75b794"
        },
        "date": 1618446635569,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.54,
            "range": "±155.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.25,
            "range": "±74.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.21,
            "range": "±10.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.72,
            "range": "±69.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.08,
            "range": "±15.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.97,
            "range": "±32.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.77,
            "range": "±47.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.44,
            "range": "±64.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±636.9%",
            "unit": "MB/s",
            "extra": "61 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 92.95,
            "range": "±523.7%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 8.49,
            "range": "±11.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.96,
            "range": "±10.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a6e09343f6776b3ced0b17281f52282ff0082f06",
          "message": "Update README.md",
          "timestamp": "2021-04-14T14:28:49-10:00",
          "tree_id": "af2c85352827256b1277fcbce763edd9d0cca7ce",
          "url": "https://github.com/rocicorp/replicache/commit/a6e09343f6776b3ced0b17281f52282ff0082f06"
        },
        "date": 1618446662677,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.98,
            "range": "±148.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.13,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.74,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.09,
            "range": "±76.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.51,
            "range": "±29.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.27,
            "range": "±34.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.5,
            "range": "±37.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.84,
            "range": "±51.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±876.0%",
            "unit": "MB/s",
            "extra": "73 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 104.63,
            "range": "±573.0%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 10.17,
            "range": "±12.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.5,
            "range": "±36.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "7fad54bdaabbc0553c66e3aeed649245c4492347",
          "message": "Clean up\n\nFollowup to #307",
          "timestamp": "2021-04-20T10:50:51-07:00",
          "tree_id": "a1011683f40faf85386066826826ecca8840314c",
          "url": "https://github.com/rocicorp/replicache/commit/7fad54bdaabbc0553c66e3aeed649245c4492347"
        },
        "date": 1618941350927,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.83,
            "range": "±181.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.72,
            "range": "±23.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.42,
            "range": "±13.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.88,
            "range": "±167.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.5,
            "range": "±29.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.29,
            "range": "±30.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.5,
            "range": "±57.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.16,
            "range": "±58.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±641.4%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 75.51,
            "range": "±338.2%",
            "unit": "ops/sec",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 9.15,
            "range": "±11.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.16,
            "range": "±26.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "d1f4f2493130a9ce82cbe0750f615950148db91d",
          "message": "npm run format",
          "timestamp": "2021-04-20T16:10:43-07:00",
          "tree_id": "0dff9e3b61ddb8d946e5e463eb925aff2b2583ce",
          "url": "https://github.com/rocicorp/replicache/commit/d1f4f2493130a9ce82cbe0750f615950148db91d"
        },
        "date": 1618960369940,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.26,
            "range": "±137.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.38,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.05,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.36,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 8.49,
            "range": "±13.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.82,
            "range": "±34.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 14.45,
            "range": "±41.1%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.83,
            "range": "±66.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±750.7%",
            "unit": "MB/s",
            "extra": "74 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 125.22,
            "range": "±429.8%",
            "unit": "ops/sec",
            "extra": "63 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 11.15,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.87,
            "range": "±38.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7f72d7a5bd287468952af6a5db7d42c6186f9f29",
          "message": "Fix issue with scan return type (#363)\n\nTS complained in some cases. Added more tests and fixed the type\r\nsignature.",
          "timestamp": "2021-04-20T21:58:09-07:00",
          "tree_id": "295f3518644ca0add30ed750bf7583ae502bac90",
          "url": "https://github.com/rocicorp/replicache/commit/7f72d7a5bd287468952af6a5db7d42c6186f9f29"
        },
        "date": 1618981233715,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.58,
            "range": "±147.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.34,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.33,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.78,
            "range": "±124.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.33,
            "range": "±23.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.27,
            "range": "±38.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.75,
            "range": "±47.7%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 8.64,
            "range": "±46.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±719.3%",
            "unit": "MB/s",
            "extra": "61 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.56,
            "range": "±414.9%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 8.67,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.07,
            "range": "±25.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "767b473ff94afea38af0366962c29a2ef73af361",
          "message": "Update guide-arch.md",
          "timestamp": "2021-04-27T06:30:03-10:00",
          "tree_id": "3d53f9fdd48bbd7d1950c12498b992a397dfdb5f",
          "url": "https://github.com/rocicorp/replicache/commit/767b473ff94afea38af0366962c29a2ef73af361"
        },
        "date": 1619541125194,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.6,
            "range": "±184.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.68,
            "range": "±15.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.19,
            "range": "±73.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.47,
            "range": "±185.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 8.59,
            "range": "±21.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.89,
            "range": "±21.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 15.81,
            "range": "±63.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.35,
            "range": "±42.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±797.8%",
            "unit": "MB/s",
            "extra": "64 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 100.42,
            "range": "±470.5%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 11.9,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 2.01,
            "range": "±38.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "05f8a6960f2451e6d5586db85e707c762d53a950",
          "message": "Add performance test for subscribe scale (#368)\n\nThese test runs subscribe over a db with 1000 keys. It creates N\r\nsubscriptions and then mutates 10 keys. The goal is to have the\r\nexecution time only depend on the number of affected subscriptions and\r\nnot the total number of subscriptions in the app.\r\n\r\nTowards #63",
          "timestamp": "2021-04-29T18:59:41Z",
          "tree_id": "aff172a8faf00e8cbfd7972105de504dd3b6271a",
          "url": "https://github.com/rocicorp/replicache/commit/05f8a6960f2451e6d5586db85e707c762d53a950"
        },
        "date": 1619722939608,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.57,
            "range": "±147.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.25,
            "range": "±12.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.21,
            "range": "±345.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.75,
            "range": "±58.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.9,
            "range": "±26.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.21,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 7.63,
            "range": "±51.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.7,
            "range": "±69.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±771.4%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 77.09,
            "range": "±372.1%",
            "unit": "ops/sec",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 7.77,
            "range": "±41.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.98,
            "range": "±18.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.59,
            "range": "±14.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.96,
            "range": "±6.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 0.95,
            "range": "±9.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "05f8a6960f2451e6d5586db85e707c762d53a950",
          "message": "Add performance test for subscribe scale (#368)\n\nThese test runs subscribe over a db with 1000 keys. It creates N\r\nsubscriptions and then mutates 10 keys. The goal is to have the\r\nexecution time only depend on the number of affected subscriptions and\r\nnot the total number of subscriptions in the app.\r\n\r\nTowards #63",
          "timestamp": "2021-04-29T18:59:41Z",
          "tree_id": "aff172a8faf00e8cbfd7972105de504dd3b6271a",
          "url": "https://github.com/rocicorp/replicache/commit/05f8a6960f2451e6d5586db85e707c762d53a950"
        },
        "date": 1619724553930,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.6,
            "range": "±168.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.15,
            "range": "±53.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.25,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.72,
            "range": "±21.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.98,
            "range": "±24.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.62,
            "range": "±42.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.97,
            "range": "±47.6%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.24,
            "range": "±43.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±550.4%",
            "unit": "MB/s",
            "extra": "47 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 77.45,
            "range": "±354.3%",
            "unit": "ops/sec",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 9.32,
            "range": "±13.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±24.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 7.44,
            "range": "±19.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.53,
            "range": "±11.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 0.9,
            "range": "±10.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "18c68503120ee947c90f00ff1a82465eb5348ce5",
          "message": "Only call subscriptions when keys change (#365)\n\nWe keep track of the keys and scans a subscription query uses. We then compare\r\nthis to the returned changed keys from repc mutations and pulls. If the changed\r\nkeys can affect the subscription body we run it again and gather the used keys\r\nagain.\r\n\r\nTowards #63",
          "timestamp": "2021-04-29T15:44:29-07:00",
          "tree_id": "6e0aa9b5b6f0bb023453b0d729c8acb27dea7326",
          "url": "https://github.com/rocicorp/replicache/commit/18c68503120ee947c90f00ff1a82465eb5348ce5"
        },
        "date": 1619736422144,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.68,
            "range": "±158.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.36,
            "range": "±21.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.06,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.62,
            "range": "±44.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.13,
            "range": "±34.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.28,
            "range": "±15.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.22,
            "range": "±39.9%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.41,
            "range": "±47.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±769.0%",
            "unit": "MB/s",
            "extra": "64 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 98.41,
            "range": "±445.5%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.85,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.48,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.36,
            "range": "±15.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.06,
            "range": "±10.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.37,
            "range": "±43.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "13ca0cabd63cd2299fb082f94528241f1b99dd5e",
          "message": "Followup to #365",
          "timestamp": "2021-05-06T11:59:25-07:00",
          "tree_id": "125b151d6991730cdfd449a5a8e213386058a2ec",
          "url": "https://github.com/rocicorp/replicache/commit/13ca0cabd63cd2299fb082f94528241f1b99dd5e"
        },
        "date": 1620327767904,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.63,
            "range": "±166.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.46,
            "range": "±18.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.04,
            "range": "±89.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.52,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.72,
            "range": "±32.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.4,
            "range": "±42.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 9.73,
            "range": "±38.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.48,
            "range": "±58.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±651.3%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 78.72,
            "range": "±367.6%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.67,
            "range": "±5.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.45,
            "range": "±14.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 7.75,
            "range": "±19.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.05,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.14,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b51368f8107e1ccd52c7c1ddd2c996df5bc243c",
          "message": "Move json tests to own file (#372)\n\nGoal is to make replicache.test.ts smaller over time",
          "timestamp": "2021-05-06T15:49:24-07:00",
          "tree_id": "a7020ba92bd5c8e7e473f0a8ef81e72d5085de69",
          "url": "https://github.com/rocicorp/replicache/commit/9b51368f8107e1ccd52c7c1ddd2c996df5bc243c"
        },
        "date": 1620341518334,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.25,
            "range": "±153.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.11,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.24,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.75,
            "range": "±20.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.43,
            "range": "±28.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.14,
            "range": "±44.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.85,
            "range": "±40.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 11.86,
            "range": "±37.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±932.0%",
            "unit": "MB/s",
            "extra": "53 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 87.71,
            "range": "±414.0%",
            "unit": "ops/sec",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3,
            "range": "±9.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.3,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.11,
            "range": "±21.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.23,
            "range": "±3.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "jacks.joe@gmail.com",
            "name": "Joseph Jacks",
            "username": "josephjacks"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "5ff3e28372634ebf0acc7caf22bda4cda8f4a5dd",
          "message": "Typos",
          "timestamp": "2021-05-08T15:34:11-10:00",
          "tree_id": "a00e4f96c971352e56757b93e702ad8088b52175",
          "url": "https://github.com/rocicorp/replicache/commit/5ff3e28372634ebf0acc7caf22bda4cda8f4a5dd"
        },
        "date": 1620524214387,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.7,
            "range": "±163.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.34,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.93,
            "range": "±39.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.57,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.1,
            "range": "±31.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.21,
            "range": "±33.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.52,
            "range": "±45.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.75,
            "range": "±44.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±723.7%",
            "unit": "MB/s",
            "extra": "61 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 97.82,
            "range": "±353.0%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.8,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.46,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.24,
            "range": "±6.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.02,
            "range": "±5.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.19,
            "range": "±12.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bd4be244be0237dca299ee674d6ca2cc766ce652",
          "message": "Add Test with Replicache in a Dedicated Worker (#374)",
          "timestamp": "2021-05-10T13:11:19-07:00",
          "tree_id": "3e03f6d626c72607dec68064122cb3f58d94699e",
          "url": "https://github.com/rocicorp/replicache/commit/bd4be244be0237dca299ee674d6ca2cc766ce652"
        },
        "date": 1620677634600,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.6,
            "range": "±152.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.33,
            "range": "±89.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.07,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.6,
            "range": "±295.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.3,
            "range": "±26.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.2,
            "range": "±36.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 9.27,
            "range": "±45.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.18,
            "range": "±44.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±727.8%",
            "unit": "MB/s",
            "extra": "63 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 97.26,
            "range": "±399.8%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.71,
            "range": "±5.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.46,
            "range": "±14.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.11,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.44,
            "range": "±26.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.42,
            "range": "±61.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ccd929252576a39d5297813c4cef8ff00e1a38e1",
          "message": "Minor test cleanups (#375)",
          "timestamp": "2021-05-10T14:43:30-07:00",
          "tree_id": "d16f23f992ca97769af8d786eb5ce1dab4b80d4d",
          "url": "https://github.com/rocicorp/replicache/commit/ccd929252576a39d5297813c4cef8ff00e1a38e1"
        },
        "date": 1620683139791,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.16,
            "range": "±148.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.26,
            "range": "±8.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.54,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.86,
            "range": "±104.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.69,
            "range": "±26.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.93,
            "range": "±48.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 14.69,
            "range": "±36.3%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.28,
            "range": "±69.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±939.1%",
            "unit": "MB/s",
            "extra": "79 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 121.37,
            "range": "±575.1%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.38,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.31,
            "range": "±12.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 7.58,
            "range": "±16.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.47,
            "range": "±26.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f011c318e743f32ff281b68591c5eb5f42f64787",
          "message": "Roll deps (#377)",
          "timestamp": "2021-05-14T12:30:47-07:00",
          "tree_id": "a3308cb5e951ab628db393e6cff00e3298edcf8a",
          "url": "https://github.com/rocicorp/replicache/commit/f011c318e743f32ff281b68591c5eb5f42f64787"
        },
        "date": 1621020816876,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.87,
            "range": "±167.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.83,
            "range": "±75.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.02,
            "range": "±7.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.65,
            "range": "±70.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.65,
            "range": "±29.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.16,
            "range": "±35.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.42,
            "range": "±32.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.86,
            "range": "±107.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±545.0%",
            "unit": "MB/s",
            "extra": "45 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 83.86,
            "range": "±498.3%",
            "unit": "ops/sec",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.68,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.45,
            "range": "±14.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.92,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.26,
            "range": "±17.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.1,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "a05bd69e08d4bdabfcae90ed5292d1d2eb089fd7",
          "message": "Use prepare for mock fetch work-araound",
          "timestamp": "2021-05-17T11:21:09-07:00",
          "tree_id": "3ac2bcf03d65b8eb3e76aebc3ba4957ba74ad651",
          "url": "https://github.com/rocicorp/replicache/commit/a05bd69e08d4bdabfcae90ed5292d1d2eb089fd7"
        },
        "date": 1621275837223,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.82,
            "range": "±177.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.48,
            "range": "±232.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.1,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.64,
            "range": "±136.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.27,
            "range": "±28.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.62,
            "range": "±38.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.92,
            "range": "±48.9%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.08,
            "range": "±56.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±692.7%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 79.33,
            "range": "±364.2%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.97,
            "range": "±11.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.5,
            "range": "±8.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.85,
            "range": "±14.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.41,
            "range": "±18.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.16,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "bacedc7c1be87f6bc79131083032b28f9c4be9f8",
          "message": "Update integration guide to make sure ord is a number\n\nOur SQL wrapper returns SQL BIGINT as strings. Convert to float64. We\ncould use bigint but who cares?",
          "timestamp": "2021-05-17T12:07:11-07:00",
          "tree_id": "076e01da0543626b6ab59b397cea6cf2b479629a",
          "url": "https://github.com/rocicorp/replicache/commit/bacedc7c1be87f6bc79131083032b28f9c4be9f8"
        },
        "date": 1621278631407,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.96,
            "range": "±167.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.17,
            "range": "±20.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.37,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.76,
            "range": "±23.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7,
            "range": "±28.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.6,
            "range": "±44.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 14.38,
            "range": "±51.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.74,
            "range": "±58.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±688.3%",
            "unit": "MB/s",
            "extra": "56 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 85.06,
            "range": "±686.6%",
            "unit": "ops/sec",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.39,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±17.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.96,
            "range": "±8.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.13,
            "range": "±26.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.32,
            "range": "±6.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aae51c939fe904669997d32c4b335936995fa86a",
          "message": "Remove console.group calls (#381)\n\nWas \"spamming\" the logs since groups seems to always be logged no matter\r\nif anything is logged in them.\r\n\r\nFixes #380",
          "timestamp": "2021-05-17T12:23:33-07:00",
          "tree_id": "a4ad981f1a184b6e74deb6e62f4c74174d2526a0",
          "url": "https://github.com/rocicorp/replicache/commit/aae51c939fe904669997d32c4b335936995fa86a"
        },
        "date": 1621279573204,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.53,
            "range": "±159.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.21,
            "range": "±72.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.01,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.53,
            "range": "±222.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.89,
            "range": "±32.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.72,
            "range": "±29.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.84,
            "range": "±47.7%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.03,
            "range": "±55.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±703.9%",
            "unit": "MB/s",
            "extra": "61 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.69,
            "range": "±404.2%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.64,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.45,
            "range": "±12.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.88,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.65,
            "range": "±7.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.22,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b10ff3eb941277d2b74f8d38f261b50196100cba",
          "message": "update designdoc intro to realtime sync (#382)",
          "timestamp": "2021-05-17T12:41:17-10:00",
          "tree_id": "2812c72158aefbd2470085f4fff90ab9f26e0fa9",
          "url": "https://github.com/rocicorp/replicache/commit/b10ff3eb941277d2b74f8d38f261b50196100cba"
        },
        "date": 1621291445227,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.52,
            "range": "±152.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 1.89,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.52,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.11,
            "range": "±31.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.71,
            "range": "±30.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.3,
            "range": "±48.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.8,
            "range": "±45.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 7.76,
            "range": "±55.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±3749.9%",
            "unit": "MB/s",
            "extra": "30 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 91.8,
            "range": "±441.8%",
            "unit": "ops/sec",
            "extra": "46 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.04,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.37,
            "range": "±9.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.26,
            "range": "±10.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.52,
            "range": "±8.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.22,
            "range": "±8.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "fd4cb702217eea18e9bae4f291582decb0d57207",
          "message": "Add a new \"How Replicache Works\" doc section.\n\nRemove the arch section from the guide which was covering some of this.",
          "timestamp": "2021-05-18T02:34:04-10:00",
          "tree_id": "0c88b3989523e066899b1443b252d5057d507264",
          "url": "https://github.com/rocicorp/replicache/commit/fd4cb702217eea18e9bae4f291582decb0d57207"
        },
        "date": 1621341494997,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.61,
            "range": "±170.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.12,
            "range": "±140.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.84,
            "range": "±174.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.51,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.54,
            "range": "±34.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.3,
            "range": "±33.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.27,
            "range": "±43.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9,
            "range": "±44.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2694.4%",
            "unit": "MB/s",
            "extra": "31 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 69.2,
            "range": "±246.0%",
            "unit": "ops/sec",
            "extra": "35 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.55,
            "range": "±5.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.45,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.12,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.49,
            "range": "±9.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.13,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "009fc69d85dc0f383aad55383042884e042d09e6",
          "message": "Add a new \"How Replicache Works\" doc section.\n\nRemove the arch section from the guide which was covering some of this.",
          "timestamp": "2021-05-18T02:40:10-10:00",
          "tree_id": "10e51f4c5383e0efd28348dde92d5cfcf82c1572",
          "url": "https://github.com/rocicorp/replicache/commit/009fc69d85dc0f383aad55383042884e042d09e6"
        },
        "date": 1621341774049,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.58,
            "range": "±155.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.29,
            "range": "±15.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.99,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.59,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.08,
            "range": "±31.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±36.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.58,
            "range": "±39.7%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 8.79,
            "range": "±52.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±721.4%",
            "unit": "MB/s",
            "extra": "62 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 95.57,
            "range": "±413.3%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.73,
            "range": "±6.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.47,
            "range": "±7.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.32,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.67,
            "range": "±43.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.27,
            "range": "±6.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "102895daab9b623df1c69e5b018da1fde1b8b7f3",
          "message": "Revert \"test deploy\"\n\nThis reverts commit b836dc4a1bba17409891be724346b0bc58b42708.",
          "timestamp": "2021-05-18T02:50:46-10:00",
          "tree_id": "10e51f4c5383e0efd28348dde92d5cfcf82c1572",
          "url": "https://github.com/rocicorp/replicache/commit/102895daab9b623df1c69e5b018da1fde1b8b7f3"
        },
        "date": 1621342417573,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.51,
            "range": "±153.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.17,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.93,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.53,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.92,
            "range": "±31.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.78,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.83,
            "range": "±39.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.02,
            "range": "±55.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±3887.5%",
            "unit": "MB/s",
            "extra": "29 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 84.73,
            "range": "±451.9%",
            "unit": "ops/sec",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.51,
            "range": "±19.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.45,
            "range": "±11.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.5,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.74,
            "range": "±10.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.22,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "d6d5dda0d521befb88be64be89c90cbe6a3ac45f",
          "message": "Bump version to 6.2.2.",
          "timestamp": "2021-05-18T08:48:54-07:00",
          "tree_id": "280270c08319358cc918854755f5e15b86ce5fd6",
          "url": "https://github.com/rocicorp/replicache/commit/d6d5dda0d521befb88be64be89c90cbe6a3ac45f"
        },
        "date": 1621353093991,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.81,
            "range": "±177.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.55,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.11,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.6,
            "range": "±258.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.17,
            "range": "±28.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.1,
            "range": "±41.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.14,
            "range": "±86.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.46,
            "range": "±49.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±632.8%",
            "unit": "MB/s",
            "extra": "48 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 79.75,
            "range": "±390.1%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.9,
            "range": "±8.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.55,
            "range": "±14.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.21,
            "range": "±10.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.24,
            "range": "±7.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.34,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "1cb8c3ec96d632cb8c00057105b954e4a3f487f0",
          "message": "Update doc/docs/how-it-works.md\n\nCo-authored-by: Erik Arvidsson <arv@roci.dev>",
          "timestamp": "2021-05-18T07:25:02-10:00",
          "tree_id": "32c60fc97f0a1c338070619d83f0e172989bb31b",
          "url": "https://github.com/rocicorp/replicache/commit/1cb8c3ec96d632cb8c00057105b954e4a3f487f0"
        },
        "date": 1621358843122,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.22,
            "range": "±184.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.3,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.57,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.06,
            "range": "±31.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.25,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.48,
            "range": "±58.1%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.13,
            "range": "±48.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±713.0%",
            "unit": "MB/s",
            "extra": "58 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 93.79,
            "range": "±463.2%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.71,
            "range": "±7.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.66,
            "range": "±7.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.03,
            "range": "±9.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.09,
            "range": "±19.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.33,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "00494b2efa93c3d7c6046fdaa972003461d24b25",
          "message": "Update guide-render-ui.md",
          "timestamp": "2021-05-19T07:17:17-10:00",
          "tree_id": "6ce1db9bb435afc5cb611fe10927a66538e489cc",
          "url": "https://github.com/rocicorp/replicache/commit/00494b2efa93c3d7c6046fdaa972003461d24b25"
        },
        "date": 1621444785820,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.59,
            "range": "±134.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.37,
            "range": "±1.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.06,
            "range": "±84.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.63,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.11,
            "range": "±33.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.37,
            "range": "±22.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 14.11,
            "range": "±75.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 8.86,
            "range": "±50.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±793.1%",
            "unit": "MB/s",
            "extra": "64 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 98.77,
            "range": "±421.6%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.81,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.5,
            "range": "±14.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.35,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.09,
            "range": "±25.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.27,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "58f100be4981f48335b6efcb09cca62fc2569550",
          "message": "Update guide-local-mutations.md",
          "timestamp": "2021-05-19T07:16:40-10:00",
          "tree_id": "fda6db00b3e33a5b91a9201f2ba9e5defeb8e259",
          "url": "https://github.com/rocicorp/replicache/commit/58f100be4981f48335b6efcb09cca62fc2569550"
        },
        "date": 1621444785913,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.45,
            "range": "±181.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.13,
            "range": "±420.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.83,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.4,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.93,
            "range": "±26.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.76,
            "range": "±38.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.76,
            "range": "±48.2%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 8.41,
            "range": "±50.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±630.8%",
            "unit": "MB/s",
            "extra": "41 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 61.41,
            "range": "±180.1%",
            "unit": "ops/sec",
            "extra": "31 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.41,
            "range": "±10.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.43,
            "range": "±10.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.21,
            "range": "±12.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.92,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 0.98,
            "range": "±10.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "80a2800a900d2b49a30bf33acc5fd7668e71cc69",
          "message": "Fix flaky onSync test (#385)\n\nWait for open to be done (by awaiting clientID) before we continue tests.\r\n\r\nAlso change the tests to tick until a certain condition is met instead of a hard\r\ncoded fake time which does not work well when there is a real time we need to\r\nwait as well due to IDB being async.\r\n\r\nFixes #360",
          "timestamp": "2021-05-19T14:30:48-07:00",
          "tree_id": "628f80d7ed87ad01478257d16adf09b8e84e29c9",
          "url": "https://github.com/rocicorp/replicache/commit/80a2800a900d2b49a30bf33acc5fd7668e71cc69"
        },
        "date": 1621460009208,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.72,
            "range": "±167.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.72,
            "range": "±10.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.01,
            "range": "±169.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.61,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.03,
            "range": "±32.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.62,
            "range": "±38.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.89,
            "range": "±31.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.05,
            "range": "±49.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±707.2%",
            "unit": "MB/s",
            "extra": "52 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 80.8,
            "range": "±318.4%",
            "unit": "ops/sec",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.86,
            "range": "±9.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.51,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.99,
            "range": "±6.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.58,
            "range": "±10.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.2,
            "range": "±8.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ac19685592eaa8d6affeba3e3803245f9d68a469",
          "message": "Do not run things twice durin npm publish (#388)\n\nThis was happening because `prepack` was calling `prepublishOnly` so we\r\nended up calling `prepublishOnly` twice.\r\n\r\nFixes #379",
          "timestamp": "2021-05-20T12:22:32-07:00",
          "tree_id": "e6a40a70b102391c795dbff97c6dd12dfd92de3f",
          "url": "https://github.com/rocicorp/replicache/commit/ac19685592eaa8d6affeba3e3803245f9d68a469"
        },
        "date": 1621538708107,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.71,
            "range": "±144.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.34,
            "range": "±14.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.18,
            "range": "±11.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.67,
            "range": "±99.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.04,
            "range": "±24.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.8,
            "range": "±35.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 13.59,
            "range": "±72.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.15,
            "range": "±50.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±778.6%",
            "unit": "MB/s",
            "extra": "66 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 100.86,
            "range": "±418.7%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.96,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.5,
            "range": "±18.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.68,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.3,
            "range": "±14.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.32,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "27e266d06aa3493a0fa433c37b1333a39456cb83",
          "message": "Split GH actions int o more specific tasks (#389)",
          "timestamp": "2021-05-20T12:48:08-07:00",
          "tree_id": "0aca29e1db4b1d178a7f7ed699ac085b3f3c2f5c",
          "url": "https://github.com/rocicorp/replicache/commit/27e266d06aa3493a0fa433c37b1333a39456cb83"
        },
        "date": 1621540307602,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.66,
            "range": "±171.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.39,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.86,
            "range": "±28.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.64,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.4,
            "range": "±31.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.22,
            "range": "±46.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.21,
            "range": "±37.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.8,
            "range": "±45.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±686.6%",
            "unit": "MB/s",
            "extra": "51 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 82.21,
            "range": "±326.7%",
            "unit": "ops/sec",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.04,
            "range": "±10.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.52,
            "range": "±12.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.52,
            "range": "±16.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.26,
            "range": "±9.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.17,
            "range": "±11.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "2fb88dcf0cbc2c38618aca7ac888c6c803a1acae",
          "message": "Argh. Fix code blocks in docs again.",
          "timestamp": "2021-05-22T06:02:55-10:00",
          "tree_id": "cb3197060b87701d3a25b3b8ada0622844836da9",
          "url": "https://github.com/rocicorp/replicache/commit/2fb88dcf0cbc2c38618aca7ac888c6c803a1acae"
        },
        "date": 1621699540984,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.03,
            "range": "±155.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.81,
            "range": "±16.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.26,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.68,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.16,
            "range": "±34.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.04,
            "range": "±29.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.19,
            "range": "±99.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.49,
            "range": "±75.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±698.8%",
            "unit": "MB/s",
            "extra": "51 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 85.08,
            "range": "±436.1%",
            "unit": "ops/sec",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.3,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±5.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.95,
            "range": "±6.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.74,
            "range": "±9.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.25,
            "range": "±14.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5d8a0104111ed1aa9774621c438c31c518f6ab05",
          "message": "npm run format",
          "timestamp": "2021-06-08T13:58:38-07:00",
          "tree_id": "2c540c3a4f7860fffe9436258984ba49c5530c27",
          "url": "https://github.com/rocicorp/replicache/commit/5d8a0104111ed1aa9774621c438c31c518f6ab05"
        },
        "date": 1623186102412,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.71,
            "range": "±152.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.8,
            "range": "±17.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.14,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.65,
            "range": "±94.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.08,
            "range": "±29.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.25,
            "range": "±31.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 9.76,
            "range": "±48.6%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 9.27,
            "range": "±50.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±810.6%",
            "unit": "MB/s",
            "extra": "65 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.53,
            "range": "±481.0%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.99,
            "range": "±10.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.49,
            "range": "±10.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.43,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.08,
            "range": "±8.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.31,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "8ef730d433e1a59f86847198fd68f0aba9b9380c",
          "message": "Docs: Push handler should return JSON object",
          "timestamp": "2021-06-08T15:05:03-07:00",
          "tree_id": "84f069a7e33957f46f0efba9de105bedbf0cf5e8",
          "url": "https://github.com/rocicorp/replicache/commit/8ef730d433e1a59f86847198fd68f0aba9b9380c"
        },
        "date": 1623190113944,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.83,
            "range": "±163.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.84,
            "range": "±18.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.1,
            "range": "±342.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.73,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.18,
            "range": "±32.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.26,
            "range": "±34.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.47,
            "range": "±34.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.37,
            "range": "±61.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±712.9%",
            "unit": "MB/s",
            "extra": "50 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 83.65,
            "range": "±233.2%",
            "unit": "ops/sec",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.18,
            "range": "±10.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.52,
            "range": "±11.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.09,
            "range": "±17.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.25,
            "range": "±17.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.2,
            "range": "±15.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "04729c92e820118b27191c4b06765f41cb4a9d75",
          "message": "Fix docs",
          "timestamp": "2021-06-08T15:08:23-07:00",
          "tree_id": "e5fe28711cf15f560219e91c564e498e2b928b66",
          "url": "https://github.com/rocicorp/replicache/commit/04729c92e820118b27191c4b06765f41cb4a9d75"
        },
        "date": 1623190257106,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.12,
            "range": "±141.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.22,
            "range": "±16.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.36,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±124.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 7.15,
            "range": "±30.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 7.48,
            "range": "±23.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 13.61,
            "range": "±39.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.28,
            "range": "±83.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±884.5%",
            "unit": "MB/s",
            "extra": "49 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 89.46,
            "range": "±369.6%",
            "unit": "ops/sec",
            "extra": "45 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.32,
            "range": "±8.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.67,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.18,
            "range": "±133.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.97,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.28,
            "range": "±9.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5d058e18e32e19c0e6bd6e4882cdc3f2480d4d5d",
          "message": " Add a JS backed Puller/Pusher implementation (#412)\n\nImplement Pusher and Puller in JS and pass that into Rust.\r\n\r\nFixes #394",
          "timestamp": "2021-06-21T15:20:21-07:00",
          "tree_id": "78b0f633b4b9997b63b141297c5459a64f7b1681",
          "url": "https://github.com/rocicorp/replicache/commit/5d058e18e32e19c0e6bd6e4882cdc3f2480d4d5d"
        },
        "date": 1624314156360,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.95,
            "range": "±72.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.78,
            "range": "±0.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.39,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.48,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.05,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.5,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.53,
            "range": "±70.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.71,
            "range": "±70.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±721.6%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 53.95,
            "range": "±149.7%",
            "unit": "ops/sec",
            "extra": "27 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.2,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.24,
            "range": "±11.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.25,
            "range": "±23.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.77,
            "range": "±55.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "7ef148d2ddb8ec5f09f828654dfd29fac4cecc15",
          "message": "Remove old todo comment\n\nThe comment was about using the `override` keyword but the implementaion\nuses an `implements` interface and is not extending a base class.\n`override` only works when extending a class. `implements` already flags\ninvalid implementaions.",
          "timestamp": "2021-06-22T11:42:54-07:00",
          "tree_id": "b52c09087796ba2c75aa1bfd372a0f7674762660",
          "url": "https://github.com/rocicorp/replicache/commit/7ef148d2ddb8ec5f09f828654dfd29fac4cecc15"
        },
        "date": 1624387685195,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 2.28,
            "range": "±67.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 2.16,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.66,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.93,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.14,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.39,
            "range": "±51.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 3.91,
            "range": "±7.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.85,
            "range": "±61.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2003.8%",
            "unit": "MB/s",
            "extra": "83 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 35.52,
            "range": "±128.8%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.66,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.48,
            "range": "±52.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 6.78,
            "range": "±82.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.63,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.07,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "17e6076e352a827b1d6ce8fc644dc7f35da65b66",
          "message": "Wait for close in open (#415)\n\nIf there is a Replicache instance with the same name that is currently\r\nclosing, then we wait for that close to finish before we open a new\r\ninstance.\r\n\r\nThis fixes the issue where the developer uses the useReplicache hook and\r\nhas hot module reloading enabled.\r\n\r\nFixes #405",
          "timestamp": "2021-06-22T17:05:32-07:00",
          "tree_id": "b3dce49fe280f2e36fc2c0330af6d46bccfd97b9",
          "url": "https://github.com/rocicorp/replicache/commit/17e6076e352a827b1d6ce8fc644dc7f35da65b66"
        },
        "date": 1624406928021,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.53,
            "range": "±228.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.17,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.52,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.82,
            "range": "±79.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.25,
            "range": "±56.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.49,
            "range": "±61.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.1,
            "range": "±65.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.12,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±267.3%",
            "unit": "MB/s",
            "extra": "86 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 37.59,
            "range": "±63.3%",
            "unit": "ops/sec",
            "extra": "20 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.05,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.03,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 6.41,
            "range": "±61.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.25,
            "range": "±14.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 0.96,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "8a043d7699d01eb6bb9c719cb30d1d107e6132d4",
          "message": "Upgrade dependencies",
          "timestamp": "2021-06-22T17:09:04-07:00",
          "tree_id": "3f287f15bdcd8ee788fd91a5f9f1e28117678e5c",
          "url": "https://github.com/rocicorp/replicache/commit/8a043d7699d01eb6bb9c719cb30d1d107e6132d4"
        },
        "date": 1624407117560,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.9,
            "range": "±281.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.5,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.84,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.05,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.61,
            "range": "±56.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.52,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.37,
            "range": "±188.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.15,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1380.7%",
            "unit": "MB/s",
            "extra": "73 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 37.03,
            "range": "±152.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.39,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 7.64,
            "range": "±67.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.89,
            "range": "±28.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.13,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "1719e5d98ad71db3269c95510cf8731f6e5e061d",
          "message": "Update docs to use nanoid\n\nTowards #357",
          "timestamp": "2021-06-23T11:57:44-07:00",
          "tree_id": "bb8445791b0e9e7ab41587afdb797cec6ca67385",
          "url": "https://github.com/rocicorp/replicache/commit/1719e5d98ad71db3269c95510cf8731f6e5e061d"
        },
        "date": 1624474812926,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.8,
            "range": "±238.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.5,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.79,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±7.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.65,
            "range": "±60.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.78,
            "range": "±58.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.66,
            "range": "±207.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4,
            "range": "±76.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2497.8%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 43.36,
            "range": "±433.1%",
            "unit": "ops/sec",
            "extra": "22 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.55,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±8.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.33,
            "range": "±74.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.99,
            "range": "±32.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.23,
            "range": "±32.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7c6006e8fdc50a45508b640adba7e12c6da28e88",
          "message": "Update docs to use replicache-react instead (#417)",
          "timestamp": "2021-06-23T19:07:43Z",
          "tree_id": "6811a4a63b0c136b1a2617587122a9f19dd67c34",
          "url": "https://github.com/rocicorp/replicache/commit/7c6006e8fdc50a45508b640adba7e12c6da28e88"
        },
        "date": 1624475406200,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.33,
            "range": "±250.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.84,
            "range": "±15.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.99,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.2,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.66,
            "range": "±63.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.02,
            "range": "±65.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 16.55,
            "range": "±478.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.31,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2027.9%",
            "unit": "MB/s",
            "extra": "84 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 43.23,
            "range": "±153.8%",
            "unit": "ops/sec",
            "extra": "23 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.68,
            "range": "±0.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.17,
            "range": "±0.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.14,
            "range": "±70.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.56,
            "range": "±21.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.23,
            "range": "±7.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "19552ff997ca2ef7d62a49fe1b00ce5777408adc",
          "message": "One more occurance of replicache-react-util",
          "timestamp": "2021-06-23T12:13:03-07:00",
          "tree_id": "608808b6d1c519ce568d200fa5d3b68dfba32444",
          "url": "https://github.com/rocicorp/replicache/commit/19552ff997ca2ef7d62a49fe1b00ce5777408adc"
        },
        "date": 1624475766494,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.63,
            "range": "±244.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.5,
            "range": "±12.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.64,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±222.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.29,
            "range": "±61.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.55,
            "range": "±53.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.96,
            "range": "±220.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.93,
            "range": "±73.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±289.1%",
            "unit": "MB/s",
            "extra": "75 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 31.36,
            "range": "±216.3%",
            "unit": "ops/sec",
            "extra": "17 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.38,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.07,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.33,
            "range": "±42.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.12,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.1,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fcc8e9f604807f68951f25a58ebdc0ce933f721b",
          "message": "One more replicache-react-util\n\nThe .gitignore file was incorrect and was hiding search results",
          "timestamp": "2021-06-23T12:15:40-07:00",
          "tree_id": "3f55f2aa4bbc05922c0651e3acf3bebb6df303c3",
          "url": "https://github.com/rocicorp/replicache/commit/fcc8e9f604807f68951f25a58ebdc0ce933f721b"
        },
        "date": 1624475994867,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.65,
            "range": "±236.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.21,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.64,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.36,
            "range": "±55.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.4,
            "range": "±63.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 9.46,
            "range": "±156.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.92,
            "range": "±72.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±121.8%",
            "unit": "MB/s",
            "extra": "23 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 29.51,
            "range": "±136.9%",
            "unit": "ops/sec",
            "extra": "16 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.25,
            "range": "±3.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.07,
            "range": "±6.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 6.68,
            "range": "±86.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.32,
            "range": "±27.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.02,
            "range": "±19.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "320bda4b241706948ba12c76ac3bf6cf8f859ce0",
          "message": "Feat: Add onOnlineChange callback (#418)\n\nFixes #401\r\n\r\nCo-authored-by: Aaron Boodman <aaron@aaronboodman.com>",
          "timestamp": "2021-06-23T15:37:59-07:00",
          "tree_id": "0eeaa6ad8f2105fbbf4fa43af64b315de12a8309",
          "url": "https://github.com/rocicorp/replicache/commit/320bda4b241706948ba12c76ac3bf6cf8f859ce0"
        },
        "date": 1624488053230,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.39,
            "range": "±227.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.08,
            "range": "±53.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.49,
            "range": "±16.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.85,
            "range": "±41.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.27,
            "range": "±53.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.45,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 15.7,
            "range": "±364.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.77,
            "range": "±79.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1793.6%",
            "unit": "MB/s",
            "extra": "102 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 40.98,
            "range": "±216.8%",
            "unit": "ops/sec",
            "extra": "22 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.88,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1,
            "range": "±0.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.34,
            "range": "±111.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.19,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.11,
            "range": "±8.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6c7a28739c5d9e2a8bce1079472930be6aad9638",
          "message": "Minor doc typos (#419)",
          "timestamp": "2021-06-24T22:42:12Z",
          "tree_id": "606730642c058d995e1dfe5dbe9edd8eb7e4931a",
          "url": "https://github.com/rocicorp/replicache/commit/6c7a28739c5d9e2a8bce1079472930be6aad9638"
        },
        "date": 1624574695452,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.55,
            "range": "±239.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.01,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.46,
            "range": "±81.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.77,
            "range": "±126.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.4,
            "range": "±53.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.65,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 13.7,
            "range": "±260.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.11,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±104.4%",
            "unit": "MB/s",
            "extra": "24 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 33.82,
            "range": "±65.5%",
            "unit": "ops/sec",
            "extra": "17 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.08,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.03,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 6.02,
            "range": "±181.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.41,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.02,
            "range": "±9.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "81d7c80ee4a2bb131412813a8576a377fd49b0a9",
          "message": "Bump version to 6.3.0.",
          "timestamp": "2021-06-25T15:03:02-07:00",
          "tree_id": "867de76691a317234e75f100cf64be02bcddbb72",
          "url": "https://github.com/rocicorp/replicache/commit/81d7c80ee4a2bb131412813a8576a377fd49b0a9"
        },
        "date": 1624658867875,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.76,
            "range": "±271.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.73,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.95,
            "range": "±10.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.26,
            "range": "±7.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.78,
            "range": "±59.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.96,
            "range": "±61.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.68,
            "range": "±300.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.34,
            "range": "±71.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1609.3%",
            "unit": "MB/s",
            "extra": "90 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 49.48,
            "range": "±113.1%",
            "unit": "ops/sec",
            "extra": "25 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.73,
            "range": "±1.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.18,
            "range": "±8.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.95,
            "range": "±82.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.31,
            "range": "±30.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.27,
            "range": "±15.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "2b72ac5107f8ced2e80a75094f518c8ddcdcedf8",
          "message": "Split replicache.ts into smaller files\n\nIt was getting too large to maintain",
          "timestamp": "2021-06-25T15:48:44-07:00",
          "tree_id": "28c8acb66b7b9acce835816e0e53dee514c26e39",
          "url": "https://github.com/rocicorp/replicache/commit/2b72ac5107f8ced2e80a75094f518c8ddcdcedf8"
        },
        "date": 1624661504480,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.47,
            "range": "±275.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.1,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.58,
            "range": "±96.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.78,
            "range": "±144.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.18,
            "range": "±62.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.5,
            "range": "±63.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.77,
            "range": "±152.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.88,
            "range": "±67.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±224.4%",
            "unit": "MB/s",
            "extra": "106 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 41.41,
            "range": "±234.0%",
            "unit": "ops/sec",
            "extra": "21 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.88,
            "range": "±7.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.01,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.56,
            "range": "±58.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.53,
            "range": "±43.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.09,
            "range": "±16.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "8ab8223ebb4b1ae8f826a36e390d36b780287ef7",
          "message": "Bump version to 6.3.1.",
          "timestamp": "2021-07-01T15:44:12-10:00",
          "tree_id": "d51956637451a3f1f2209c6c506317a533d55bcf",
          "url": "https://github.com/rocicorp/replicache/commit/8ab8223ebb4b1ae8f826a36e390d36b780287ef7"
        },
        "date": 1625190457036,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.6,
            "range": "±228.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.24,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.62,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.9,
            "range": "±130.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.3,
            "range": "±62.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.69,
            "range": "±64.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 17.1,
            "range": "±338.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.16,
            "range": "±77.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1810.5%",
            "unit": "MB/s",
            "extra": "81 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 35.83,
            "range": "±186.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.07,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.07,
            "range": "±0.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 7.62,
            "range": "±52.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.28,
            "range": "±17.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.05,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "5370f43c1f614e83a118bdb770caf79cb5b2df06",
          "message": "Bump version to 6.3.2.",
          "timestamp": "2021-07-01T17:26:46-10:00",
          "tree_id": "16ddbf4463fe1e60c72bcfb18c231ab2e69e1ebc",
          "url": "https://github.com/rocicorp/replicache/commit/5370f43c1f614e83a118bdb770caf79cb5b2df06"
        },
        "date": 1625196650845,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.26,
            "range": "±277.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.88,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.43,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.81,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.24,
            "range": "±55.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.22,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.82,
            "range": "±221.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.9,
            "range": "±12.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±389.7%",
            "unit": "MB/s",
            "extra": "76 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 59.24,
            "range": "±280.8%",
            "unit": "ops/sec",
            "extra": "30 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.92,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.97,
            "range": "±9.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.9,
            "range": "±69.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.32,
            "range": "±9.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.04,
            "range": "±10.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "abed2fcf1828f5c2ea58f31b14db9bbc265b77d3",
          "message": "doc typo",
          "timestamp": "2021-07-01T17:57:19-10:00",
          "tree_id": "b2791cd7fb3df78912c5a714799a3671a76b0c73",
          "url": "https://github.com/rocicorp/replicache/commit/abed2fcf1828f5c2ea58f31b14db9bbc265b77d3"
        },
        "date": 1625198408689,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.53,
            "range": "±238.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.25,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.59,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.93,
            "range": "±182.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.52,
            "range": "±54.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.39,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 13.32,
            "range": "±341.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.11,
            "range": "±70.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1607.3%",
            "unit": "MB/s",
            "extra": "85 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 63.66,
            "range": "±283.0%",
            "unit": "ops/sec",
            "extra": "32 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.02,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.03,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 6.26,
            "range": "±85.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.48,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.09,
            "range": "±5.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "d533863acf29520efc470196713142d593f59cfd",
          "message": "clarify which pusher product to use",
          "timestamp": "2021-07-01T22:15:36-10:00",
          "tree_id": "92440790b19e3e7f5b25b3d4a395b1ec509a1a21",
          "url": "https://github.com/rocicorp/replicache/commit/d533863acf29520efc470196713142d593f59cfd"
        },
        "date": 1625213920217,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.66,
            "range": "±245.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.2,
            "range": "±240.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.78,
            "range": "±180.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.31,
            "range": "±56.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.62,
            "range": "±55.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 15.31,
            "range": "±299.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.43,
            "range": "±71.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1696.4%",
            "unit": "MB/s",
            "extra": "81 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 63.3,
            "range": "±280.7%",
            "unit": "ops/sec",
            "extra": "32 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.36,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±7.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 6.95,
            "range": "±70.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.83,
            "range": "±25.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.21,
            "range": "±8.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "07f307f6029d1b620208c98b15e8f0087241c6a8",
          "message": "Update license to allow up to 500 commercial clients and to restrict\ncompeting uses.",
          "timestamp": "2021-07-01T22:20:18-10:00",
          "tree_id": "06ba7e872c74104524063925734ca7e216f0a5c6",
          "url": "https://github.com/rocicorp/replicache/commit/07f307f6029d1b620208c98b15e8f0087241c6a8"
        },
        "date": 1625214173134,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.53,
            "range": "±271.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.13,
            "range": "±3.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.61,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.95,
            "range": "±1.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.28,
            "range": "±60.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.53,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 8.07,
            "range": "±137.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.01,
            "range": "±72.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±391.5%",
            "unit": "MB/s",
            "extra": "102 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 74.91,
            "range": "±330.9%",
            "unit": "ops/sec",
            "extra": "38 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.13,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.03,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.4,
            "range": "±21.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.92,
            "range": "±27.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.17,
            "range": "±26.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "a78ec0d63cc5d8679b4411168de6c0ad77c97c63",
          "message": "Merge commit 'c8c06b8cde94d3177123b466a0d9a86003c4adf2'",
          "timestamp": "2021-07-02T00:52:23-10:00",
          "tree_id": "f82370fc4743f8c27406b6d65895bb9d5db1b08b",
          "url": "https://github.com/rocicorp/replicache/commit/a78ec0d63cc5d8679b4411168de6c0ad77c97c63"
        },
        "date": 1625223443316,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.5,
            "range": "±257.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.24,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.69,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.04,
            "range": "±209.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.37,
            "range": "±63.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.46,
            "range": "±64.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.94,
            "range": "±178.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.04,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1451.2%",
            "unit": "MB/s",
            "extra": "104 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 81.41,
            "range": "±372.7%",
            "unit": "ops/sec",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.61,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±11.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.45,
            "range": "±34.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.06,
            "range": "±12.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.33,
            "range": "±21.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "41bda2244c8868287275eab3287b1c31d0dca70f",
          "message": "Clear a few more todos",
          "timestamp": "2021-07-02T01:08:49-10:00",
          "tree_id": "21d33123d115598746dcd6921b7465b1bd42bc10",
          "url": "https://github.com/rocicorp/replicache/commit/41bda2244c8868287275eab3287b1c31d0dca70f"
        },
        "date": 1625224297134,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.29,
            "range": "±264.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.02,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.59,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.89,
            "range": "±148.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.32,
            "range": "±56.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.39,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.16,
            "range": "±200.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.82,
            "range": "±73.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±414.3%",
            "unit": "MB/s",
            "extra": "112 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 71.32,
            "range": "±169.5%",
            "unit": "ops/sec",
            "extra": "36 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.16,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.03,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.03,
            "range": "±139.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.69,
            "range": "±17.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.08,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "f4db85bfd35f34da43891f057f218facc667c73b",
          "message": "npm run format",
          "timestamp": "2021-07-06T13:41:38-07:00",
          "tree_id": "6087a391ec8a9456389029dabac226b3b59578c7",
          "url": "https://github.com/rocicorp/replicache/commit/f4db85bfd35f34da43891f057f218facc667c73b"
        },
        "date": 1625604277852,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.15,
            "range": "±234.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.03,
            "range": "±12.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.31,
            "range": "±28.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.73,
            "range": "±124.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.22,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.27,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.09,
            "range": "±216.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.13,
            "range": "±80.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1641.5%",
            "unit": "MB/s",
            "extra": "83 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 63.22,
            "range": "±260.0%",
            "unit": "ops/sec",
            "extra": "32 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.74,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.95,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 6.45,
            "range": "±68.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.47,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.15,
            "range": "±34.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "7c8a8a3b00c5eae0ef305e7f73c66ce6312e16d5",
          "message": "Format and a typo",
          "timestamp": "2021-07-06T14:07:15-07:00",
          "tree_id": "52ea65344206f97af796c9b685308154582467cb",
          "url": "https://github.com/rocicorp/replicache/commit/7c8a8a3b00c5eae0ef305e7f73c66ce6312e16d5"
        },
        "date": 1625605810595,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.24,
            "range": "±257.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.87,
            "range": "±14.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.07,
            "range": "±14.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.23,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.03,
            "range": "±56.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.99,
            "range": "±61.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.73,
            "range": "±67.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.44,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1828.2%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 92.72,
            "range": "±358.8%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.09,
            "range": "±0.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.23,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.36,
            "range": "±58.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.45,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.32,
            "range": "±7.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4ecb13154adaef887857104f22c8a24e60d06401",
          "message": "Bump prismjs from 1.23.0 to 1.24.0 in /doc (#423)\n\nBumps [prismjs](https://github.com/PrismJS/prism) from 1.23.0 to 1.24.0.\r\n- [Release notes](https://github.com/PrismJS/prism/releases)\r\n- [Changelog](https://github.com/PrismJS/prism/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/PrismJS/prism/compare/v1.23.0...v1.24.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: prismjs\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Erik Arvidsson <arv@roci.dev>",
          "timestamp": "2021-07-06T21:10:24Z",
          "tree_id": "ca1ba66d03dbb4e68ae5b70df6e010d8f942ca76",
          "url": "https://github.com/rocicorp/replicache/commit/4ecb13154adaef887857104f22c8a24e60d06401"
        },
        "date": 1625605978379,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.71,
            "range": "±241.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.5,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.72,
            "range": "±17.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±13.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.39,
            "range": "±54.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.35,
            "range": "±10.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 14.01,
            "range": "±305.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4,
            "range": "±79.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±758.9%",
            "unit": "MB/s",
            "extra": "46 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 57.53,
            "range": "±300.8%",
            "unit": "ops/sec",
            "extra": "29 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.84,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 7.21,
            "range": "±61.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 3.95,
            "range": "±24.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.12,
            "range": "±6.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a25be63614f0a2d91f311b6ad8ee99660402b2ac",
          "message": "Add module and exports fields to package.json (#424)",
          "timestamp": "2021-07-06T16:46:11-07:00",
          "tree_id": "1ca578377981ef5f629902fd1e77ce4a0e8819c6",
          "url": "https://github.com/rocicorp/replicache/commit/a25be63614f0a2d91f311b6ad8ee99660402b2ac"
        },
        "date": 1625615310435,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.12,
            "range": "±231.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.71,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.96,
            "range": "±2.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.19,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.79,
            "range": "±60.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.85,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.55,
            "range": "±69.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.31,
            "range": "±73.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2161.0%",
            "unit": "MB/s",
            "extra": "104 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 87.03,
            "range": "±385.1%",
            "unit": "ops/sec",
            "extra": "44 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.01,
            "range": "±0.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.21,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.06,
            "range": "±50.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.46,
            "range": "±27.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.26,
            "range": "±6.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9ba81d01bf29cb2e361f99d21a951cbb4807aaec",
          "message": "Add test for #421 (#425)\n\nCloses #421",
          "timestamp": "2021-07-06T17:14:28-07:00",
          "tree_id": "4c0447af63a742ef5d7dd17f9157f0b918525ef5",
          "url": "https://github.com/rocicorp/replicache/commit/9ba81d01bf29cb2e361f99d21a951cbb4807aaec"
        },
        "date": 1625617011344,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.21,
            "range": "±278.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.34,
            "range": "±10.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.93,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.28,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.54,
            "range": "±47.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.49,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 9.02,
            "range": "±171.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.45,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1758.3%",
            "unit": "MB/s",
            "extra": "79 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 88.14,
            "range": "±542.5%",
            "unit": "ops/sec",
            "extra": "46 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.02,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±9.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.8,
            "range": "±58.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.42,
            "range": "±10.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.34,
            "range": "±9.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c5a7ca13cfb32a6336ee0b8ed002d2269fd22fa0",
          "message": "FIX: Remove unused type Mutation (#426)\n\nAnd clarify ReplayMutation with a comment.\r\n\r\nTechnically, this is a breaking change from 6.3 but it is only a type\r\nand the type is never used so hopefully we can get away with it without\r\ndoing a major release.",
          "timestamp": "2021-07-09T12:25:10-07:00",
          "tree_id": "f3f95f41f75698c9810003e36bd60d1205134c2c",
          "url": "https://github.com/rocicorp/replicache/commit/c5a7ca13cfb32a6336ee0b8ed002d2269fd22fa0"
        },
        "date": 1625858872304,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.47,
            "range": "±259.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.01,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.62,
            "range": "±12.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.95,
            "range": "±53.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.33,
            "range": "±58.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.46,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.14,
            "range": "±68.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.21,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1392.5%",
            "unit": "MB/s",
            "extra": "74 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 76.88,
            "range": "±505.1%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.28,
            "range": "±5.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.03,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 7.93,
            "range": "±58.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.46,
            "range": "±14.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.21,
            "range": "±9.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "118d52ca7aed9d27faa489586f7fcaaa850019d8",
          "message": "Trying to use gh-pages for perf graph instead",
          "timestamp": "2021-07-09T12:47:00-07:00",
          "tree_id": "a1301a85ca0faed612d6ba0d25e583b115b7ba80",
          "url": "https://github.com/rocicorp/replicache/commit/118d52ca7aed9d27faa489586f7fcaaa850019d8"
        },
        "date": 1625860204809,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.91,
            "range": "±208.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.85,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.5,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.77,
            "range": "±164.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.12,
            "range": "±57.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.37,
            "range": "±59.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 13.53,
            "range": "±288.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.81,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±572.3%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 73.57,
            "range": "±469.1%",
            "unit": "ops/sec",
            "extra": "39 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.82,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.01,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 7.5,
            "range": "±84.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 4.68,
            "range": "±40.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.16,
            "range": "±10.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "4d26f554643b844e560a3d1cb6f54a23325982d9",
          "message": "Change perf output dir",
          "timestamp": "2021-07-09T13:50:36-07:00",
          "tree_id": "0f01cec1a52020bde21d25fad76c6d4fff4c7f01",
          "url": "https://github.com/rocicorp/replicache/commit/4d26f554643b844e560a3d1cb6f54a23325982d9"
        },
        "date": 1625863996321,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.22,
            "range": "±266.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.72,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.92,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.17,
            "range": "±4.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.64,
            "range": "±60.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.82,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.46,
            "range": "±66.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.45,
            "range": "±66.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2022.5%",
            "unit": "MB/s",
            "extra": "108 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 103.33,
            "range": "±536.8%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.94,
            "range": "±0.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.18,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.7,
            "range": "±28.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.52,
            "range": "±18.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.33,
            "range": "±5.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "47e896afef57da0f1e832db7decb0584d3fff613",
          "message": "Perf dashboard: Link to gh pages instead",
          "timestamp": "2021-07-09T13:56:05-07:00",
          "tree_id": "063fb3bf38286341a3b2de87ef69c2c28b234c8c",
          "url": "https://github.com/rocicorp/replicache/commit/47e896afef57da0f1e832db7decb0584d3fff613"
        },
        "date": 1625864317625,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.13,
            "range": "±258.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.78,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.04,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.2,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.8,
            "range": "±55.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.94,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 14.51,
            "range": "±341.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.38,
            "range": "±70.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2660.5%",
            "unit": "MB/s",
            "extra": "119 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 103.94,
            "range": "±476.0%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.9,
            "range": "±0.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.19,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.7,
            "range": "±20.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.93,
            "range": "±21.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 1.32,
            "range": "±13.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1b03d6185e4f91c65084ba13141b0084313b90eb",
          "message": "Reload the browser between each perf test (#428)\n\nSo that subscrioption tests are not affected by order",
          "timestamp": "2021-07-09T16:02:07-07:00",
          "tree_id": "afa5a9c70798e784206434a173e9dfb495dc385a",
          "url": "https://github.com/rocicorp/replicache/commit/1b03d6185e4f91c65084ba13141b0084313b90eb"
        },
        "date": 1625871882329,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.06,
            "range": "±226.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.17,
            "range": "±8.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.6,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.85,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.52,
            "range": "±43.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.32,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.45,
            "range": "±45.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.24,
            "range": "±83.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1373.1%",
            "unit": "MB/s",
            "extra": "72 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 75.08,
            "range": "±457.0%",
            "unit": "ops/sec",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.19,
            "range": "±9.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.7,
            "range": "±5.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 8.77,
            "range": "±8.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.78,
            "range": "±38.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "196f2e56ff97249efbb3c41152ff2047a79a0ad9",
          "message": "Use non deprecated rollup-plugin-ts",
          "timestamp": "2021-07-09T16:25:12-07:00",
          "tree_id": "aa0bbde608bab7ab4426fe00eb5e4f9b46ca9b7f",
          "url": "https://github.com/rocicorp/replicache/commit/196f2e56ff97249efbb3c41152ff2047a79a0ad9"
        },
        "date": 1625873268843,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.32,
            "range": "±241.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.05,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.47,
            "range": "±12.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.82,
            "range": "±13.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.31,
            "range": "±49.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.42,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.15,
            "range": "±68.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.77,
            "range": "±4.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1819.0%",
            "unit": "MB/s",
            "extra": "85 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 84.84,
            "range": "±630.3%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.06,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.99,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.98,
            "range": "±13.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.06,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.19,
            "range": "±44.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9aff6290b694ff3f4729bccb2596f3afc2d91125",
          "message": "One more rename (#429)",
          "timestamp": "2021-07-09T23:19:26Z",
          "tree_id": "88f687c4dbafc49b11fbf807295b8f5e19d54580",
          "url": "https://github.com/rocicorp/replicache/commit/9aff6290b694ff3f4729bccb2596f3afc2d91125"
        },
        "date": 1625873458693,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.74,
            "range": "±218.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.64,
            "range": "±27.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.47,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.32,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.07,
            "range": "±44.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.01,
            "range": "±58.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.88,
            "range": "±58.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.41,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1851.2%",
            "unit": "MB/s",
            "extra": "86 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 77.21,
            "range": "±534.4%",
            "unit": "ops/sec",
            "extra": "42 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.9,
            "range": "±7.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.15,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.86,
            "range": "±12.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.18,
            "range": "±16.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.82,
            "range": "±28.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "943979acf47ff6865b90b70ac902eb6bf8bdf572",
          "message": "Update docusaurus etc",
          "timestamp": "2021-07-09T16:30:33-07:00",
          "tree_id": "113ce17c23595147a2662fe8899a2af749e29de0",
          "url": "https://github.com/rocicorp/replicache/commit/943979acf47ff6865b90b70ac902eb6bf8bdf572"
        },
        "date": 1625873612455,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.02,
            "range": "±241.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.7,
            "range": "±14.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.16,
            "range": "±258.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.72,
            "range": "±12.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.18,
            "range": "±45.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.09,
            "range": "±61.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 3.72,
            "range": "±65.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.44,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1593.8%",
            "unit": "MB/s",
            "extra": "72 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 76.05,
            "range": "±444.1%",
            "unit": "ops/sec",
            "extra": "41 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.52,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.9,
            "range": "±6.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8,
            "range": "±29.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 8.13,
            "range": "±45.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.9,
            "range": "±19.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f6e56ad2f62d7c5af8874dceb58ff474d3e026b5",
          "message": "Update HACKING.md",
          "timestamp": "2021-07-09T17:14:41-07:00",
          "tree_id": "78293a0d823ba12b5d7c21a32850a5cdb82fe1e5",
          "url": "https://github.com/rocicorp/replicache/commit/f6e56ad2f62d7c5af8874dceb58ff474d3e026b5"
        },
        "date": 1625876225603,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.21,
            "range": "±235.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.57,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.83,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.15,
            "range": "±166.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.71,
            "range": "±52.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.94,
            "range": "±56.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.38,
            "range": "±69.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.42,
            "range": "±68.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2445.7%",
            "unit": "MB/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 100.9,
            "range": "±563.3%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.53,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.23,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.45,
            "range": "±45.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.68,
            "range": "±9.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 11.24,
            "range": "±56.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "6bc90279cff5b6607db11e9906dc4bb47e7c6477",
          "message": "Use Node 16 on GH Actions",
          "timestamp": "2021-07-12T11:20:27-07:00",
          "tree_id": "0624fbab82008af8dcf5aa60620f8680e152f8d3",
          "url": "https://github.com/rocicorp/replicache/commit/6bc90279cff5b6607db11e9906dc4bb47e7c6477"
        },
        "date": 1626114223594,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.21,
            "range": "±234.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.9,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.46,
            "range": "±12.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.72,
            "range": "±60.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.31,
            "range": "±45.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.45,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.23,
            "range": "±71.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.19,
            "range": "±79.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±825.5%",
            "unit": "MB/s",
            "extra": "63 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 66.1,
            "range": "±452.8%",
            "unit": "ops/sec",
            "extra": "36 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±6.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.8,
            "range": "±8.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 8.79,
            "range": "±12.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.26,
            "range": "±23.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "4c28257f17ce313fac1cb6f4b6c099e08e2b3988",
          "message": "Try newer Playwright",
          "timestamp": "2021-07-12T11:22:52-07:00",
          "tree_id": "6b23774b1a43ab1238e3b6da711911b11e6cf291",
          "url": "https://github.com/rocicorp/replicache/commit/4c28257f17ce313fac1cb6f4b6c099e08e2b3988"
        },
        "date": 1626114930225,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.22,
            "range": "±246.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.98,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.44,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.78,
            "range": "±11.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.15,
            "range": "±49.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.23,
            "range": "±8.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 3.82,
            "range": "±60.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.79,
            "range": "±72.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1816.7%",
            "unit": "MB/s",
            "extra": "86 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 86.44,
            "range": "±589.0%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.96,
            "range": "±0.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.55,
            "range": "±14.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.08,
            "range": "±44.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.31,
            "range": "±37.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "6510f1cc3eba8ce7edb38f160bb87c3cf26f4744",
          "message": "Test runs-on ec2",
          "timestamp": "2021-07-12T11:57:17-07:00",
          "tree_id": "be60d58fae21ef8aa232cc734556032f89a9b159",
          "url": "https://github.com/rocicorp/replicache/commit/6510f1cc3eba8ce7edb38f160bb87c3cf26f4744"
        },
        "date": 1626128452709,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.34,
            "range": "±106.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.96,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.58,
            "range": "±12.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.85,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.44,
            "range": "±47.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.44,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.48,
            "range": "±67.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.22,
            "range": "±1.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1507.1%",
            "unit": "MB/s",
            "extra": "89 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 93.3,
            "range": "±508.6%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.35,
            "range": "±0.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.98,
            "range": "±31.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.38,
            "range": "±41.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.49,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "13fe846b7fe59d4cf40f09ce2957f1edc6095fb8",
          "message": "touch",
          "timestamp": "2021-07-12T15:23:43-07:00",
          "tree_id": "43fd8b5eae2a0701674001594fe6b6802cd115e1",
          "url": "https://github.com/rocicorp/replicache/commit/13fe846b7fe59d4cf40f09ce2957f1edc6095fb8"
        },
        "date": 1626128732945,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.26,
            "range": "±119.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.12,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.55,
            "range": "±14.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.9,
            "range": "±13.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.42,
            "range": "±46.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.36,
            "range": "±1.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.28,
            "range": "±64.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.21,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1444.4%",
            "unit": "MB/s",
            "extra": "80 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 88,
            "range": "±451.7%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.26,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.75,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.13,
            "range": "±16.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.62,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "27ad2023664b0ad94193a013d72828a3946ceaaa",
          "message": "touch again",
          "timestamp": "2021-07-12T15:42:43-07:00",
          "tree_id": "be60d58fae21ef8aa232cc734556032f89a9b159",
          "url": "https://github.com/rocicorp/replicache/commit/27ad2023664b0ad94193a013d72828a3946ceaaa"
        },
        "date": 1626129873935,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.35,
            "range": "±99.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4,
            "range": "±28.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.61,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.74,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.62,
            "range": "±44.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.47,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.47,
            "range": "±67.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.17,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1527.3%",
            "unit": "MB/s",
            "extra": "85 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 91.09,
            "range": "±654.3%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.36,
            "range": "±0.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.54,
            "range": "±32.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.92,
            "range": "±11.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.24,
            "range": "±8.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5ef8b29049142b3bc5a444b798321ada790855fa",
          "message": "Add section to HACKING on how to manually check a release (#435)",
          "timestamp": "2021-07-14T10:12:14-07:00",
          "tree_id": "19021e099a90c5117a9563e0287edea86f3c386a",
          "url": "https://github.com/rocicorp/replicache/commit/5ef8b29049142b3bc5a444b798321ada790855fa"
        },
        "date": 1626282845047,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.5,
            "range": "±130.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.03,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.51,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±14.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.59,
            "range": "±45.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.47,
            "range": "±60.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.64,
            "range": "±68.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.31,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1557.5%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.34,
            "range": "±557.9%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.29,
            "range": "±0.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.98,
            "range": "±47.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.6,
            "range": "±22.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.77,
            "range": "±33.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "d62750060dc3b6eaa6b8d0aa38845a8dd14e0ab7",
          "message": "Revert back to Docusaurus beta 1",
          "timestamp": "2021-07-14T10:52:34-07:00",
          "tree_id": "eb6b49d0d0eb134ad6e1bb8ed985747be5a81ee7",
          "url": "https://github.com/rocicorp/replicache/commit/d62750060dc3b6eaa6b8d0aa38845a8dd14e0ab7"
        },
        "date": 1626285260583,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.49,
            "range": "±111.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.06,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.62,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.58,
            "range": "±48.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.55,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.63,
            "range": "±68.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.3,
            "range": "±2.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1632.5%",
            "unit": "MB/s",
            "extra": "92 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.14,
            "range": "±568.4%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.29,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.1,
            "range": "±20.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.77,
            "range": "±8.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.14,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2eb45641711ea073d67e8947fdc7a993b2651516",
          "message": "Docs: Add link to ReplicacheOptions schemaVersion (#436)",
          "timestamp": "2021-07-14T17:55:32Z",
          "tree_id": "7a8e70173e2b927bbe13aa22925f8aa03569c5bf",
          "url": "https://github.com/rocicorp/replicache/commit/2eb45641711ea073d67e8947fdc7a993b2651516"
        },
        "date": 1626285431738,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.4,
            "range": "±102.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.08,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.56,
            "range": "±11.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.88,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.71,
            "range": "±46.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.51,
            "range": "±57.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.5,
            "range": "±69.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.31,
            "range": "±72.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1534.1%",
            "unit": "MB/s",
            "extra": "92 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 98.6,
            "range": "±559.2%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.31,
            "range": "±0.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.33,
            "range": "±8.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.79,
            "range": "±21.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.41,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "53a5760d250c75e67c5039f22424095802f1798e",
          "message": "Fix links in JSDocs (#437)",
          "timestamp": "2021-07-14T20:32:45Z",
          "tree_id": "08c781ec64a9aec75b71eb58d29507ca3aa3ea61",
          "url": "https://github.com/rocicorp/replicache/commit/53a5760d250c75e67c5039f22424095802f1798e"
        },
        "date": 1626294869595,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.39,
            "range": "±109.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.18,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.58,
            "range": "±12.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.88,
            "range": "±11.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.55,
            "range": "±47.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.45,
            "range": "±56.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.6,
            "range": "±64.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.34,
            "range": "±71.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1476.7%",
            "unit": "MB/s",
            "extra": "85 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.13,
            "range": "±605.0%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.18,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.55,
            "range": "±13.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.12,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.45,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8f582ac51c4e501eb33b3dcd373bc3d5013a7fd7",
          "message": "Docs: Remove \"defined in\" sections (#438)",
          "timestamp": "2021-07-14T13:42:10-07:00",
          "tree_id": "ce5b7ad25ea5620ac9a90fd505bddf7620dfddb1",
          "url": "https://github.com/rocicorp/replicache/commit/8f582ac51c4e501eb33b3dcd373bc3d5013a7fd7"
        },
        "date": 1626295436542,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.34,
            "range": "±103.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.25,
            "range": "±13.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.63,
            "range": "±14.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.87,
            "range": "±9.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.51,
            "range": "±48.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.5,
            "range": "±57.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.36,
            "range": "±63.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.19,
            "range": "±3.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1409.1%",
            "unit": "MB/s",
            "extra": "83 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 87.57,
            "range": "±463.6%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.09,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.74,
            "range": "±16.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.1,
            "range": "±12.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.98,
            "range": "±8.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d7094ba5feb4871bc6a030056e5b8dbe1ae312d9",
          "message": "Docs: Change jsdoc markdown for mutators (#441)\n\nFixes #366",
          "timestamp": "2021-07-14T22:16:16Z",
          "tree_id": "618136a42ac08b50c6b9e96bb440a21fb25683d0",
          "url": "https://github.com/rocicorp/replicache/commit/d7094ba5feb4871bc6a030056e5b8dbe1ae312d9"
        },
        "date": 1626301081065,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.45,
            "range": "±113.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.23,
            "range": "±15.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.55,
            "range": "±17.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±13.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.55,
            "range": "±45.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.57,
            "range": "±1.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.67,
            "range": "±67.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.32,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1466.7%",
            "unit": "MB/s",
            "extra": "87 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 95.85,
            "range": "±616.7%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.22,
            "range": "±4.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.82,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.86,
            "range": "±22.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.62,
            "range": "±15.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "67b36d98bfa015f48de42677c259658892bafb4f",
          "message": "chore: Update instruction to include docs\n\n...rebase stable branch",
          "timestamp": "2021-07-14T15:20:24-07:00",
          "tree_id": "cbaff4e6eb99f35c26573bddd0f46ec6515322e1",
          "url": "https://github.com/rocicorp/replicache/commit/67b36d98bfa015f48de42677c259658892bafb4f"
        },
        "date": 1626301328943,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.41,
            "range": "±128.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.19,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.62,
            "range": "±12.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.89,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.63,
            "range": "±48.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.52,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.7,
            "range": "±65.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.3,
            "range": "±2.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1604.8%",
            "unit": "MB/s",
            "extra": "92 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 95.79,
            "range": "±493.7%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.28,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.51,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.89,
            "range": "±22.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.69,
            "range": "±14.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fe708ca72c285287773a7bfce808b4a9bf3bb16e",
          "message": "Fix a typo in JSDoc",
          "timestamp": "2021-07-15T10:20:08-07:00",
          "tree_id": "3e014a3ab57174fcbbcd448ae793821345486c04",
          "url": "https://github.com/rocicorp/replicache/commit/fe708ca72c285287773a7bfce808b4a9bf3bb16e"
        },
        "date": 1626369730560,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.12,
            "range": "±86.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.06,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.6,
            "range": "±12.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.9,
            "range": "±12.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.5,
            "range": "±44.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.36,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.34,
            "range": "±64.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.26,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1302.2%",
            "unit": "MB/s",
            "extra": "82 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 87.12,
            "range": "±568.2%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.21,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.02,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.59,
            "range": "±12.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.58,
            "range": "±8.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.09,
            "range": "±13.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0b6cb4c7c26bc3fcfdf5386c61710721ffe73221",
          "message": "Rename ScanOptions keyPrefix to prefix (#442)\n\nFixes #170",
          "timestamp": "2021-07-19T10:48:59-07:00",
          "tree_id": "e039193c3ad36ca0d4cea999e671d3ab3f0325f8",
          "url": "https://github.com/rocicorp/replicache/commit/0b6cb4c7c26bc3fcfdf5386c61710721ffe73221"
        },
        "date": 1626717045089,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.48,
            "range": "±117.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.13,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.62,
            "range": "±12.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.93,
            "range": "±12.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.65,
            "range": "±44.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.46,
            "range": "±4.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.61,
            "range": "±69.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.37,
            "range": "±4.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1671.8%",
            "unit": "MB/s",
            "extra": "95 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 102.59,
            "range": "±556.2%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.31,
            "range": "±0.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.51,
            "range": "±49.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.87,
            "range": "±18.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.07,
            "range": "±19.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b30f44ca61838a98a4cadaa565e9c3d7e806ddc0",
          "message": "Docs: Add Samples section (#439)",
          "timestamp": "2021-07-19T17:54:34Z",
          "tree_id": "a56df6c118989dc8b68ded066c42683fb5719564",
          "url": "https://github.com/rocicorp/replicache/commit/b30f44ca61838a98a4cadaa565e9c3d7e806ddc0"
        },
        "date": 1626717375770,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.5,
            "range": "±114.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.15,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.61,
            "range": "±11.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±12.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.59,
            "range": "±48.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.55,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.66,
            "range": "±63.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.38,
            "range": "±0.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1643.6%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.8,
            "range": "±654.7%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.3,
            "range": "±0.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±4.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.09,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.37,
            "range": "±31.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.23,
            "range": "±22.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b8d3d83411c7553ddb6191a25e4674403f6ad31",
          "message": "Docs: Add search (#440)\n\nWe use Algolia for search since that is what Docusaurus uses out of the\r\nbox.",
          "timestamp": "2021-07-20T10:10:03-07:00",
          "tree_id": "0898fa7ceac7a1c23a0b63ecaaf05364fb0bab2a",
          "url": "https://github.com/rocicorp/replicache/commit/4b8d3d83411c7553ddb6191a25e4674403f6ad31"
        },
        "date": 1626801112710,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.47,
            "range": "±100.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.09,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.32,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±12.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.57,
            "range": "±46.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.48,
            "range": "±56.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.68,
            "range": "±68.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.4,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1643.6%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 93.72,
            "range": "±562.7%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.28,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±4.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.31,
            "range": "±7.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.86,
            "range": "±33.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.23,
            "range": "±14.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "23c89e5e903a70e4a6bf197fa6396e24566f4752",
          "message": "Chore: Stop using rmdir",
          "timestamp": "2021-07-21T13:34:20-07:00",
          "tree_id": "50a6502d92c5c7a78efe225ebb486cd7c7194cb3",
          "url": "https://github.com/rocicorp/replicache/commit/23c89e5e903a70e4a6bf197fa6396e24566f4752"
        },
        "date": 1626899786453,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.35,
            "range": "±114.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.28,
            "range": "±29.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.63,
            "range": "±11.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±15.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.6,
            "range": "±47.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.63,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.72,
            "range": "±65.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.36,
            "range": "±1.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1530.0%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.36,
            "range": "±542.1%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.7,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.08,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.66,
            "range": "±21.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.4,
            "range": "±13.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.63,
            "range": "±9.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "e7f2e3a1a36d7cf2ad8354009ff7473d0d86d72a",
          "message": "Docs: Use the transaction in pull",
          "timestamp": "2021-07-30T10:58:34-07:00",
          "tree_id": "21b43d04f1ae65b1a549c0104a4a61f6baff46ea",
          "url": "https://github.com/rocicorp/replicache/commit/e7f2e3a1a36d7cf2ad8354009ff7473d0d86d72a"
        },
        "date": 1627668049937,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.38,
            "range": "±113.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.3,
            "range": "±9.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.6,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.96,
            "range": "±12.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.64,
            "range": "±59.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.55,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.7,
            "range": "±68.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.38,
            "range": "±71.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1620.5%",
            "unit": "MB/s",
            "extra": "95 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 101.77,
            "range": "±537.3%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.48,
            "range": "±0.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.09,
            "range": "±6.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.51,
            "range": "±8.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.29,
            "range": "±19.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fdcc801e1bcc4d3e2f85b07886b9e19acc1c43df",
          "message": "More work on playwright on perf runner",
          "timestamp": "2021-08-09T14:41:22-07:00",
          "tree_id": "6d61599fccf91068e866213a4a254dc7cfd5abfc",
          "url": "https://github.com/rocicorp/replicache/commit/fdcc801e1bcc4d3e2f85b07886b9e19acc1c43df"
        },
        "date": 1628545393094,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.66,
            "range": "±106.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.23,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.28,
            "range": "±14.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.21,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.77,
            "range": "±50.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.79,
            "range": "±2.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.75,
            "range": "±67.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.45,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1078.0%",
            "unit": "MB/s",
            "extra": "88 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.98,
            "range": "±636.4%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 7.04,
            "range": "±0.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.15,
            "range": "±113.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.74,
            "range": "±11.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.07,
            "range": "±14.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.66,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9c3a49bc4b16924a3d8e0af5bbd4208156d20174",
          "message": "feat: Make more Replicache options public (#443)\n\nThis makes a few more options from `ReplicacheOptions` public and\r\nread/write on the `Replicache` instance. The following are now reflected\r\non `Replicache` and can be changed at runtime:\r\n  - `auth`\r\n  - `pushURL`\r\n  - `pullURL`\r\n  - `name` (readonly)\r\n  - `schemaVersion`\r\n  - `pullInterval`\r\n  - `pushDelay`\r\n  - `mutators` (gets reflected as mutate)\r\n  - `requestOptions` (readonly)\r\n  - `puller`\r\n  - `pusher`\r\n\r\nI decided not to reflect these readonly properties from\r\n`ReplicacheOptions`:\r\n  - `wasmModule`\r\n  - `useMemstore`\r\n  - `logLevel`\r\n\r\nAlso, deprecate `Replicache` `getPullAuth` and `getPushAuth` in favor of a single `getAuth`.\r\n\r\nFixes #402",
          "timestamp": "2021-08-09T21:51:52Z",
          "tree_id": "355654efed48042bf70dde86d541bdd4cec4e45a",
          "url": "https://github.com/rocicorp/replicache/commit/9c3a49bc4b16924a3d8e0af5bbd4208156d20174"
        },
        "date": 1628546006856,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.52,
            "range": "±107.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.13,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.33,
            "range": "±15.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.31,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.75,
            "range": "±50.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.8,
            "range": "±3.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.41,
            "range": "±54.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.41,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1100.0%",
            "unit": "MB/s",
            "extra": "88 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 93.72,
            "range": "±583.1%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.94,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.84,
            "range": "±53.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.85,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.61,
            "range": "±28.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.52,
            "range": "±18.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "246d8f4399572fa14fc997b30e2fe0315644afa5",
          "message": "Bump version to 6.4.0.",
          "timestamp": "2021-08-09T15:21:00-07:00",
          "tree_id": "9ad195035e69a9cb5b98c056f4550897e5ac7a63",
          "url": "https://github.com/rocicorp/replicache/commit/246d8f4399572fa14fc997b30e2fe0315644afa5"
        },
        "date": 1628547764840,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.73,
            "range": "±115.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.91,
            "range": "±10.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.22,
            "range": "±12.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.38,
            "range": "±12.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.69,
            "range": "±52.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.82,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.72,
            "range": "±68.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.42,
            "range": "±1.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1169.2%",
            "unit": "MB/s",
            "extra": "92 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 103.43,
            "range": "±432.0%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 7.11,
            "range": "±1.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.41,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.25,
            "range": "±21.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 12.09,
            "range": "±12.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.36,
            "range": "±11.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "502531c8f1e7e49583a237d0b973c1a0b73f6fe2",
          "message": "fix: Ensure we actuallu use the passed in store (#449)\n\nThere was a bug where we ignored the passed in experiementKVStore.",
          "timestamp": "2021-08-10T17:56:19Z",
          "tree_id": "2bdecb20127f5ff59644e49d4dd89b934e7c4f5e",
          "url": "https://github.com/rocicorp/replicache/commit/502531c8f1e7e49583a237d0b973c1a0b73f6fe2"
        },
        "date": 1628618281626,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.23,
            "range": "±108.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.04,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.22,
            "range": "±15.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.31,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.8,
            "range": "±50.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.73,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.61,
            "range": "±68.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.35,
            "range": "±72.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1097.7%",
            "unit": "MB/s",
            "extra": "83 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 92.8,
            "range": "±585.4%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.78,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.78,
            "range": "±51.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.19,
            "range": "±11.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.29,
            "range": "±40.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.84,
            "range": "±13.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "e2d6e7b9c4726b4ca04434416bd3900494ff4b89",
          "message": "Bump version to 6.4.1.",
          "timestamp": "2021-08-10T11:00:24-07:00",
          "tree_id": "01f44598ae6570c4e331aeed1f45769f9f6bda68",
          "url": "https://github.com/rocicorp/replicache/commit/e2d6e7b9c4726b4ca04434416bd3900494ff4b89"
        },
        "date": 1628618528649,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.36,
            "range": "±103.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.1,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.22,
            "range": "±12.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.31,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.52,
            "range": "±23.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.51,
            "range": "±53.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.62,
            "range": "±66.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.12,
            "range": "±72.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±996.1%",
            "unit": "MB/s",
            "extra": "72 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 82.88,
            "range": "±415.8%",
            "unit": "ops/sec",
            "extra": "43 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.56,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.72,
            "range": "±51.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.66,
            "range": "±25.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.8,
            "range": "±35.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 7.89,
            "range": "±27.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "51930954b920d774c438cb1ced5bc9a9634827aa",
          "message": "chore: Retry tests on CI",
          "timestamp": "2021-08-10T11:13:35-07:00",
          "tree_id": "51f15773acb09597dc9780b905bf3d095c72d0dc",
          "url": "https://github.com/rocicorp/replicache/commit/51930954b920d774c438cb1ced5bc9a9634827aa"
        },
        "date": 1628619329863,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.3,
            "range": "±101.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.91,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.19,
            "range": "±13.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.29,
            "range": "±23.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.82,
            "range": "±50.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.66,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.58,
            "range": "±77.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.25,
            "range": "±68.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1088.4%",
            "unit": "MB/s",
            "extra": "84 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.8,
            "range": "±390.7%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.75,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.89,
            "range": "±99.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.13,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.54,
            "range": "±26.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.19,
            "range": "±5.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "c90cb269d0873ad84a851cd2581f41b559c3e3be",
          "message": "chore: use npx playwright install-deps\n\nfor js tests too",
          "timestamp": "2021-08-10T11:14:55-07:00",
          "tree_id": "f36adaf30449372b561f09118423bd01cfef5bc4",
          "url": "https://github.com/rocicorp/replicache/commit/c90cb269d0873ad84a851cd2581f41b559c3e3be"
        },
        "date": 1628619425751,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.21,
            "range": "±109.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.11,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.24,
            "range": "±14.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.25,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.78,
            "range": "±34.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.64,
            "range": "±1.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.87,
            "range": "±86.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.33,
            "range": "±1.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±968.9%",
            "unit": "MB/s",
            "extra": "80 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 97.11,
            "range": "±413.6%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.75,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.72,
            "range": "±49.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.04,
            "range": "±32.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.36,
            "range": "±14.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.04,
            "range": "±16.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "233c460218dae991d41d10a0afa979f902112f7a",
          "message": "Run initial subscriptions in the same transaction (#450)\n\nA subscription is always run once after it has been created. We used to\r\ncreate a new ReadTransaction for every call to subscribe. Now we\r\ndebounce these using a microtask and share the ReadTransaction.\r\n\r\nFixes #370",
          "timestamp": "2021-08-10T15:51:55-07:00",
          "tree_id": "d8638dbff1e78b3860e24861f76116772c5b96fa",
          "url": "https://github.com/rocicorp/replicache/commit/233c460218dae991d41d10a0afa979f902112f7a"
        },
        "date": 1628636010971,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.64,
            "range": "±129.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.13,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.31,
            "range": "±24.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.4,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.86,
            "range": "±50.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.74,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.52,
            "range": "±64.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.4,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1066.7%",
            "unit": "MB/s",
            "extra": "81 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 93.1,
            "range": "±391.9%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.81,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.26,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 11.88,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.65,
            "range": "±20.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.77,
            "range": "±37.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8337dc81f300b650cebd1d41e75d49c6cb34609c",
          "message": "chore: Add the subscription setup perf test (#451)",
          "timestamp": "2021-08-11T09:55:36-07:00",
          "tree_id": "6bc5ceab8a3435aabbd06d93b81bd075e946faeb",
          "url": "https://github.com/rocicorp/replicache/commit/8337dc81f300b650cebd1d41e75d49c6cb34609c"
        },
        "date": 1628701049893,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.55,
            "range": "±117.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.77,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.06,
            "range": "±25.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.37,
            "range": "±12.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.8,
            "range": "±50.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.73,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.55,
            "range": "±67.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.39,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1092.5%",
            "unit": "MB/s",
            "extra": "86 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.26,
            "range": "±390.9%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.82,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±106.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.38,
            "range": "±5.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 12.14,
            "range": "±18.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.81,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 474.58,
            "range": "±857.9%",
            "unit": "ops/sec",
            "extra": "238 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 266.45,
            "range": "±461.8%",
            "unit": "ops/sec",
            "extra": "134 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 57.38,
            "range": "±111.2%",
            "unit": "ops/sec",
            "extra": "29 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "618b8df8a3a38c94509025f3d79cd3dcce2d6e65",
          "message": "docs: Update links\n\nTypedoc is now case sensitive.",
          "timestamp": "2021-08-11T15:57:06-07:00",
          "tree_id": "df0ac4c04d5c81d6125443a3f0423b7b892b0ca9",
          "url": "https://github.com/rocicorp/replicache/commit/618b8df8a3a38c94509025f3d79cd3dcce2d6e65"
        },
        "date": 1628722741521,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.27,
            "range": "±84.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.92,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.28,
            "range": "±12.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.37,
            "range": "±8.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.81,
            "range": "±52.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.78,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.77,
            "range": "±67.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.49,
            "range": "±1.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1122.5%",
            "unit": "MB/s",
            "extra": "90 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 102.16,
            "range": "±465.3%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.96,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.96,
            "range": "±106.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.78,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 12.52,
            "range": "±9.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 1000",
            "value": 11.13,
            "range": "±14.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 490.89,
            "range": "±400.0%",
            "unit": "ops/sec",
            "extra": "248 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 270.92,
            "range": "±260.6%",
            "unit": "ops/sec",
            "extra": "136 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 57.79,
            "range": "±126.2%",
            "unit": "ops/sec",
            "extra": "29 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ab4d195aba2b85092d9873b32c1bf32b553c43fb",
          "message": "doc: Add lastMutationID to pull reference (#452)\n\nCo-authored-by: Aaron Boodman <aaron@aaronboodman.com>",
          "timestamp": "2021-08-12T10:20:24-07:00",
          "tree_id": "9505d3fa217ec1f76daa00ea16d425f0e06cb85e",
          "url": "https://github.com/rocicorp/replicache/commit/ab4d195aba2b85092d9873b32c1bf32b553c43fb"
        },
        "date": 1628788951890,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.69,
            "range": "±123.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.12,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.31,
            "range": "±37.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.4,
            "range": "±10.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.88,
            "range": "±51.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.8,
            "range": "±1.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.78,
            "range": "±68.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.46,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1112.5%",
            "unit": "MB/s",
            "extra": "90 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 101.52,
            "range": "±385.7%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 6.54,
            "range": "±10.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.41,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.38,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 12.56,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 1000",
            "value": 11,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 487.8,
            "range": "±452.6%",
            "unit": "ops/sec",
            "extra": "244 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 267.91,
            "range": "±542.4%",
            "unit": "ops/sec",
            "extra": "135 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 59.73,
            "range": "±62.6%",
            "unit": "ops/sec",
            "extra": "30 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a990848e7bb313e429a4692c7d1f2397e811c109",
          "message": "chore: Enable eslint rule to find missing await (#457)\n\nThis adds the `@typescript-eslint/no-floating-promises` rule to\r\nmark missing await as errors.\r\n\r\nThis forces us to explicitly disable the `no-floating-promises` rule\r\nwhen we do not want to await something.",
          "timestamp": "2021-08-18T09:02:27-07:00",
          "tree_id": "b58643fc021925d03a91be20d813841eb1e5a79e",
          "url": "https://github.com/rocicorp/replicache/commit/a990848e7bb313e429a4692c7d1f2397e811c109"
        },
        "date": 1629302709482,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.13,
            "range": "±102.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.99,
            "range": "±21.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.16,
            "range": "±14.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.33,
            "range": "±13.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.75,
            "range": "±51.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.69,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.46,
            "range": "±69.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.37,
            "range": "±0.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1087.8%",
            "unit": "MB/s",
            "extra": "87 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 98.32,
            "range": "±479.5%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±12.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.21,
            "range": "±5.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.12,
            "range": "±50.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.83,
            "range": "±4.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 503.6,
            "range": "±210.5%",
            "unit": "ops/sec",
            "extra": "252 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 271.95,
            "range": "±285.3%",
            "unit": "ops/sec",
            "extra": "136 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 55.18,
            "range": "±57.4%",
            "unit": "ops/sec",
            "extra": "28 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "abff51ecaab781ef8bed36e64e48b040c1ed9b15",
          "message": "Update HACKING.md",
          "timestamp": "2021-08-30T12:46:34-10:00",
          "tree_id": "c5758aa360ec6e51acd2b92070980c5a2e1b8a00",
          "url": "https://github.com/rocicorp/replicache/commit/abff51ecaab781ef8bed36e64e48b040c1ed9b15"
        },
        "date": 1630363709943,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.31,
            "range": "±109.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.84,
            "range": "±16.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.29,
            "range": "±14.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.38,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.84,
            "range": "±50.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.78,
            "range": "±2.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.64,
            "range": "±58.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.48,
            "range": "±2.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1069.2%",
            "unit": "MB/s",
            "extra": "88 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 104.11,
            "range": "±439.2%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.98,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.07,
            "range": "±6.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 12.75,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.9,
            "range": "±41.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 11.07,
            "range": "±11.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 491.35,
            "range": "±505.6%",
            "unit": "ops/sec",
            "extra": "247 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 285.14,
            "range": "±193.7%",
            "unit": "ops/sec",
            "extra": "143 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 61.25,
            "range": "±85.6%",
            "unit": "ops/sec",
            "extra": "31 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "de973e7c0da440e622f258e4d8e15e1fe06e67ec",
          "message": "Fix perf runner (#463)\n\nThe perf runner depends on some npm modules. It also needs to be type\r\nmodule.",
          "timestamp": "2021-08-31T21:42:02Z",
          "tree_id": "5b7506b5927f52d039eec7c0b03d2e9b56f4c40b",
          "url": "https://github.com/rocicorp/replicache/commit/de973e7c0da440e622f258e4d8e15e1fe06e67ec"
        },
        "date": 1630446226739,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.64,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.17,
            "range": "±10.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.92,
            "range": "±13.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.12,
            "range": "±12.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.17,
            "range": "±51.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4,
            "range": "±61.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.27,
            "range": "±58.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.23,
            "range": "±66.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1231.6%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 98.6,
            "range": "±439.7%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.89,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±132.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.45,
            "range": "±29.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.68,
            "range": "±15.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.32,
            "range": "±45.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 155.56,
            "range": "±312.9%",
            "unit": "ops/sec",
            "extra": "78 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 112.78,
            "range": "±122.6%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 52.68,
            "range": "±136.2%",
            "unit": "ops/sec",
            "extra": "27 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "aa01c374e5c079521d33b31a1c993ca285b940a4",
          "message": "Followup to bb65babed41827fe876397a9e2fffc9e430592d9\n\nI somehow missed these in the PR",
          "timestamp": "2021-08-31T15:48:39-07:00",
          "tree_id": "1ec5ce937adb3bcca28c97d12127ca561f313cf3",
          "url": "https://github.com/rocicorp/replicache/commit/aa01c374e5c079521d33b31a1c993ca285b940a4"
        },
        "date": 1630450261055,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.97,
            "range": "±16.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.26,
            "range": "±19.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.88,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.14,
            "range": "±49.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4,
            "range": "±62.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.2,
            "range": "±61.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.21,
            "range": "±67.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1263.2%",
            "unit": "MB/s",
            "extra": "93 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 95.35,
            "range": "±460.3%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.77,
            "range": "±19.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±121.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.24,
            "range": "±12.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.45,
            "range": "±20.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.4,
            "range": "±19.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 149.28,
            "range": "±103.0%",
            "unit": "ops/sec",
            "extra": "75 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 109.37,
            "range": "±106.9%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 52.57,
            "range": "±156.1%",
            "unit": "ops/sec",
            "extra": "27 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "7e845f155a19b344e6d6c479ab93026db47a2a18",
          "message": "Unify import paths to not have file endings\n\nNot required by Typescript and it was getting inconsistent",
          "timestamp": "2021-08-31T15:54:55-07:00",
          "tree_id": "937a9630ba28e1224632f04dfc97d895cb30be57",
          "url": "https://github.com/rocicorp/replicache/commit/7e845f155a19b344e6d6c479ab93026db47a2a18"
        },
        "date": 1630450627749,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.77,
            "range": "±15.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.9,
            "range": "±19.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.82,
            "range": "±13.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.98,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.96,
            "range": "±72.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.84,
            "range": "±57.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 3.94,
            "range": "±77.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 3.93,
            "range": "±57.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1000.0%",
            "unit": "MB/s",
            "extra": "81 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 73.96,
            "range": "±537.6%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.53,
            "range": "±13.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.59,
            "range": "±119.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.17,
            "range": "±29.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.44,
            "range": "±17.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 4.94,
            "range": "±44.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 147.21,
            "range": "±195.5%",
            "unit": "ops/sec",
            "extra": "74 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 110.48,
            "range": "±119.5%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 47.76,
            "range": "±149.7%",
            "unit": "ops/sec",
            "extra": "24 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "a638fcf7b3fac7d355367c2ce6d130c785f8df7b",
          "message": "Fix: compare to current main commit when computing changes from pull.\n\nWhen computing changed keys for a pull, we were comparing the last snapshot on main to the current state of the sync branch.\n\nThis is not correct, because main will typically have subsequent pending changes which have not been confirmed by server yet. We need to consider these changes too when computing the diff.\n\nFixes #466",
          "timestamp": "2021-09-01T03:12:50-07:00",
          "tree_id": "606f9aa8bff59ba68c555ad01a99670703baedad",
          "url": "https://github.com/rocicorp/replicache/commit/a638fcf7b3fac7d355367c2ce6d130c785f8df7b"
        },
        "date": 1630491274618,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.16,
            "range": "±21.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.25,
            "range": "±16.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.96,
            "range": "±19.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.96,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.13,
            "range": "±47.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.96,
            "range": "±61.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.33,
            "range": "±57.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.15,
            "range": "±63.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1273.0%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.58,
            "range": "±502.7%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.74,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±130.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.8,
            "range": "±16.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.67,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.19,
            "range": "±40.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 160.4,
            "range": "±71.9%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 108.95,
            "range": "±260.7%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 51.1,
            "range": "±152.3%",
            "unit": "ops/sec",
            "extra": "26 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "b05844e41f5191c811448ac65286fc21932ee1b4",
          "message": "Docs: sendPoke() shouldn't get sent until after db tx closes.\n\nOtherwise there is a chance that the pull it triggers doesn't see\nchanges.",
          "timestamp": "2021-09-01T00:40:48-10:00",
          "tree_id": "7a31224197954a6d3618dd0882e651a0f1630aaf",
          "url": "https://github.com/rocicorp/replicache/commit/b05844e41f5191c811448ac65286fc21932ee1b4"
        },
        "date": 1630492975227,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.24,
            "range": "±24.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.25,
            "range": "±18.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.89,
            "range": "±11.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.13,
            "range": "±15.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.05,
            "range": "±55.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.94,
            "range": "±59.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.27,
            "range": "±58.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.22,
            "range": "±64.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1291.7%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.53,
            "range": "±509.6%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.86,
            "range": "±12.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±134.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.83,
            "range": "±17.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.78,
            "range": "±17.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.73,
            "range": "±38.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 160.68,
            "range": "±56.5%",
            "unit": "ops/sec",
            "extra": "81 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 107.84,
            "range": "±230.5%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 53.39,
            "range": "±147.4%",
            "unit": "ops/sec",
            "extra": "27 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "cad1df93f2d65ff999787f1134dd1012e5bf9118",
          "message": "Delay using 'crypto' until run time.\n\nIt's convenient to be able to import Replicache library into Next.js\nserver-side environment, even though it's not yet usable there.\nExisting samples rely on this. Using 'crypto' at parse time defeats\nthis because crypto is not defined in Next.js server env.",
          "timestamp": "2021-09-01T03:49:19-07:00",
          "tree_id": "0e7331abc94ba271761cecfaa5804a7a1f814845",
          "url": "https://github.com/rocicorp/replicache/commit/cad1df93f2d65ff999787f1134dd1012e5bf9118"
        },
        "date": 1630493456349,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.92,
            "range": "±18.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.13,
            "range": "±23.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.86,
            "range": "±10.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.13,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.27,
            "range": "±49.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.95,
            "range": "±58.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.26,
            "range": "±62.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.27,
            "range": "±69.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1261.1%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.6,
            "range": "±473.7%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.9,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±132.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.89,
            "range": "±19.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.65,
            "range": "±30.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.29,
            "range": "±70.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 162.12,
            "range": "±44.4%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 115.91,
            "range": "±114.5%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 49.54,
            "range": "±113.8%",
            "unit": "ops/sec",
            "extra": "26 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "194ea99f1985923a8ca0f627d3ff020a223f6841",
          "message": "Update HACKING.md",
          "timestamp": "2021-09-01T00:52:23-10:00",
          "tree_id": "668ed66ea6e6f845efbee8039938a8026bd74867",
          "url": "https://github.com/rocicorp/replicache/commit/194ea99f1985923a8ca0f627d3ff020a223f6841"
        },
        "date": 1630493638459,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±16.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.8,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.97,
            "range": "±15.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.24,
            "range": "±47.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.07,
            "range": "±67.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.44,
            "range": "±59.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.27,
            "range": "±66.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1264.9%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 96.55,
            "range": "±449.3%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.91,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±126.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.78,
            "range": "±25.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 6.08,
            "range": "±21.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.54,
            "range": "±47.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 156.44,
            "range": "±363.9%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 117.93,
            "range": "±118.3%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 52.79,
            "range": "±155.4%",
            "unit": "ops/sec",
            "extra": "27 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "8a991ca8e3c187792e3ae10cff326fabf89ecd1c",
          "message": "Add Promise.all around 2 cases",
          "timestamp": "2021-09-01T09:07:57-07:00",
          "tree_id": "cc2cca6bf6064a92755ef685d62f2de58ba7b4fb",
          "url": "https://github.com/rocicorp/replicache/commit/8a991ca8e3c187792e3ae10cff326fabf89ecd1c"
        },
        "date": 1630512596476,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.97,
            "range": "±15.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.38,
            "range": "±27.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.93,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.12,
            "range": "±14.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 3.95,
            "range": "±56.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.99,
            "range": "±59.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.34,
            "range": "±57.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.3,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1277.8%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 101.61,
            "range": "±452.7%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.91,
            "range": "±11.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±128.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.96,
            "range": "±20.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.72,
            "range": "±13.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.79,
            "range": "±39.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 163.31,
            "range": "±93.5%",
            "unit": "ops/sec",
            "extra": "82 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 115.65,
            "range": "±131.7%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 55.01,
            "range": "±145.3%",
            "unit": "ops/sec",
            "extra": "28 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "913e5ab03cb2596ea50f229fe8c3a472c99f58b0",
          "message": "Use std Entry type for prolly Map (#465)",
          "timestamp": "2021-09-01T16:13:44Z",
          "tree_id": "e14cef6b391644b4fc5aa0825ff15e8d0cf9033a",
          "url": "https://github.com/rocicorp/replicache/commit/913e5ab03cb2596ea50f229fe8c3a472c99f58b0"
        },
        "date": 1630512918864,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.96,
            "range": "±19.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.78,
            "range": "±19.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.97,
            "range": "±15.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.11,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.14,
            "range": "±47.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 3.93,
            "range": "±57.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.49,
            "range": "±53.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.17,
            "range": "±62.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1240.5%",
            "unit": "MB/s",
            "extra": "95 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 94.28,
            "range": "±421.8%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.79,
            "range": "±14.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±128.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.53,
            "range": "±16.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.96,
            "range": "±27.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.52,
            "range": "±52.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 157.79,
            "range": "±92.1%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 104.56,
            "range": "±225.3%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 51.5,
            "range": "±158.8%",
            "unit": "ops/sec",
            "extra": "26 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "73edd9e28e942ef1e99fefcac9f25417efa9b4e5",
          "message": "Update HACKING.md",
          "timestamp": "2021-09-01T11:24:11-10:00",
          "tree_id": "da7fdd74e4aa14b01f6c63163957367197925cc5",
          "url": "https://github.com/rocicorp/replicache/commit/73edd9e28e942ef1e99fefcac9f25417efa9b4e5"
        },
        "date": 1630531555103,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.17,
            "range": "±23.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 4.48,
            "range": "±25.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.77,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.05,
            "range": "±12.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.07,
            "range": "±50.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.05,
            "range": "±66.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.3,
            "range": "±60.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.11,
            "range": "±64.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1148.7%",
            "unit": "MB/s",
            "extra": "91 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 96.93,
            "range": "±470.1%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.78,
            "range": "±12.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±124.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.53,
            "range": "±12.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.62,
            "range": "±33.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.43,
            "range": "±41.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 159.01,
            "range": "±55.4%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 111.98,
            "range": "±123.8%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 53.16,
            "range": "±138.9%",
            "unit": "ops/sec",
            "extra": "27 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8e494578df14fb930aebaa649f12f98cd95d3796",
          "message": "Update HACKING.md",
          "timestamp": "2021-09-01T11:24:32-10:00",
          "tree_id": "ca53def1976ac9879f748279cba939e651e1e11f",
          "url": "https://github.com/rocicorp/replicache/commit/8e494578df14fb930aebaa649f12f98cd95d3796"
        },
        "date": 1630531651283,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.88,
            "range": "±15.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.61,
            "range": "±23.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.93,
            "range": "±15.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.99,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.19,
            "range": "±45.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4,
            "range": "±65.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.21,
            "range": "±59.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.14,
            "range": "±62.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1169.2%",
            "unit": "MB/s",
            "extra": "90 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 90.16,
            "range": "±541.0%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.76,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±124.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.62,
            "range": "±17.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.58,
            "range": "±18.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.13,
            "range": "±39.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 150.97,
            "range": "±67.7%",
            "unit": "ops/sec",
            "extra": "76 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 109.26,
            "range": "±116.3%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 51.08,
            "range": "±152.4%",
            "unit": "ops/sec",
            "extra": "26 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "e1bdf3a4ccde542a9509698785fef8faafc538be",
          "message": "Update integration guide to work with js Replicache.",
          "timestamp": "2021-09-01T11:58:37-10:00",
          "tree_id": "ce51175dd7fc705ecde8ed6fbfb846336c8b136c",
          "url": "https://github.com/rocicorp/replicache/commit/e1bdf3a4ccde542a9509698785fef8faafc538be"
        },
        "date": 1630533626035,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.21,
            "range": "±23.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.57,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.75,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.12,
            "range": "±13.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.23,
            "range": "±48.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.06,
            "range": "±68.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.32,
            "range": "±54.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.28,
            "range": "±73.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1210.3%",
            "unit": "MB/s",
            "extra": "91 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 98.99,
            "range": "±421.2%",
            "unit": "ops/sec",
            "extra": "50 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.91,
            "range": "±8.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±128.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.59,
            "range": "±14.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.91,
            "range": "±21.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.34,
            "range": "±38.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 157.09,
            "range": "±84.4%",
            "unit": "ops/sec",
            "extra": "79 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 108.31,
            "range": "±158.1%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 47.72,
            "range": "±115.0%",
            "unit": "ops/sec",
            "extra": "24 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fcb771bac5bcfb0200dd73c0b1e99aa6a8446735",
          "message": "npm run format",
          "timestamp": "2021-09-02T13:48:29-07:00",
          "tree_id": "8b201dd862d37679a4b2816b5c0b389d60e81817",
          "url": "https://github.com/rocicorp/replicache/commit/fcb771bac5bcfb0200dd73c0b1e99aa6a8446735"
        },
        "date": 1630615822649,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.83,
            "range": "±15.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.68,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.86,
            "range": "±12.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.97,
            "range": "±10.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.08,
            "range": "±53.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.03,
            "range": "±62.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.26,
            "range": "±61.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 4.01,
            "range": "±64.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1502.6%",
            "unit": "MB/s",
            "extra": "93 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 98.65,
            "range": "±322.1%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.74,
            "range": "±8.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.6,
            "range": "±132.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 5.47,
            "range": "±24.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 5.75,
            "range": "±13.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 5.4,
            "range": "±40.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 159.11,
            "range": "±56.2%",
            "unit": "ops/sec",
            "extra": "80 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 107.91,
            "range": "±257.1%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 54.81,
            "range": "±167.1%",
            "unit": "ops/sec",
            "extra": "28 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "48c699c27abf62565360a771d4fb935f7ab8f95a",
          "message": "Store JS Values in IDB (#470)\n\n* Store JS Values in IDB\r\n\r\nThis contains a few changes that were all related.\r\n\r\n- Change keys to `string`s (both for `prolly.Map` and `kv.Store`)\r\n- Removes the flatbuffer for prolly/Leaf and uses JSON instead.\r\n- Changes `kv.Value` to `JSONValue | Uint8Array`\r\n- Changes `prolly.Map` value to `JSONValue` (this has wide implications throughout)\r\n- IDB now stores `JSONValue | Uint8Array` directly\r\n\r\n* No need to JSON stringify console log\r\n\r\n* Cleanup",
          "timestamp": "2021-09-02T21:20:06Z",
          "tree_id": "2bc3405a6323f175e4a83d8e4b3561785c26a04e",
          "url": "https://github.com/rocicorp/replicache/commit/48c699c27abf62565360a771d4fb935f7ab8f95a"
        },
        "date": 1630617694246,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.04,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.16,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.15,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.86,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.28,
            "range": "±74.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.14,
            "range": "±1.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.13,
            "range": "±74.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.14,
            "range": "±1.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1300.0%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 104.62,
            "range": "±501.4%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.05,
            "range": "±9.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.44,
            "range": "±18.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.03,
            "range": "±16.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.6,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 353.43,
            "range": "±237.0%",
            "unit": "ops/sec",
            "extra": "177 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 286.51,
            "range": "±262.5%",
            "unit": "ops/sec",
            "extra": "144 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 181.56,
            "range": "±116.0%",
            "unit": "ops/sec",
            "extra": "91 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f9da6f1b8c76b516ec233f48b9f51624be2ba37",
          "message": "Remove meta.fbs and just use a JS value (#472)",
          "timestamp": "2021-09-02T14:57:53-07:00",
          "tree_id": "d811689e9eb12294d5c88decd423abddb4828534",
          "url": "https://github.com/rocicorp/replicache/commit/3f9da6f1b8c76b516ec233f48b9f51624be2ba37"
        },
        "date": 1630619960063,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.97,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.22,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.13,
            "range": "±7.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.84,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.22,
            "range": "±72.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.08,
            "range": "±1.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.02,
            "range": "±77.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.15,
            "range": "±2.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1305.4%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 104.58,
            "range": "±694.3%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.07,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.31,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.98,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.78,
            "range": "±25.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 352.52,
            "range": "±70.4%",
            "unit": "ops/sec",
            "extra": "177 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 263.84,
            "range": "±285.3%",
            "unit": "ops/sec",
            "extra": "133 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 177.68,
            "range": "±158.0%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "637f1a85f40b92d753d6e92c7971068dd09b534c",
          "message": "git grep -i wasm | 🔪",
          "timestamp": "2021-09-02T15:44:56-07:00",
          "tree_id": "3572972f7666dcb99cc6b1f50745d1a87c07b3aa",
          "url": "https://github.com/rocicorp/replicache/commit/637f1a85f40b92d753d6e92c7971068dd09b534c"
        },
        "date": 1630622788271,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.04,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.45,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.94,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.95,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.95,
            "range": "±71.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.1,
            "range": "±1.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.04,
            "range": "±77.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.14,
            "range": "±84.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1272.2%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.17,
            "range": "±465.7%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.06,
            "range": "±11.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±0.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.43,
            "range": "±14.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.76,
            "range": "±16.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.44,
            "range": "±25.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 350.39,
            "range": "±185.2%",
            "unit": "ops/sec",
            "extra": "176 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 278.66,
            "range": "±271.9%",
            "unit": "ops/sec",
            "extra": "140 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 185.67,
            "range": "±118.4%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "347b0719b686cc28183df1ee01c26903d5c7bcec",
          "message": "Make sure VS code use our version of TSC",
          "timestamp": "2021-09-02T16:11:57-07:00",
          "tree_id": "daeb4c8fb13813f3df7be60e4947f74587a2c083",
          "url": "https://github.com/rocicorp/replicache/commit/347b0719b686cc28183df1ee01c26903d5c7bcec"
        },
        "date": 1630624423571,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.04,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.12,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.91,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.87,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.94,
            "range": "±71.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.05,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.18,
            "range": "±75.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.15,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1250.0%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 105.26,
            "range": "±494.4%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.01,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.32,
            "range": "±21.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.97,
            "range": "±10.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.65,
            "range": "±31.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 355.5,
            "range": "±88.9%",
            "unit": "ops/sec",
            "extra": "178 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 294,
            "range": "±131.3%",
            "unit": "ops/sec",
            "extra": "148 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 185,
            "range": "±104.1%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fa76a88a7cf5ec92fa2a358946af6022056fb8a",
          "message": "Use JSONValue for mutator args (#473)\n\nWe used to stringify it in JS and pass it as a string to repc. Now we\r\nkeep it as a JSONValue until we eventually write the flatbuffer.",
          "timestamp": "2021-09-02T23:16:32Z",
          "tree_id": "9c55edf6d83984a777e30230288b15e55c04ff36",
          "url": "https://github.com/rocicorp/replicache/commit/5fa76a88a7cf5ec92fa2a358946af6022056fb8a"
        },
        "date": 1630624679159,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.3,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.44,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.99,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.86,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.51,
            "range": "±72.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.15,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.16,
            "range": "±72.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.12,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1283.3%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 109.39,
            "range": "±447.8%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.85,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.26,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.96,
            "range": "±13.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.54,
            "range": "±31.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 350.53,
            "range": "±85.2%",
            "unit": "ops/sec",
            "extra": "176 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 278,
            "range": "±165.6%",
            "unit": "ops/sec",
            "extra": "139 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 188.94,
            "range": "±181.2%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aadaf916440e8c347a1b0d866aad5bdadde73405",
          "message": "Unify the code for decodeIndexKey (#474)\n\nIt was defined in two places after the port",
          "timestamp": "2021-09-02T23:46:46Z",
          "tree_id": "2bb4c6eb2df845eb4f2285f4f0a2402d2be5cd2d",
          "url": "https://github.com/rocicorp/replicache/commit/aadaf916440e8c347a1b0d866aad5bdadde73405"
        },
        "date": 1630626492404,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.31,
            "range": "±7.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.38,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.98,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.89,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.92,
            "range": "±74.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.13,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.48,
            "range": "±77.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.14,
            "range": "±0.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1311.1%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 105.99,
            "range": "±501.4%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.04,
            "range": "±11.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.69,
            "range": "±20.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.04,
            "range": "±12.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.38,
            "range": "±25.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 337.39,
            "range": "±89.3%",
            "unit": "ops/sec",
            "extra": "169 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 279.94,
            "range": "±257.6%",
            "unit": "ops/sec",
            "extra": "140 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 190.74,
            "range": "±118.4%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "659b95737f56f94cc1fbb50b7486f7fb44cdd7c5",
          "message": "Bump version to 7.0.0-beta.0.",
          "timestamp": "2021-09-02T18:20:18-07:00",
          "tree_id": "cf8259aba901d7f97867163e750dde20a4bd66a3",
          "url": "https://github.com/rocicorp/replicache/commit/659b95737f56f94cc1fbb50b7486f7fb44cdd7c5"
        },
        "date": 1630632110663,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.32,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.56,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.07,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.06,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.95,
            "range": "±74.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.13,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.12,
            "range": "±75.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.16,
            "range": "±1.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1381.1%",
            "unit": "MB/s",
            "extra": "95 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.7,
            "range": "±482.6%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.01,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.27,
            "range": "±12.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.43,
            "range": "±12.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.49,
            "range": "±14.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 352.17,
            "range": "±333.3%",
            "unit": "ops/sec",
            "extra": "177 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 265.63,
            "range": "±396.9%",
            "unit": "ops/sec",
            "extra": "133 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 183.56,
            "range": "±110.0%",
            "unit": "ops/sec",
            "extra": "92 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "7caa62bd2389c9df3b3843ea7cb9cd4d9466f1e0",
          "message": "Return deep copies of Replicache data out of read interfaces.\n\nThis is important because the common pattern in applications (and\nwhich we advocate) is to directly mutate the returned data and\nre-write it. If we are caching that data internally weird things\nhappen.\n\nSee also follow ups:\n\nhttps://github.com/rocicorp/replicache/issues/480\nhttps://github.com/rocicorp/replicache/issues/483",
          "timestamp": "2021-09-05T16:01:29-07:00",
          "tree_id": "7b0f9f2b4a9b212cdb73cf32cd211c01a723b78f",
          "url": "https://github.com/rocicorp/replicache/commit/7caa62bd2389c9df3b3843ea7cb9cd4d9466f1e0"
        },
        "date": 1630882981614,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.48,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.55,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.06,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.04,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.11,
            "range": "±72.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.01,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.02,
            "range": "±72.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.17,
            "range": "±1.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1294.3%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 109.8,
            "range": "±492.6%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.13,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.21,
            "range": "±15.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.49,
            "range": "±12.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.14,
            "range": "±15.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 314.62,
            "range": "±469.0%",
            "unit": "ops/sec",
            "extra": "158 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 269.95,
            "range": "±176.5%",
            "unit": "ops/sec",
            "extra": "135 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 172.72,
            "range": "±92.5%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "638087a8342e515c82c50a9815b5b8568648328b",
          "message": "Bump version to 7.0.0-beta.1.",
          "timestamp": "2021-09-05T17:59:17-10:00",
          "tree_id": "2efee1ae080d296b3144071e2e62f16260ac0b29",
          "url": "https://github.com/rocicorp/replicache/commit/638087a8342e515c82c50a9815b5b8568648328b"
        },
        "date": 1630900859316,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.32,
            "range": "±10.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.3,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.19,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.82,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.9,
            "range": "±69.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.07,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.91,
            "range": "±70.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.07,
            "range": "±1.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1311.1%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.99,
            "range": "±610.3%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.84,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±1.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.9,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.22,
            "range": "±18.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.74,
            "range": "±17.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 316.29,
            "range": "±90.0%",
            "unit": "ops/sec",
            "extra": "159 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 253.7,
            "range": "±108.3%",
            "unit": "ops/sec",
            "extra": "127 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 173.55,
            "range": "±126.9%",
            "unit": "ops/sec",
            "extra": "87 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa952412443964eb9e820d10a79450e19c41a7ef",
          "message": "Update HACKING.md",
          "timestamp": "2021-09-05T18:02:53-10:00",
          "tree_id": "a8929a6bf9e6ec4a2192cc5f133fe4de70c672d7",
          "url": "https://github.com/rocicorp/replicache/commit/aa952412443964eb9e820d10a79450e19c41a7ef"
        },
        "date": 1630901058950,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.55,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.5,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.08,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.89,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.94,
            "range": "±74.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.07,
            "range": "±1.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.09,
            "range": "±76.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.19,
            "range": "±1.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1337.1%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 109.23,
            "range": "±471.0%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.1,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.16,
            "range": "±24.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.47,
            "range": "±14.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.21,
            "range": "±24.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 319.17,
            "range": "±265.5%",
            "unit": "ops/sec",
            "extra": "160 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 266.61,
            "range": "±300.0%",
            "unit": "ops/sec",
            "extra": "134 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 167.77,
            "range": "±161.1%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "72cc510e7b2b424119694e674eddf948967ff739",
          "message": "Bump version to 7.0.0-beta.2.",
          "timestamp": "2021-09-05T18:29:12-10:00",
          "tree_id": "55bfc67d2c79010a5660bccd6b8eafe42d076a87",
          "url": "https://github.com/rocicorp/replicache/commit/72cc510e7b2b424119694e674eddf948967ff739"
        },
        "date": 1630902645010,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.73,
            "range": "±12.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.46,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.06,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.86,
            "range": "±8.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.05,
            "range": "±74.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.06,
            "range": "±1.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 4.97,
            "range": "±76.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.13,
            "range": "±1.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1297.2%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.7,
            "range": "±501.4%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.97,
            "range": "±5.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.07,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.12,
            "range": "±10.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.58,
            "range": "±9.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.04,
            "range": "±13.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 326.04,
            "range": "±117.2%",
            "unit": "ops/sec",
            "extra": "164 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 265.89,
            "range": "±161.8%",
            "unit": "ops/sec",
            "extra": "133 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 163.97,
            "range": "±119.6%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "42f36257ff97496beea3d5c162f5d9d57d1fc1bc",
          "message": "FIX: Add workaround for Safari IDB issue\n\nSafari closes a transaction in the next microtask if there are no\r\npending actions. We therefore restructure the code a bit to ensure there\r\nis no await in between creating the transaction and returning the\r\nwrapper for it.\r\n\r\nFixes #486\r\n\r\nThanks to @jakearchibald for the background on this issue.\r\n\r\nCo-authored-by: Erik Arvidsson <arv@roci.dev>",
          "timestamp": "2021-09-08T01:34:39Z",
          "tree_id": "571e8ad3330ec1b24c1eed3237e8149c84d22ef6",
          "url": "https://github.com/rocicorp/replicache/commit/42f36257ff97496beea3d5c162f5d9d57d1fc1bc"
        },
        "date": 1631064992764,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.39,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.49,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.15,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.88,
            "range": "±7.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.92,
            "range": "±74.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.11,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.1,
            "range": "±76.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.17,
            "range": "±1.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1347.2%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.7,
            "range": "±500.0%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.07,
            "range": "±6.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.87,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.06,
            "range": "±9.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.8,
            "range": "±15.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 320.03,
            "range": "±110.0%",
            "unit": "ops/sec",
            "extra": "162 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 257.85,
            "range": "±145.7%",
            "unit": "ops/sec",
            "extra": "129 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 167.77,
            "range": "±96.4%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "751d37d1f8c72cc2c27518a6d2310a8176b4932a",
          "message": "Tighten up a few lint checks. (#494)\n\nAlso tweak one prettier option to key property quoting consistent within\r\nan object.",
          "timestamp": "2021-09-08T17:17:49-07:00",
          "tree_id": "50d88c85d6b170680356168cabab89d087986ba2",
          "url": "https://github.com/rocicorp/replicache/commit/751d37d1f8c72cc2c27518a6d2310a8176b4932a"
        },
        "date": 1631146767606,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.76,
            "range": "±13.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.59,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.05,
            "range": "±10.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.99,
            "range": "±77.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 4.99,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.02,
            "range": "±76.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.1,
            "range": "±1.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1357.1%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.15,
            "range": "±484.3%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.05,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.13,
            "range": "±12.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.24,
            "range": "±10.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.19,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 315.79,
            "range": "±213.3%",
            "unit": "ops/sec",
            "extra": "159 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 250,
            "range": "±158.3%",
            "unit": "ops/sec",
            "extra": "126 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 162.73,
            "range": "±187.0%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e512deca180e7374e7bafc8be8d240077629cb6",
          "message": "Restore ability to read old ref count (#495)\n\nWe used to store the ref count as an uint16 (encoded as little endian)\r\nin IDB so this allows us to read the old data.\r\n\r\nTowards #488",
          "timestamp": "2021-09-09T01:09:53Z",
          "tree_id": "97f94c1d99565e7f6919bb9dfd6cd86282d9e372",
          "url": "https://github.com/rocicorp/replicache/commit/7e512deca180e7374e7bafc8be8d240077629cb6"
        },
        "date": 1631149888966,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.37,
            "range": "±12.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.32,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.16,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.9,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.4,
            "range": "±72.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.15,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.08,
            "range": "±75.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.09,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1331.4%",
            "unit": "MB/s",
            "extra": "98 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.28,
            "range": "±493.0%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.05,
            "range": "±7.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.9,
            "range": "±37.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.12,
            "range": "±21.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.3,
            "range": "±17.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.33,
            "range": "±25.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 324.96,
            "range": "±117.2%",
            "unit": "ops/sec",
            "extra": "163 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 262.06,
            "range": "±168.6%",
            "unit": "ops/sec",
            "extra": "132 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 165.08,
            "range": "±96.4%",
            "unit": "ops/sec",
            "extra": "83 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "714767ec359465c6fc2ba4fb5b86e9b1343621c4",
          "message": "Update package-lock.json\n\nIt got out of sync?",
          "timestamp": "2021-09-08T15:10:31-10:00",
          "tree_id": "2345757a3b8792acf6fd11f963acba3ec22b8cd7",
          "url": "https://github.com/rocicorp/replicache/commit/714767ec359465c6fc2ba4fb5b86e9b1343621c4"
        },
        "date": 1631149977438,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.28,
            "range": "±12.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.59,
            "range": "±13.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.04,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.97,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.49,
            "range": "±73.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.05,
            "range": "±1.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.21,
            "range": "±76.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.15,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1311.1%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 108.33,
            "range": "±471.4%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.19,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.12,
            "range": "±10.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.3,
            "range": "±11.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.32,
            "range": "±25.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 314.99,
            "range": "±83.3%",
            "unit": "ops/sec",
            "extra": "158 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 259.43,
            "range": "±188.6%",
            "unit": "ops/sec",
            "extra": "130 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 161.9,
            "range": "±140.0%",
            "unit": "ops/sec",
            "extra": "82 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f023db785e94666b53af9a28c0fb182e2825f369",
          "message": "Restore read of meta/refs flatbuffer (#496)\n\nTowards #488",
          "timestamp": "2021-09-09T02:07:42Z",
          "tree_id": "38881274ab865be0b1047ff09a49d2fbdd63c53a",
          "url": "https://github.com/rocicorp/replicache/commit/f023db785e94666b53af9a28c0fb182e2825f369"
        },
        "date": 1631153351871,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.67,
            "range": "±1011.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.66,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.12,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.89,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.53,
            "range": "±70.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.02,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.35,
            "range": "±75.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.15,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1266.7%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.96,
            "range": "±495.6%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.14,
            "range": "±8.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.27,
            "range": "±10.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.54,
            "range": "±11.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.57,
            "range": "±19.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 319.62,
            "range": "±244.8%",
            "unit": "ops/sec",
            "extra": "160 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 262.63,
            "range": "±251.4%",
            "unit": "ops/sec",
            "extra": "132 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 166.67,
            "range": "±189.1%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8840a482eaf3a302a6d6b2a5f56785b4832205e7",
          "message": "Restore Uint8array support for client id (#498)\n\nThis adds code to support reading the client ID as Uint8Array. Since the\r\nclient ID is only written once, we also upgrade the value to a string.\r\n\r\nTowards #488",
          "timestamp": "2021-09-09T07:25:46Z",
          "tree_id": "2cb67eb37104072566bcc13424b8b6fd81f2ac6c",
          "url": "https://github.com/rocicorp/replicache/commit/8840a482eaf3a302a6d6b2a5f56785b4832205e7"
        },
        "date": 1631172442624,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.38,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.37,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.93,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.91,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.02,
            "range": "±74.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.11,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.15,
            "range": "±73.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.13,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1340.0%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 105.49,
            "range": "±460.6%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.1,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.12,
            "range": "±9.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.47,
            "range": "±13.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.06,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 328.62,
            "range": "±151.7%",
            "unit": "ops/sec",
            "extra": "165 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 269.78,
            "range": "±164.7%",
            "unit": "ops/sec",
            "extra": "135 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 166.57,
            "range": "±216.7%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3400b364fa7339e2320e9b93f60fea4cf93ef611",
          "message": "Store head hashes as strings (#499)\n\nBut support reading the old format as well.\r\n\r\nTowards #488",
          "timestamp": "2021-09-09T08:06:18Z",
          "tree_id": "c015406e9112efc795c6f2a57b37ad58dd9ca202",
          "url": "https://github.com/rocicorp/replicache/commit/3400b364fa7339e2320e9b93f60fea4cf93ef611"
        },
        "date": 1631174865449,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.51,
            "range": "±12.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.28,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.13,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.9,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 4.92,
            "range": "±74.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.05,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.39,
            "range": "±72.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.15,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1344.4%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 107.16,
            "range": "±626.1%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.01,
            "range": "±9.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.03,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.18,
            "range": "±14.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.45,
            "range": "±12.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.05,
            "range": "±17.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 318.03,
            "range": "±130.0%",
            "unit": "ops/sec",
            "extra": "160 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 259.74,
            "range": "±116.7%",
            "unit": "ops/sec",
            "extra": "130 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 161.03,
            "range": "±132.7%",
            "unit": "ops/sec",
            "extra": "81 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9272a638c6235d87c5af826b0d79c446e3c9d20c",
          "message": "Restore support for reading Leaf as flatbuffer (#500)\n\nTowards #488",
          "timestamp": "2021-09-09T21:12:49Z",
          "tree_id": "aef5b9fef27f37c33534a00553582db4c9734868",
          "url": "https://github.com/rocicorp/replicache/commit/9272a638c6235d87c5af826b0d79c446e3c9d20c"
        },
        "date": 1631222065737,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.19,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 5.39,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.01,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.93,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.01,
            "range": "±66.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.03,
            "range": "±2.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.04,
            "range": "±74.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.13,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1255.6%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 106.95,
            "range": "±523.2%",
            "unit": "ops/sec",
            "extra": "54 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.88,
            "range": "±9.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.19,
            "range": "±17.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.5,
            "range": "±13.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.16,
            "range": "±26.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 328.55,
            "range": "±65.5%",
            "unit": "ops/sec",
            "extra": "165 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 268.23,
            "range": "±155.9%",
            "unit": "ops/sec",
            "extra": "135 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 168.75,
            "range": "±124.1%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cfaa7841eb7a3b8e34e1e0dfe9a440ea87440ee3",
          "message": "Change Commit to use JS values (#501)\n\nTowards #488",
          "timestamp": "2021-09-10T13:18:48-10:00",
          "tree_id": "2a0e6f2bf1acbb4b9c1050766ab21a1481da5135",
          "url": "https://github.com/rocicorp/replicache/commit/cfaa7841eb7a3b8e34e1e0dfe9a440ea87440ee3"
        },
        "date": 1631316018802,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.03,
            "range": "±12.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.42,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.39,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.25,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.28,
            "range": "±73.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.7,
            "range": "±70.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.49,
            "range": "±75.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.17,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1368.6%",
            "unit": "MB/s",
            "extra": "102 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 114.58,
            "range": "±477.3%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.06,
            "range": "±5.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±0.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.21,
            "range": "±12.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.5,
            "range": "±11.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.46,
            "range": "±24.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 335.66,
            "range": "±65.5%",
            "unit": "ops/sec",
            "extra": "168 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 269.57,
            "range": "±160.6%",
            "unit": "ops/sec",
            "extra": "135 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 168.43,
            "range": "±156.6%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0661c5c6546f8ba6091131d7cf6c6b18be825304",
          "message": "Validate ref count in the dag store. (#506)\n\nFixes #502",
          "timestamp": "2021-09-11T00:25:29Z",
          "tree_id": "98e8c6a0eafa369169d5e898ae0e3438066c681c",
          "url": "https://github.com/rocicorp/replicache/commit/0661c5c6546f8ba6091131d7cf6c6b18be825304"
        },
        "date": 1631320016573,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.66,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.6,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.62,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.29,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.41,
            "range": "±72.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.96,
            "range": "±81.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.68,
            "range": "±79.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.99,
            "range": "±79.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1541.2%",
            "unit": "MB/s",
            "extra": "104 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 113.79,
            "range": "±451.5%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.18,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.28,
            "range": "±20.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.73,
            "range": "±13.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.14,
            "range": "±19.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 331.47,
            "range": "±72.4%",
            "unit": "ops/sec",
            "extra": "166 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 271.67,
            "range": "±108.8%",
            "unit": "ops/sec",
            "extra": "136 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 171.35,
            "range": "±164.8%",
            "unit": "ops/sec",
            "extra": "86 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6a79be3ecff3ad218699bc8ce515e068361bccd1",
          "message": "Add utility to open a window and run code in it for tests. (#492)\n\nUse this to start a test for navigator.locks, verifying that it works on\r\nall browsers we care about.\r\n\r\nWhen test-util.ts newTab() is called, a new browser window is opened,\r\nwith all console logs from it funnelled back to the main test process. A\r\nmodule (usually that of the current test) may be loaded and all exported\r\nsymbols made available, allowing type-checked Typescript code to be\r\nexecuted easily. The run() method on the resulting tab may then be\r\ncalled to execute snippets of code, allowing for testing of interaction\r\nbetween two windows at the same origin.\r\n\r\nExample:\r\n\r\n```\r\nimport {newTab} from './test-util';\r\n\r\ntest('storage', async () => {\r\n  const tab = await newPage();\r\n  await tab.run('window.localStorage.setItem(\"test\", \"modified\")');\r\n  expect(window.localStorage.getItem('test')).to.equal('modified');\r\n}\r\n```",
          "timestamp": "2021-09-13T10:22:33-07:00",
          "tree_id": "0c7b8b3f161d258040c1c840183abbdc783d117c",
          "url": "https://github.com/rocicorp/replicache/commit/6a79be3ecff3ad218699bc8ce515e068361bccd1"
        },
        "date": 1631553844970,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.38,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.47,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.56,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.1,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.35,
            "range": "±72.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.96,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.22,
            "range": "±77.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.78,
            "range": "±77.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1448.6%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 118.98,
            "range": "±456.7%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.05,
            "range": "±7.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.06,
            "range": "±12.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.12,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.02,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 316.61,
            "range": "±113.3%",
            "unit": "ops/sec",
            "extra": "159 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 240.56,
            "range": "±429.7%",
            "unit": "ops/sec",
            "extra": "121 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 158.54,
            "range": "±178.6%",
            "unit": "ops/sec",
            "extra": "80 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f697f5e855dff8996e7f100a9a7e0bfe18db716d",
          "message": "Feat: Add migration code (#510)\n\nThis adds code to migrate from v0 (flatbuffers) to v1 (JSON values).\r\n\r\nFixes #505",
          "timestamp": "2021-09-14T17:16:42Z",
          "tree_id": "1e1470d88f15e5ba970ffb6d0dca4620e5be5c74",
          "url": "https://github.com/rocicorp/replicache/commit/f697f5e855dff8996e7f100a9a7e0bfe18db716d"
        },
        "date": 1631639893326,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.12,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.76,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.37,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.19,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.25,
            "range": "±76.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.98,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.5,
            "range": "±77.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.03,
            "range": "±80.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1419.4%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 121.08,
            "range": "±455.4%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.08,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.4,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.74,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.45,
            "range": "±25.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 326.43,
            "range": "±137.9%",
            "unit": "ops/sec",
            "extra": "164 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 269.41,
            "range": "±144.1%",
            "unit": "ops/sec",
            "extra": "135 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 169.46,
            "range": "±138.9%",
            "unit": "ops/sec",
            "extra": "85 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8552634b6a69592124ac3c9bde4cc618dc93bc2e",
          "message": "Rework newTab() utility to work with 'noopener'. (#508)\n\nThis reimplements its internal message system to use localStorage events\r\nrather than postMessage(). This does not mean that postMessage can't be\r\nused for tests that pass {opener: true} to newTab, but makes the\r\nunderlying mechanism work regardless.",
          "timestamp": "2021-09-14T13:55:27-07:00",
          "tree_id": "183b311dde6509fde0cf28dc9712d198f8fe5328",
          "url": "https://github.com/rocicorp/replicache/commit/8552634b6a69592124ac3c9bde4cc618dc93bc2e"
        },
        "date": 1631653016046,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.13,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.68,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.32,
            "range": "±10.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.34,
            "range": "±74.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.08,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.3,
            "range": "±75.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.2,
            "range": "±0.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1272.2%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.05,
            "range": "±510.8%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.14,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.68,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.94,
            "range": "±13.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.51,
            "range": "±28.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 324.44,
            "range": "±86.2%",
            "unit": "ops/sec",
            "extra": "163 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 262.11,
            "range": "±420.0%",
            "unit": "ops/sec",
            "extra": "132 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 166.11,
            "range": "±126.4%",
            "unit": "ops/sec",
            "extra": "84 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5bf7c504c02e0f841868f168eb6002f493ad2c7b",
          "message": "chore: Remove scanAll (#511)\n\nBREAKING CHANGE: scanAll has been deprecated since v6.2.0and will be\r\ngone in 7.0.0.",
          "timestamp": "2021-09-14T21:00:08Z",
          "tree_id": "eac248624ff0969f325f41811b94e6ae700a66c1",
          "url": "https://github.com/rocicorp/replicache/commit/5bf7c504c02e0f841868f168eb6002f493ad2c7b"
        },
        "date": 1631653291074,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.64,
            "range": "±27.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.51,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.32,
            "range": "±10.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.25,
            "range": "±73.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.99,
            "range": "±1.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.28,
            "range": "±76.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.07,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1300.0%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 113.08,
            "range": "±487.7%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.12,
            "range": "±5.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±0.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.39,
            "range": "±8.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.92,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.51,
            "range": "±25.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 322.97,
            "range": "±306.9%",
            "unit": "ops/sec",
            "extra": "162 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 284.41,
            "range": "±163.6%",
            "unit": "ops/sec",
            "extra": "143 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 175.61,
            "range": "±174.5%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "aeced383d35accdd922c71aba4071779f865e259",
          "message": "Remove MAX_CONNECTIONS constant which was only used in tests.",
          "timestamp": "2021-09-14T15:55:15-07:00",
          "tree_id": "0d377c1e11d06f3658983d7bcb936be2e45e6875",
          "url": "https://github.com/rocicorp/replicache/commit/aeced383d35accdd922c71aba4071779f865e259"
        },
        "date": 1631660203527,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.46,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.29,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.66,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.21,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.4,
            "range": "±71.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.03,
            "range": "±4.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.44,
            "range": "±73.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.94,
            "range": "±76.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1337.1%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 122.8,
            "range": "±407.7%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.16,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.57,
            "range": "±14.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.94,
            "range": "±12.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.53,
            "range": "±25.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 330.22,
            "range": "±439.3%",
            "unit": "ops/sec",
            "extra": "166 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 256.67,
            "range": "±491.2%",
            "unit": "ops/sec",
            "extra": "129 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 174.71,
            "range": "±120.4%",
            "unit": "ops/sec",
            "extra": "88 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5fff81fe4637d4f37e2842dbf7bea22999df1d50",
          "message": "Feat: Use ReadonlyJSONValue in read transactions (#512)\n\n* Feat: Use ReadonlyJSONValue in read transactions\r\n\r\nBREAKING CHANGE: If you are using TypeScript you might need to update\r\nyour type annotations to use ReadonlyJSONValue instead of JSONValue in a\r\nfew places.\r\n\r\nReadTransaction return the underlying value as ReadonlyJSONValue. This\r\nis because you should not mutate these since they may be cached\r\ninternally.\r\n\r\nWriteTransaction returns a clone of the value and is safe to mutate.\r\n\r\nWriteTransaction `put` clones the value to ensure that internal valie is\r\nnot mutated.\r\n\r\nFixes #480",
          "timestamp": "2021-09-14T23:07:41Z",
          "tree_id": "4d1eb70c796862d98f959b3ced3f3ad14d2a29e1",
          "url": "https://github.com/rocicorp/replicache/commit/5fff81fe4637d4f37e2842dbf7bea22999df1d50"
        },
        "date": 1631660946486,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.95,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.37,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.57,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.23,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.39,
            "range": "±76.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.95,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.56,
            "range": "±76.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.11,
            "range": "±80.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1186.1%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 122.02,
            "range": "±504.7%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.15,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.62,
            "range": "±16.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.91,
            "range": "±13.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.52,
            "range": "±24.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 370.37,
            "range": "±103.8%",
            "unit": "ops/sec",
            "extra": "186 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 301.52,
            "range": "±138.7%",
            "unit": "ops/sec",
            "extra": "151 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 189.55,
            "range": "±141.7%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "4a1d27914322fa352507d5508430ac1551d94a8d",
          "message": "Bump version to 7.0.0-beta.3.",
          "timestamp": "2021-09-14T13:15:40-10:00",
          "tree_id": "f45eb804226666b2952eb7e761a60fb4fd71bfb8",
          "url": "https://github.com/rocicorp/replicache/commit/4a1d27914322fa352507d5508430ac1551d94a8d"
        },
        "date": 1631661449180,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.49,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.59,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.21,
            "range": "±2.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.36,
            "range": "±74.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.01,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.18,
            "range": "±76.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.14,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1241.7%",
            "unit": "MB/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.21,
            "range": "±542.2%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.49,
            "range": "±18.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.21,
            "range": "±14.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.42,
            "range": "±23.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 360.2,
            "range": "±115.4%",
            "unit": "ops/sec",
            "extra": "181 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 292.07,
            "range": "±238.7%",
            "unit": "ops/sec",
            "extra": "147 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 204.57,
            "range": "±119.6%",
            "unit": "ops/sec",
            "extra": "103 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3f6966071e85dc9ff67017299d5a3ce60b64210b",
          "message": "chore: Rename MetaType enum names (#514)",
          "timestamp": "2021-09-14T23:50:59Z",
          "tree_id": "519ecb027d9e99ba4e7696a3f1d991244fbf9e60",
          "url": "https://github.com/rocicorp/replicache/commit/3f6966071e85dc9ff67017299d5a3ce60b64210b"
        },
        "date": 1631663543681,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.53,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.51,
            "range": "±2.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.26,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.22,
            "range": "±75.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.1,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.26,
            "range": "±76.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.11,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1311.4%",
            "unit": "MB/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 114.99,
            "range": "±476.1%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.18,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.51,
            "range": "±17.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.75,
            "range": "±16.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.22,
            "range": "±23.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 359.35,
            "range": "±273.1%",
            "unit": "ops/sec",
            "extra": "180 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 298.63,
            "range": "±236.7%",
            "unit": "ops/sec",
            "extra": "150 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 197.49,
            "range": "±174.5%",
            "unit": "ops/sec",
            "extra": "99 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4da32dc60f2da5b434991077fb27fe49d34f4d96",
          "message": "chore: Remove support for Uint8Array in the store (#515)\n\nThe migration test is allowing Uint8Array to be stored in the store by\r\nusing @ts-expect-error.",
          "timestamp": "2021-09-15T00:53:11Z",
          "tree_id": "f3d4f29d19c479045c7d3da7dec6f29aa5c04b05",
          "url": "https://github.com/rocicorp/replicache/commit/4da32dc60f2da5b434991077fb27fe49d34f4d96"
        },
        "date": 1631667281351,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.91,
            "range": "±10.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.51,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.6,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.38,
            "range": "±76.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.02,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.63,
            "range": "±74.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.15,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1214.3%",
            "unit": "MB/s",
            "extra": "98 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 121.18,
            "range": "±438.5%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.16,
            "range": "±6.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±0.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.81,
            "range": "±24.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.1,
            "range": "±13.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.41,
            "range": "±14.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 356.43,
            "range": "±276.9%",
            "unit": "ops/sec",
            "extra": "179 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 305.15,
            "range": "±143.3%",
            "unit": "ops/sec",
            "extra": "153 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 202.46,
            "range": "±188.9%",
            "unit": "ops/sec",
            "extra": "102 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "365fd01de574260e7a82867fe155552b9f26f393",
          "message": "chore: Fix a todo about using Promise.all (#516)",
          "timestamp": "2021-09-15T00:56:28Z",
          "tree_id": "22d5c6e4e57649d3e0986c94562890b4ec4e86ad",
          "url": "https://github.com/rocicorp/replicache/commit/365fd01de574260e7a82867fe155552b9f26f393"
        },
        "date": 1631667472921,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.87,
            "range": "±11.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.62,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.62,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.07,
            "range": "±76.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.06,
            "range": "±1.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.37,
            "range": "±78.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.13,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1269.4%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 110.87,
            "range": "±492.5%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.14,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.67,
            "range": "±17.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.3,
            "range": "±13.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.52,
            "range": "±16.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 381.31,
            "range": "±96.0%",
            "unit": "ops/sec",
            "extra": "191 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 297.09,
            "range": "±550.0%",
            "unit": "ops/sec",
            "extra": "150 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 205.38,
            "range": "±235.6%",
            "unit": "ops/sec",
            "extra": "103 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4835293775cca5cdea046e5b37cbc5910da13ad1",
          "message": "Some followup changes (#517)\n\nMissed some Uint8Array code",
          "timestamp": "2021-09-15T01:05:45Z",
          "tree_id": "fc766851005343d273893bb1bedf0f38460fe2cd",
          "url": "https://github.com/rocicorp/replicache/commit/4835293775cca5cdea046e5b37cbc5910da13ad1"
        },
        "date": 1631668029647,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.13,
            "range": "±8.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.4,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.56,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.22,
            "range": "±2.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.48,
            "range": "±75.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.04,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.48,
            "range": "±77.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.16,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1328.6%",
            "unit": "MB/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 114.23,
            "range": "±520.3%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.12,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.57,
            "range": "±17.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.23,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.9,
            "range": "±25.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 362.04,
            "range": "±138.5%",
            "unit": "ops/sec",
            "extra": "182 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 300.38,
            "range": "±167.7%",
            "unit": "ops/sec",
            "extra": "151 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 199.72,
            "range": "±185.1%",
            "unit": "ops/sec",
            "extra": "100 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d23dc2415ab059e75439c09d4a709296f0eecaf3",
          "message": "Rename contributing.md to CONTRIBUTING.md",
          "timestamp": "2021-09-14T17:40:21-10:00",
          "tree_id": "77d61d38627a7234c1c690ff6decde6d23f0f97c",
          "url": "https://github.com/rocicorp/replicache/commit/d23dc2415ab059e75439c09d4a709296f0eecaf3"
        },
        "date": 1631677313498,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.11,
            "range": "±20.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.36,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.6,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.29,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.3,
            "range": "±76.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.12,
            "range": "±2.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.3,
            "range": "±77.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.17,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1251.4%",
            "unit": "MB/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 119.98,
            "range": "±489.1%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±4.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.32,
            "range": "±21.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.91,
            "range": "±13.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.28,
            "range": "±25.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 362.91,
            "range": "±246.2%",
            "unit": "ops/sec",
            "extra": "182 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 307.75,
            "range": "±213.3%",
            "unit": "ops/sec",
            "extra": "154 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 199.64,
            "range": "±234.8%",
            "unit": "ops/sec",
            "extra": "100 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "tmcw@users.noreply.github.com",
            "name": "Tom MacWright",
            "username": "tmcw"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "16931f5021ee777cb5b43a9cf1ebde73766691a7",
          "message": "docs: Fix typo, misspelled Subscribe (#509)\n\nCo-authored-by: Erik Arvidsson <arv@roci.dev>",
          "timestamp": "2021-09-15T11:04:28-10:00",
          "tree_id": "fc2f9c816d9bcf0a63406f2b9e14dc15cf791cc2",
          "url": "https://github.com/rocicorp/replicache/commit/16931f5021ee777cb5b43a9cf1ebde73766691a7"
        },
        "date": 1631739961244,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.16,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.58,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.46,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.05,
            "range": "±74.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.95,
            "range": "±77.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.36,
            "range": "±80.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.14,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1236.1%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 114.76,
            "range": "±504.6%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.81,
            "range": "±26.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.2,
            "range": "±16.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.43,
            "range": "±30.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 371.55,
            "range": "±228.0%",
            "unit": "ops/sec",
            "extra": "186 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 291.65,
            "range": "±325.8%",
            "unit": "ops/sec",
            "extra": "146 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 189.85,
            "range": "±217.0%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "489bbd5fd2233dd4a09a622ca1cf50c9c637e6e0",
          "message": "refactor: Simplify Prolly Map (#518)\n\nThere was actually a bug in binary search as well. Doh!\r\n\r\nThere is a slight change in semantics now. The changed keys now includes\r\nno-op puts. In other words we do not check for equality with the old\r\nvalue. This leads to a possibly larger changed keys but which might lead\r\nto the subscription body being run more often than needed.\r\n\r\nFixes #481",
          "timestamp": "2021-09-15T22:00:29Z",
          "tree_id": "16d35775d32d4ad16c279db749d1ff45ba636531",
          "url": "https://github.com/rocicorp/replicache/commit/489bbd5fd2233dd4a09a622ca1cf50c9c637e6e0"
        },
        "date": 1631743313073,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.57,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.56,
            "range": "±7.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.81,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.45,
            "range": "±78.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.11,
            "range": "±2.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.43,
            "range": "±80.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.11,
            "range": "±81.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1222.2%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 122.8,
            "range": "±423.4%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.08,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±3.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.43,
            "range": "±19.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.05,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.73,
            "range": "±12.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 331.93,
            "range": "±128.6%",
            "unit": "ops/sec",
            "extra": "166 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 265.68,
            "range": "±263.6%",
            "unit": "ops/sec",
            "extra": "133 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 176.73,
            "range": "±240.8%",
            "unit": "ops/sec",
            "extra": "89 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7e138cc2cbd1920007d81e384ecf72c54f015875",
          "message": "refactor: Rename *TryPull to *Pull (#520)",
          "timestamp": "2021-09-15T22:59:40Z",
          "tree_id": "f8e7d0633b307fcff9cc3a2f528ea4732e3cb538",
          "url": "https://github.com/rocicorp/replicache/commit/7e138cc2cbd1920007d81e384ecf72c54f015875"
        },
        "date": 1631746864085,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.16,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.48,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.66,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.25,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.19,
            "range": "±74.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.08,
            "range": "±1.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.45,
            "range": "±76.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.97,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1258.3%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 113.02,
            "range": "±535.4%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.22,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.25,
            "range": "±15.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.45,
            "range": "±13.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.96,
            "range": "±19.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 333.67,
            "range": "±581.5%",
            "unit": "ops/sec",
            "extra": "167 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 274.46,
            "range": "±223.5%",
            "unit": "ops/sec",
            "extra": "138 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 182.54,
            "range": "±306.1%",
            "unit": "ops/sec",
            "extra": "92 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3085a15afa44fb9d78380cb2b01de4af8d0ac25d",
          "message": "refactor: Remove some RPC types (#521)",
          "timestamp": "2021-09-16T00:18:12Z",
          "tree_id": "6bd448c6d2b2f7948b3bd52f1b2bc937f0a21c81",
          "url": "https://github.com/rocicorp/replicache/commit/3085a15afa44fb9d78380cb2b01de4af8d0ac25d"
        },
        "date": 1631751583626,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.47,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.75,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.64,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.29,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.34,
            "range": "±74.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.04,
            "range": "±79.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.42,
            "range": "±77.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.18,
            "range": "±1.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1225.0%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 113.99,
            "range": "±503.1%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.26,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.59,
            "range": "±16.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.54,
            "range": "±10.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.17,
            "range": "±14.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 342.83,
            "range": "±260.7%",
            "unit": "ops/sec",
            "extra": "172 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 278.72,
            "range": "±172.7%",
            "unit": "ops/sec",
            "extra": "140 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 183.63,
            "range": "±116.0%",
            "unit": "ops/sec",
            "extra": "92 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "49b09fa9b07e2997fb0bcb1cfdd42d061411c150",
          "message": "refactor: Split connection transactions (#522)\n\nNow there are 3 individual transactions calls (read, write and index)\r\n\r\nThis is in preparation for more refactoring.",
          "timestamp": "2021-09-16T01:43:39Z",
          "tree_id": "29b38fb1d9e939bfe88c00485b979d6b040fbd42",
          "url": "https://github.com/rocicorp/replicache/commit/49b09fa9b07e2997fb0bcb1cfdd42d061411c150"
        },
        "date": 1631756705304,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.98,
            "range": "±9.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.58,
            "range": "±13.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.72,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.23,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.49,
            "range": "±74.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.01,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.47,
            "range": "±78.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.17,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1266.7%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 117.83,
            "range": "±487.7%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.18,
            "range": "±5.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.66,
            "range": "±26.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.52,
            "range": "±13.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.23,
            "range": "±19.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 347.03,
            "range": "±288.9%",
            "unit": "ops/sec",
            "extra": "174 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 288.67,
            "range": "±290.3%",
            "unit": "ops/sec",
            "extra": "145 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 188.23,
            "range": "±159.2%",
            "unit": "ops/sec",
            "extra": "95 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9e8d7872392c6da5120dc390f7c7970ee9886614",
          "message": "Add some benchmarks for navigator.locks. (#519)\n\nSo far this looks too good to be true:\r\n\r\n% npm run perf -- --lock\r\n...\r\nRunning benchmarks please wait...\r\nunheld read x 6486.70 ops/sec B11100.0% (3244 runs sampled)\r\nheld read x 6438.00 ops/sec B1350.0% (3219 runs sampled)\r\nheld read other tab x 6704.66 ops/sec B11400.0% (3353 runs sampled)\r\nheld read other process x 6663.33 ops/sec B1600.0% (3333 runs sampled)\r\nunheld write acq x 6534.69 ops/sec B11700.0% (3268 runs sampled)\r\nDone!",
          "timestamp": "2021-09-16T10:55:06-07:00",
          "tree_id": "5f791f72e05a8c8f3c83df035b017b89a9b8c9b8",
          "url": "https://github.com/rocicorp/replicache/commit/9e8d7872392c6da5120dc390f7c7970ee9886614"
        },
        "date": 1631815003023,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.06,
            "range": "±10.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.74,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.67,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.19,
            "range": "±24.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.42,
            "range": "±70.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.91,
            "range": "±78.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.33,
            "range": "±78.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.12,
            "range": "±86.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1192.1%",
            "unit": "MB/s",
            "extra": "89 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 107.34,
            "range": "±652.9%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.12,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.08,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.77,
            "range": "±18.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.58,
            "range": "±15.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.04,
            "range": "±11.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 329.34,
            "range": "±69.0%",
            "unit": "ops/sec",
            "extra": "165 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 261.48,
            "range": "±244.1%",
            "unit": "ops/sec",
            "extra": "131 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 183.96,
            "range": "±156.0%",
            "unit": "ops/sec",
            "extra": "92 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "483c87b4ba53e78493d37ed334ed0860440c8490",
          "message": "fix: Makes sure to clone the args in mutations (#525)\n\nThe initial call to a mutation was passed in the args object, which was\r\nalso stored in the kv.Store. This lead to mutations of the args mutating\r\nthe store.\r\n\r\nFixes #480",
          "timestamp": "2021-09-16T19:57:04Z",
          "tree_id": "a41d120bebdb8c7852133541fc8edf8ccbbe17fe",
          "url": "https://github.com/rocicorp/replicache/commit/483c87b4ba53e78493d37ed334ed0860440c8490"
        },
        "date": 1631822321839,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.62,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.35,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.42,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.12,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.9,
            "range": "±75.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.87,
            "range": "±86.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.26,
            "range": "±78.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.91,
            "range": "±88.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1088.6%",
            "unit": "MB/s",
            "extra": "80 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 89.65,
            "range": "±380.2%",
            "unit": "ops/sec",
            "extra": "46 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.72,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.05,
            "range": "±6.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.65,
            "range": "±12.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 8.83,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 8.9,
            "range": "±12.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 316.86,
            "range": "±80.0%",
            "unit": "ops/sec",
            "extra": "159 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 274.14,
            "range": "±120.6%",
            "unit": "ops/sec",
            "extra": "138 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 185.74,
            "range": "±165.3%",
            "unit": "ops/sec",
            "extra": "93 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "60a0c362a64881f3ab5bc537af551aab1810bd9c",
          "message": "Bump version to 7.0.0.",
          "timestamp": "2021-09-16T11:43:45-10:00",
          "tree_id": "f5b237eb56c13adc35f617e5e236f1868280ebe0",
          "url": "https://github.com/rocicorp/replicache/commit/60a0c362a64881f3ab5bc537af551aab1810bd9c"
        },
        "date": 1631829719651,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.74,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.28,
            "range": "±20.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.67,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.37,
            "range": "±79.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.04,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.48,
            "range": "±81.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.12,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1365.7%",
            "unit": "MB/s",
            "extra": "103 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 115.64,
            "range": "±527.7%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.18,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.8,
            "range": "±27.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.28,
            "range": "±12.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.13,
            "range": "±12.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 343.93,
            "range": "±170.4%",
            "unit": "ops/sec",
            "extra": "172 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 285.49,
            "range": "±215.6%",
            "unit": "ops/sec",
            "extra": "143 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 187.59,
            "range": "±234.0%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5cdebc691f92810acc8237319b1d5e2e7da9006f",
          "message": "chore: Rename stable branch to docs",
          "timestamp": "2021-09-16T13:22:26-10:00",
          "tree_id": "4f425ef060e2f590a110422f56f096ff589b3aac",
          "url": "https://github.com/rocicorp/replicache/commit/5cdebc691f92810acc8237319b1d5e2e7da9006f"
        },
        "date": 1631834651856,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.68,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.53,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.5,
            "range": "±25.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.23,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.15,
            "range": "±74.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.96,
            "range": "±83.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.57,
            "range": "±76.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.16,
            "range": "±1.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1244.4%",
            "unit": "MB/s",
            "extra": "98 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 122.77,
            "range": "±421.5%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.18,
            "range": "±6.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.95,
            "range": "±19.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.85,
            "range": "±10.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.89,
            "range": "±18.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 332.48,
            "range": "±518.5%",
            "unit": "ops/sec",
            "extra": "168 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 289.59,
            "range": "±137.5%",
            "unit": "ops/sec",
            "extra": "145 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 195.61,
            "range": "±173.9%",
            "unit": "ops/sec",
            "extra": "98 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6fb87e7dc67f3f3973b92f13d15083f2ac46b052",
          "message": "refactor: Cleanup embed/connection (#526)\n\nThis removes the connections map and the transactions map.\r\n\r\nThese are now owned by Replicache and Read/Write/IndexTransactions.",
          "timestamp": "2021-09-17T01:22:39Z",
          "tree_id": "2d650ef1def20d3f7818b15193d711ca97267a28",
          "url": "https://github.com/rocicorp/replicache/commit/6fb87e7dc67f3f3973b92f13d15083f2ac46b052"
        },
        "date": 1631841852293,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.93,
            "range": "±23.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.68,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.7,
            "range": "±1.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.25,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.27,
            "range": "±77.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.5,
            "range": "±77.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.12,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1211.1%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 113.79,
            "range": "±495.5%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.93,
            "range": "±27.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 11.2,
            "range": "±13.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.69,
            "range": "±24.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 351.86,
            "range": "±270.4%",
            "unit": "ops/sec",
            "extra": "176 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 272.8,
            "range": "±774.2%",
            "unit": "ops/sec",
            "extra": "137 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 190.82,
            "range": "±131.9%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f1e493be89a203a797ccb00fceb16d7aa9af1dec",
          "message": "refactor: Another Promise.all (#529)\n\nI think I disabled this when I was debugging something.",
          "timestamp": "2021-09-17T21:39:52Z",
          "tree_id": "a16ed0cacb1e12c6a8da1cb17414feced4fd7524",
          "url": "https://github.com/rocicorp/replicache/commit/f1e493be89a203a797ccb00fceb16d7aa9af1dec"
        },
        "date": 1631914906864,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.93,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.51,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.73,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.25,
            "range": "±2.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.28,
            "range": "±79.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.04,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.48,
            "range": "±77.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.15,
            "range": "±0.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1265.7%",
            "unit": "MB/s",
            "extra": "98 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 123.48,
            "range": "±436.9%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.19,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.07,
            "range": "±4.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.94,
            "range": "±17.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.54,
            "range": "±14.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.56,
            "range": "±21.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 350.74,
            "range": "±85.2%",
            "unit": "ops/sec",
            "extra": "176 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 273.65,
            "range": "±406.3%",
            "unit": "ops/sec",
            "extra": "138 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 202,
            "range": "±131.1%",
            "unit": "ops/sec",
            "extra": "101 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d93ceaaf685897e532cbf830058f2de04683378e",
          "message": "chore: Move the type testing tests out replicache.tests.ts (#530)",
          "timestamp": "2021-09-17T22:04:22Z",
          "tree_id": "8e55af935658b7a3a85956e7414456ed98f3d140",
          "url": "https://github.com/rocicorp/replicache/commit/d93ceaaf685897e532cbf830058f2de04683378e"
        },
        "date": 1631916348500,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.25,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.46,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.53,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.24,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.61,
            "range": "±76.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.1,
            "range": "±1.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 5.82,
            "range": "±78.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.18,
            "range": "±1.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1244.4%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 117.16,
            "range": "±498.5%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.23,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.34,
            "range": "±32.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.59,
            "range": "±15.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.69,
            "range": "±12.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 344.55,
            "range": "±71.4%",
            "unit": "ops/sec",
            "extra": "173 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 274.85,
            "range": "±146.9%",
            "unit": "ops/sec",
            "extra": "138 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 178.68,
            "range": "±175.5%",
            "unit": "ops/sec",
            "extra": "90 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "332fc591031ed4ffde9f9ab9a29803cf3b1a8f29",
          "message": "Implement proper CLI arg parsing for perf. (#527)\n\nUse this to support various browsers and output styles. All defaults\r\nshould be exactly as previously.\r\n\r\nExample commands:\r\n\r\n% npm run perf\r\n% npm run perf -- --help\r\n% npm run perf -- --devtools\r\n% npm run perf -- --groups lock\r\n% npm run perf -- --browsers firefox webkit\r\n% npm run perf -- --browsers all\r\n% npm run perf -- --format replicache",
          "timestamp": "2021-09-17T15:16:38-07:00",
          "tree_id": "5267ba87ada56ef51b91c2d0c94c5756fcd4a4aa",
          "url": "https://github.com/rocicorp/replicache/commit/332fc591031ed4ffde9f9ab9a29803cf3b1a8f29"
        },
        "date": 1631917086168,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.25,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.37,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.68,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.45,
            "range": "±74.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.15,
            "range": "±86.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.51,
            "range": "±75.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.13,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1400.0%",
            "unit": "MB/s",
            "extra": "102 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 111.48,
            "range": "±503.0%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.22,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.33,
            "range": "±13.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.75,
            "range": "±10.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.75,
            "range": "±24.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 336.79,
            "range": "±344.4%",
            "unit": "ops/sec",
            "extra": "169 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 272.69,
            "range": "±200.0%",
            "unit": "ops/sec",
            "extra": "137 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 180.73,
            "range": "±231.9%",
            "unit": "ops/sec",
            "extra": "91 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fc777197d17a178b9f2f371559af29aee96f9ec",
          "message": "chore: Test with interface (#531)",
          "timestamp": "2021-09-17T23:21:56Z",
          "tree_id": "f5f7d7f6d0fee6c062f9fc5c665c0374ab7b3375",
          "url": "https://github.com/rocicorp/replicache/commit/9fc777197d17a178b9f2f371559af29aee96f9ec"
        },
        "date": 1631921008120,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.25,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.58,
            "range": "±10.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.66,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.24,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.21,
            "range": "±75.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.99,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.52,
            "range": "±75.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.16,
            "range": "±2.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1342.9%",
            "unit": "MB/s",
            "extra": "103 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 119.68,
            "range": "±507.7%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±5.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±4.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.62,
            "range": "±26.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.44,
            "range": "±12.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.35,
            "range": "±12.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 342.83,
            "range": "±337.0%",
            "unit": "ops/sec",
            "extra": "172 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 279.78,
            "range": "±178.8%",
            "unit": "ops/sec",
            "extra": "140 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 178.43,
            "range": "±304.1%",
            "unit": "ops/sec",
            "extra": "90 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d2c5688b7951c243742c0487d1caf368c31a4a7",
          "message": "Fix type operator in test (#532)",
          "timestamp": "2021-09-17T23:29:20Z",
          "tree_id": "90a27d347089f0f3c0117b3f45e14ed75f93da23",
          "url": "https://github.com/rocicorp/replicache/commit/4d2c5688b7951c243742c0487d1caf368c31a4a7"
        },
        "date": 1631921447314,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.07,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.49,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.63,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.25,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.59,
            "range": "±77.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.05,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.18,
            "range": "±71.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.17,
            "range": "±1.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1211.4%",
            "unit": "MB/s",
            "extra": "97 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 122.94,
            "range": "±456.9%",
            "unit": "ops/sec",
            "extra": "62 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.17,
            "range": "±8.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.84,
            "range": "±18.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.62,
            "range": "±10.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.1,
            "range": "±33.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 342.97,
            "range": "±129.6%",
            "unit": "ops/sec",
            "extra": "172 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 277.39,
            "range": "±378.1%",
            "unit": "ops/sec",
            "extra": "139 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 193.38,
            "range": "±170.2%",
            "unit": "ops/sec",
            "extra": "97 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2fd674b26f9de11060c1d825a1d44b7274c40d5b",
          "message": "refactor: Implement isEmpty (#534)\n\nWe used to use scan as a way to check if a list was empty, but this is\r\nmuch more efficient.",
          "timestamp": "2021-09-19T07:06:51-10:00",
          "tree_id": "273d4921a76146241732078af09a9d70b4574fc2",
          "url": "https://github.com/rocicorp/replicache/commit/2fd674b26f9de11060c1d825a1d44b7274c40d5b"
        },
        "date": 1632071302314,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.06,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.66,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.74,
            "range": "±8.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.37,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.54,
            "range": "±78.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.94,
            "range": "±75.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.55,
            "range": "±78.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.2,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1237.1%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 114.94,
            "range": "±495.3%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.27,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.81,
            "range": "±25.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.72,
            "range": "±11.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.88,
            "range": "±12.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 359.56,
            "range": "±55.6%",
            "unit": "ops/sec",
            "extra": "181 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 281.44,
            "range": "±264.5%",
            "unit": "ops/sec",
            "extra": "141 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 198.85,
            "range": "±184.4%",
            "unit": "ops/sec",
            "extra": "100 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9a55ae53626e898c5dcad3796aa81a5262d72956",
          "message": "refactor: Make db.Write extend db.Read (#535)\n\nThis removes the need for the asRead() indirection.",
          "timestamp": "2021-09-19T07:54:31-10:00",
          "tree_id": "54c0a53096930d1ad8938532056f38dc41a9dedc",
          "url": "https://github.com/rocicorp/replicache/commit/9a55ae53626e898c5dcad3796aa81a5262d72956"
        },
        "date": 1632074156862,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.22,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.45,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.77,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.35,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.61,
            "range": "±74.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.24,
            "range": "±90.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.35,
            "range": "±78.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.23,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1348.6%",
            "unit": "MB/s",
            "extra": "103 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 117.62,
            "range": "±598.4%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.28,
            "range": "±8.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.13,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.16,
            "range": "±25.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.6,
            "range": "±11.4%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.9,
            "range": "±12.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 345.65,
            "range": "±359.3%",
            "unit": "ops/sec",
            "extra": "173 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 289.68,
            "range": "±146.9%",
            "unit": "ops/sec",
            "extra": "146 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 190.4,
            "range": "±131.9%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4906f5817f310699fc6e57161906dd53c3bfa553",
          "message": "refactore: Make dag.Write extend dag.Read (#536)\n\nThis removes the need to have a read() indirection.",
          "timestamp": "2021-09-19T08:01:10-10:00",
          "tree_id": "1cabd4978eee418e57c34243dc53e5caa498d6d5",
          "url": "https://github.com/rocicorp/replicache/commit/4906f5817f310699fc6e57161906dd53c3bfa553"
        },
        "date": 1632074556543,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.3,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.63,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.67,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.2,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.59,
            "range": "±72.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.99,
            "range": "±80.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.64,
            "range": "±76.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.24,
            "range": "±1.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1322.9%",
            "unit": "MB/s",
            "extra": "101 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.97,
            "range": "±496.9%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.09,
            "range": "±8.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.12,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 10.13,
            "range": "±21.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.8,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.9,
            "range": "±17.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 345.86,
            "range": "±307.4%",
            "unit": "ops/sec",
            "extra": "173 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 277.28,
            "range": "±329.0%",
            "unit": "ops/sec",
            "extra": "139 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 200.2,
            "range": "±123.9%",
            "unit": "ops/sec",
            "extra": "101 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2f856960197ad6dd4433f9b2bdca5ae55b5ab77e",
          "message": "refactor: In progress to remove testLog (#538)",
          "timestamp": "2021-09-20T13:35:33-10:00",
          "tree_id": "3d11054e51a0030a2890709bab4e547b54a17ed0",
          "url": "https://github.com/rocicorp/replicache/commit/2f856960197ad6dd4433f9b2bdca5ae55b5ab77e"
        },
        "date": 1632181028934,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.25,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.38,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.58,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.21,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.48,
            "range": "±75.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.1,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.69,
            "range": "±76.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.18,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1331.4%",
            "unit": "MB/s",
            "extra": "100 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.72,
            "range": "±506.2%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.15,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.94,
            "range": "±19.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.14,
            "range": "±13.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 10.16,
            "range": "±13.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 342.83,
            "range": "±160.7%",
            "unit": "ops/sec",
            "extra": "172 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 279.72,
            "range": "±146.9%",
            "unit": "ops/sec",
            "extra": "140 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 190.44,
            "range": "±155.3%",
            "unit": "ops/sec",
            "extra": "96 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "98ece98e559b0d2bd97694843d04978c6ab90b6a",
          "message": "refactor: One more towards removint testLog (#539)",
          "timestamp": "2021-09-21T06:25:10Z",
          "tree_id": "147cf4d9693bcbb25c26c7bd8dbf85b8688ecd0c",
          "url": "https://github.com/rocicorp/replicache/commit/98ece98e559b0d2bd97694843d04978c6ab90b6a"
        },
        "date": 1632205604575,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.06,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.26,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.65,
            "range": "±7.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.24,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 5.47,
            "range": "±74.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.97,
            "range": "±7.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.26,
            "range": "±78.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.99,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1327.8%",
            "unit": "MB/s",
            "extra": "99 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 107.78,
            "range": "±498.5%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.04,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.06,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.69,
            "range": "±21.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.7,
            "range": "±10.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.39,
            "range": "±13.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 314.37,
            "range": "±286.2%",
            "unit": "ops/sec",
            "extra": "158 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 275.06,
            "range": "±215.6%",
            "unit": "ops/sec",
            "extra": "138 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 186.69,
            "range": "±172.9%",
            "unit": "ops/sec",
            "extra": "94 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cb0f454a2279d6fe3fd1c1a8caae13a6f54615ed",
          "message": "refactor: Move ReplicacheTest to test-util (#540)",
          "timestamp": "2021-09-21T06:31:42Z",
          "tree_id": "d903687132092dce04e9a6dd31a85b8531223bc1",
          "url": "https://github.com/rocicorp/replicache/commit/cb0f454a2279d6fe3fd1c1a8caae13a6f54615ed"
        },
        "date": 1632205991573,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.12,
            "range": "±46.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.37,
            "range": "±12.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.59,
            "range": "±2.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.23,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.37,
            "range": "±79.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6,
            "range": "±82.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.3,
            "range": "±80.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.04,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±2217.1%",
            "unit": "MB/s",
            "extra": "91 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 120.01,
            "range": "±413.8%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.21,
            "range": "±6.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a22a2ce6a7737e0f587efad50404198d46983f67",
          "message": "chore: Update TS to 4.4 (#557)",
          "timestamp": "2021-09-23T02:29:33Z",
          "tree_id": "757d589023519a42dbe3c2039c6d682338d0541d",
          "url": "https://github.com/rocicorp/replicache/commit/a22a2ce6a7737e0f587efad50404198d46983f67"
        },
        "date": 1632367818405,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.91,
            "range": "±54.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.84,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.78,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.36,
            "range": "±20.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.26,
            "range": "±75.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.15,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.45,
            "range": "±77.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.19,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1197.3%",
            "unit": "MB/s",
            "extra": "94 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.9,
            "range": "±869.1%",
            "unit": "ops/sec",
            "extra": "51 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.08,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "0b6050f5b0ccc3a33a3bc3204bc6f255b2b08d5f",
          "message": "refactor: Cleanup withRead/withWrite (#559)\n\nI do not know what I was thinking when I wrote this.",
          "timestamp": "2021-09-23T19:09:57Z",
          "tree_id": "5195e150537d0e9939b348fb7714121cd28eb7d7",
          "url": "https://github.com/rocicorp/replicache/commit/0b6050f5b0ccc3a33a3bc3204bc6f255b2b08d5f"
        },
        "date": 1632762013878,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.71,
            "range": "±27.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.81,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.7,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.32,
            "range": "±22.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.17,
            "range": "±76.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.21,
            "range": "±2.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.65,
            "range": "±77.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.19,
            "range": "±1.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1605.3%",
            "unit": "MB/s",
            "extra": "87 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 115.98,
            "range": "±430.9%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.16,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "472d13bcdaa24d819d105cfddc709d5106660877",
          "message": "nmp run format",
          "timestamp": "2021-09-27T07:37:09-10:00",
          "tree_id": "2de9cd6acfe8c7bed9b8c53c36f143e34dcc700d",
          "url": "https://github.com/rocicorp/replicache/commit/472d13bcdaa24d819d105cfddc709d5106660877"
        },
        "date": 1632770549829,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.06,
            "range": "±60.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.96,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.6,
            "range": "±27.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.3,
            "range": "±2.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.65,
            "range": "±71.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.04,
            "range": "±80.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.59,
            "range": "±79.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.01,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1251.4%",
            "unit": "MB/s",
            "extra": "96 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 99.33,
            "range": "±911.3%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.93,
            "range": "±21.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.08,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fa2688ddaf9fdd0d4f29a43ceade3e06b2ab38e7",
          "message": "chore: Use staticLogging on CI",
          "timestamp": "2021-09-27T09:36:53-10:00",
          "tree_id": "f1f6c71e7dd11a4b99c3e730fb33fd600db4f196",
          "url": "https://github.com/rocicorp/replicache/commit/fa2688ddaf9fdd0d4f29a43ceade3e06b2ab38e7"
        },
        "date": 1632781475075,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.56,
            "range": "±54.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.97,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.87,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.22,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.44,
            "range": "±75.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±82.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.45,
            "range": "±75.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.28,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1888.9%",
            "unit": "MB/s",
            "extra": "89 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.79,
            "range": "±413.2%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5,
            "range": "±15.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.81,
            "range": "±56.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.16,
            "range": "±18.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.7,
            "range": "±16.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 369.19,
            "range": "±61.5%",
            "unit": "ops/sec",
            "extra": "185 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 313.81,
            "range": "±231.0%",
            "unit": "ops/sec",
            "extra": "157 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 233.53,
            "range": "±478.4%",
            "unit": "ops/sec",
            "extra": "117 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "fa2688ddaf9fdd0d4f29a43ceade3e06b2ab38e7",
          "message": "chore: Use staticLogging on CI",
          "timestamp": "2021-09-27T09:36:53-10:00",
          "tree_id": "f1f6c71e7dd11a4b99c3e730fb33fd600db4f196",
          "url": "https://github.com/rocicorp/replicache/commit/fa2688ddaf9fdd0d4f29a43ceade3e06b2ab38e7"
        },
        "date": 1632781654098,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.36,
            "range": "±54.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 7.05,
            "range": "±7.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.7,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.31,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.48,
            "range": "±71.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.18,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.42,
            "range": "±76.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.1,
            "range": "±81.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "write single byte",
            "value": 0,
            "range": "±1694.6%",
            "unit": "MB/s",
            "extra": "90 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 115.1,
            "range": "±381.2%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.1,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.45,
            "range": "±84.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.98,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.74,
            "range": "±11.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 355.86,
            "range": "±230.8%",
            "unit": "ops/sec",
            "extra": "178 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 294.41,
            "range": "±544.8%",
            "unit": "ops/sec",
            "extra": "148 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 243.95,
            "range": "±175.7%",
            "unit": "ops/sec",
            "extra": "122 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e8bf5965f61d41609c730c20582ce9e5957babf8",
          "message": "chore: Remove single byte write perf test (#585)\n\nIt has been showing 0 for a very long time so it adds no usefule\r\ninformation.\r\n\r\nCloses #537",
          "timestamp": "2021-09-27T23:12:44Z",
          "tree_id": "2f44bdb61251d829571ba9dda48fc4ca9a0f695d",
          "url": "https://github.com/rocicorp/replicache/commit/e8bf5965f61d41609c730c20582ce9e5957babf8"
        },
        "date": 1632784480862,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.08,
            "range": "±63.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.54,
            "range": "±12.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.75,
            "range": "±2.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.34,
            "range": "±28.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.57,
            "range": "±74.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.22,
            "range": "±1.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.73,
            "range": "±76.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.23,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 117.46,
            "range": "±464.2%",
            "unit": "ops/sec",
            "extra": "60 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.2,
            "range": "±5.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.84,
            "range": "±57.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.96,
            "range": "±15.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.75,
            "range": "±14.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 361.97,
            "range": "±76.9%",
            "unit": "ops/sec",
            "extra": "182 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 315.56,
            "range": "±210.3%",
            "unit": "ops/sec",
            "extra": "158 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 231.96,
            "range": "±254.1%",
            "unit": "ops/sec",
            "extra": "117 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5adff70865cb380c8fd71f860b018240a02255ed",
          "message": "refactor: Remove another remnant of TryPush (#587)",
          "timestamp": "2021-09-27T13:51:04-10:00",
          "tree_id": "57554354abf1e706187e1fc4e575c384a5e4a5ee",
          "url": "https://github.com/rocicorp/replicache/commit/5adff70865cb380c8fd71f860b018240a02255ed"
        },
        "date": 1632786780049,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.48,
            "range": "±61.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.65,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.68,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.26,
            "range": "±2.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.27,
            "range": "±74.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.37,
            "range": "±78.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.09,
            "range": "±80.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 103.65,
            "range": "±822.1%",
            "unit": "ops/sec",
            "extra": "52 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.19,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.03,
            "range": "±57.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.92,
            "range": "±16.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.72,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 360.49,
            "range": "±119.2%",
            "unit": "ops/sec",
            "extra": "181 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 301.47,
            "range": "±189.7%",
            "unit": "ops/sec",
            "extra": "152 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 226.6,
            "range": "±192.1%",
            "unit": "ops/sec",
            "extra": "114 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "16d2597163a88c65f51d6632bf1b03fd294769cf",
          "message": "feat, doc: Expose PullRequest/PushRequest (#586)\n\nExpose the types used for the JSON payload used with push an pull.\r\n\r\nFixes #459",
          "timestamp": "2021-09-27T23:54:37Z",
          "tree_id": "cc541a4282fc9303ba2d6fdcda9b384be4a3fa79",
          "url": "https://github.com/rocicorp/replicache/commit/16d2597163a88c65f51d6632bf1b03fd294769cf"
        },
        "date": 1632786986271,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.55,
            "range": "±62.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.67,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.66,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.34,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.72,
            "range": "±73.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.17,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.5,
            "range": "±71.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.22,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.6,
            "range": "±422.1%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.15,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.87,
            "range": "±57.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.83,
            "range": "±19.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.71,
            "range": "±10.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 351.51,
            "range": "±511.5%",
            "unit": "ops/sec",
            "extra": "176 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 311.69,
            "range": "±220.7%",
            "unit": "ops/sec",
            "extra": "156 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 242.26,
            "range": "±321.6%",
            "unit": "ops/sec",
            "extra": "122 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "01e14c14f58c5b8b65ebcc393c2fc68386c99f08",
          "message": "chore: Try to deflake firefox test (#588)",
          "timestamp": "2021-09-28T00:10:07Z",
          "tree_id": "d33f468b5b8a4d5f88fd5239f30f9846fa116a1d",
          "url": "https://github.com/rocicorp/replicache/commit/01e14c14f58c5b8b65ebcc393c2fc68386c99f08"
        },
        "date": 1632787916865,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.31,
            "range": "±56.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.88,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.7,
            "range": "±2.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.29,
            "range": "±19.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.44,
            "range": "±71.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.18,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.48,
            "range": "±77.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.14,
            "range": "±1.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.26,
            "range": "±435.3%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.1,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±4.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.63,
            "range": "±84.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.63,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.57,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 353.08,
            "range": "±377.8%",
            "unit": "ops/sec",
            "extra": "177 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 322.77,
            "range": "±141.4%",
            "unit": "ops/sec",
            "extra": "162 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 241.32,
            "range": "±162.2%",
            "unit": "ops/sec",
            "extra": "121 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a7eefcd0395d4d94eae6d8dc8dedc023ed059323",
          "message": "refactor: Change internal return type for callPuller (#589)",
          "timestamp": "2021-09-28T00:33:13Z",
          "tree_id": "db04c11cd1c57e933fc9e6767566ce1fe60dc0df",
          "url": "https://github.com/rocicorp/replicache/commit/a7eefcd0395d4d94eae6d8dc8dedc023ed059323"
        },
        "date": 1632789302547,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.14,
            "range": "±55.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.69,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.68,
            "range": "±36.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.26,
            "range": "±2.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.62,
            "range": "±73.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.1,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.37,
            "range": "±77.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.1,
            "range": "±77.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 104.95,
            "range": "±901.5%",
            "unit": "ops/sec",
            "extra": "53 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.02,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.92,
            "range": "±58.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.9,
            "range": "±17.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.6,
            "range": "±16.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 351.93,
            "range": "±415.4%",
            "unit": "ops/sec",
            "extra": "176 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 305.21,
            "range": "±237.9%",
            "unit": "ops/sec",
            "extra": "153 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 249.7,
            "range": "±197.2%",
            "unit": "ops/sec",
            "extra": "125 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56170bab7a7a7a947ae82df40450c8dfdcf9c5ad",
          "message": "chore: Add perf tests for hashing (#590)\n\nThis tests a few things but most importantly, it tests the performance\r\nof native hashing vs wasm.\r\n\r\nAnother small win that is shown in this test is to not use an Uint8Array\r\nwith utf8 but instead use a Uint16 with utf16.",
          "timestamp": "2021-09-28T10:02:31-10:00",
          "tree_id": "9cf88a1659de9d67282e2293fb4f48e52028190e",
          "url": "https://github.com/rocicorp/replicache/commit/56170bab7a7a7a947ae82df40450c8dfdcf9c5ad"
        },
        "date": 1632859474318,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.16,
            "range": "±43.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.86,
            "range": "±17.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.79,
            "range": "±32.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.3,
            "range": "±4.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.43,
            "range": "±75.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.14,
            "range": "±9.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.31,
            "range": "±78.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.09,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 102.36,
            "range": "±1115.9%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.15,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.89,
            "range": "±55.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.84,
            "range": "±16.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.58,
            "range": "±8.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 354.16,
            "range": "±51.9%",
            "unit": "ops/sec",
            "extra": "178 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 293.18,
            "range": "±370.0%",
            "unit": "ops/sec",
            "extra": "147 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 232,
            "range": "±437.8%",
            "unit": "ops/sec",
            "extra": "116 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1bcd684ba7231b515e8f835629b4e899e3d511e9",
          "message": "chore: Convert perf to ts (#591)",
          "timestamp": "2021-09-28T21:46:12Z",
          "tree_id": "6c7a716a7aaa9ef22598dcc02920ff8b562929af",
          "url": "https://github.com/rocicorp/replicache/commit/1bcd684ba7231b515e8f835629b4e899e3d511e9"
        },
        "date": 1632865689015,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.42,
            "range": "±61.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.67,
            "range": "±14.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.77,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.32,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.53,
            "range": "±74.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.06,
            "range": "±3.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.26,
            "range": "±73.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.18,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.65,
            "range": "±464.7%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.08,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.08,
            "range": "±7.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.85,
            "range": "±51.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.83,
            "range": "±16.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.55,
            "range": "±16.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 346.54,
            "range": "±140.7%",
            "unit": "ops/sec",
            "extra": "174 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 305.57,
            "range": "±172.4%",
            "unit": "ops/sec",
            "extra": "153 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 235.72,
            "range": "±321.6%",
            "unit": "ops/sec",
            "extra": "118 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fc100d5087997e9c96e306e93500ce0cf1403b59",
          "message": "chore: Run perf tests with Memstore too (#593)\n\nFixes #484",
          "timestamp": "2021-09-29T01:04:06Z",
          "tree_id": "d58f4ac25ac255341eaa683ef4c07fb7e04c4459",
          "url": "https://github.com/rocicorp/replicache/commit/fc100d5087997e9c96e306e93500ce0cf1403b59"
        },
        "date": 1632877602364,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.44,
            "range": "±62.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.9,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.62,
            "range": "±26.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.3,
            "range": "±21.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.28,
            "range": "±75.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.14,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.26,
            "range": "±77.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.11,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 110.08,
            "range": "±406.9%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.96,
            "range": "±3.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.29,
            "range": "±51.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.38,
            "range": "±12.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.04,
            "range": "±10.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 336.99,
            "range": "±132.1%",
            "unit": "ops/sec",
            "extra": "169 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 289.31,
            "range": "±276.7%",
            "unit": "ops/sec",
            "extra": "145 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 231.91,
            "range": "±459.0%",
            "unit": "ops/sec",
            "extra": "116 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.54,
            "range": "±20.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.2,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.11,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.89,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±350.0%",
            "unit": "MB/s",
            "extra": "415 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±132.4%",
            "unit": "MB/s",
            "extra": "71 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±600.0%",
            "unit": "MB/s",
            "extra": "595 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1479.64,
            "range": "±312.1%",
            "unit": "MB/s",
            "extra": "141 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1626,
            "range": "±1466.7%",
            "unit": "ops/sec",
            "extra": "813 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.55,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.6,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 111.89,
            "range": "±111.6%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 114.49,
            "range": "±65.9%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 95.66,
            "range": "±83.2%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1347.73,
            "range": "±285.7%",
            "unit": "ops/sec",
            "extra": "674 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1205.04,
            "range": "±425.0%",
            "unit": "ops/sec",
            "extra": "603 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 574.16,
            "range": "±341.2%",
            "unit": "ops/sec",
            "extra": "288 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "821bb0f2af50bbf8549e6c3ebbed119f84dc941e",
          "message": "refactor: Remove use of lodash for deepClone (#594)\n\nBundle size before: 192.2kb\r\nBundle size after:  154.3kb\r\n\r\nFixes #485",
          "timestamp": "2021-09-28T16:19:07-10:00",
          "tree_id": "44014506622e77ba68d08470e63ecdbc07be3d2f",
          "url": "https://github.com/rocicorp/replicache/commit/821bb0f2af50bbf8549e6c3ebbed119f84dc941e"
        },
        "date": 1632882074649,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.03,
            "range": "±12.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.66,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.62,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.35,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.58,
            "range": "±73.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.21,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.62,
            "range": "±74.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.28,
            "range": "±2.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 120.13,
            "range": "±422.7%",
            "unit": "ops/sec",
            "extra": "61 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.19,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.64,
            "range": "±17.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.14,
            "range": "±16.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.53,
            "range": "±23.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 355.36,
            "range": "±150.0%",
            "unit": "ops/sec",
            "extra": "178 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 311.81,
            "range": "±186.2%",
            "unit": "ops/sec",
            "extra": "156 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 238.85,
            "range": "±237.8%",
            "unit": "ops/sec",
            "extra": "120 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.72,
            "range": "±16.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.51,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.15,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4.01,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±625.0%",
            "unit": "MB/s",
            "extra": "409 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±204.4%",
            "unit": "MB/s",
            "extra": "70 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±587.5%",
            "unit": "MB/s",
            "extra": "612 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1436.12,
            "range": "±426.5%",
            "unit": "MB/s",
            "extra": "136 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1639.02,
            "range": "±1950.0%",
            "unit": "ops/sec",
            "extra": "820 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.71,
            "range": "±8.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.64,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 116.21,
            "range": "±108.4%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 116.49,
            "range": "±86.7%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 96.97,
            "range": "±109.1%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1368,
            "range": "±328.6%",
            "unit": "ops/sec",
            "extra": "684 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1164.6,
            "range": "±437.5%",
            "unit": "ops/sec",
            "extra": "583 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 574.51,
            "range": "±347.1%",
            "unit": "ops/sec",
            "extra": "288 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ad63e08a27f67568a0011f536d313f62ee8eb01f",
          "message": "Create codeql-analysis.yml",
          "timestamp": "2021-09-28T16:50:34-10:00",
          "tree_id": "05772dae5c091896663d775665f019b123334493",
          "url": "https://github.com/rocicorp/replicache/commit/ad63e08a27f67568a0011f536d313f62ee8eb01f"
        },
        "date": 1632883952671,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.99,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.71,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.31,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.73,
            "range": "±75.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.22,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.65,
            "range": "±76.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.08,
            "range": "±77.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 113.77,
            "range": "±428.8%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.14,
            "range": "±6.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.11,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.94,
            "range": "±18.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.97,
            "range": "±23.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.56,
            "range": "±16.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 361.57,
            "range": "±173.1%",
            "unit": "ops/sec",
            "extra": "181 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 309.57,
            "range": "±165.5%",
            "unit": "ops/sec",
            "extra": "155 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 226.46,
            "range": "±292.1%",
            "unit": "ops/sec",
            "extra": "114 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.36,
            "range": "±21.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.16,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.28,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4.11,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±350.0%",
            "unit": "MB/s",
            "extra": "415 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±213.2%",
            "unit": "MB/s",
            "extra": "70 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±1100.0%",
            "unit": "MB/s",
            "extra": "614 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1479.64,
            "range": "±472.7%",
            "unit": "MB/s",
            "extra": "143 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1705.66,
            "range": "±1416.7%",
            "unit": "ops/sec",
            "extra": "853 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.71,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.64,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 115.61,
            "range": "±104.8%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 116.19,
            "range": "±60.0%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 95.94,
            "range": "±100.0%",
            "unit": "ops/sec",
            "extra": "48 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1346.65,
            "range": "±328.6%",
            "unit": "ops/sec",
            "extra": "674 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1179.06,
            "range": "±425.0%",
            "unit": "ops/sec",
            "extra": "590 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 577.19,
            "range": "±362.5%",
            "unit": "ops/sec",
            "extra": "289 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b2ef544b99a9319220cb8f8e377b90280c01723a",
          "message": "Add a couple perf tests for small localStorage I/O. (#603)\n\nI swapped the order of firefox and webkit in the allBrowsers list\r\nbecause runner.js would fail to start Firefox in the third position when\r\nrunning with --browsers all, but it runs fine in the second. ¯\\_(ツ)_/¯",
          "timestamp": "2021-10-06T16:32:57-07:00",
          "tree_id": "f3f0f697a3db1ddea9de743940c901da9e9de413",
          "url": "https://github.com/rocicorp/replicache/commit/b2ef544b99a9319220cb8f8e377b90280c01723a"
        },
        "date": 1633563300446,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.85,
            "range": "±11.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.73,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.58,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.83,
            "range": "±72.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.25,
            "range": "±92.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.57,
            "range": "±79.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.27,
            "range": "±2.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 108.59,
            "range": "±418.6%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.11,
            "range": "±8.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 8.97,
            "range": "±11.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.62,
            "range": "±23.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.39,
            "range": "±24.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 320.78,
            "range": "±507.1%",
            "unit": "ops/sec",
            "extra": "161 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 285.71,
            "range": "±354.8%",
            "unit": "ops/sec",
            "extra": "143 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 232.97,
            "range": "±194.9%",
            "unit": "ops/sec",
            "extra": "117 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.72,
            "range": "±18.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.27,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.1,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4.02,
            "range": "±9.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±358.3%",
            "unit": "MB/s",
            "extra": "413 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±214.7%",
            "unit": "MB/s",
            "extra": "70 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±587.5%",
            "unit": "MB/s",
            "extra": "611 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1479.64,
            "range": "±472.7%",
            "unit": "MB/s",
            "extra": "141 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1699.96,
            "range": "±1483.3%",
            "unit": "ops/sec",
            "extra": "851 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.68,
            "range": "±5.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.63,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 114.9,
            "range": "±107.1%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 115.93,
            "range": "±67.9%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 96.34,
            "range": "±96.0%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1367.73,
            "range": "±142.9%",
            "unit": "ops/sec",
            "extra": "684 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1154.85,
            "range": "±425.0%",
            "unit": "ops/sec",
            "extra": "578 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 572.97,
            "range": "±341.2%",
            "unit": "ops/sec",
            "extra": "287 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9ceb20e830d2a2bdda3ad72e8823f414d8f93fd2",
          "message": "Update HACKING.md",
          "timestamp": "2021-10-08T08:56:09-10:00",
          "tree_id": "f73bceef40e2cc1fb9750789ea3c3cb16e540de9",
          "url": "https://github.com/rocicorp/replicache/commit/9ceb20e830d2a2bdda3ad72e8823f414d8f93fd2"
        },
        "date": 1633719496149,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.79,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.71,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.33,
            "range": "±76.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.19,
            "range": "±83.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.45,
            "range": "±77.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.17,
            "range": "±3.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 115.37,
            "range": "±404.3%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.1,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.34,
            "range": "±16.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.72,
            "range": "±11.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.2,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 338.71,
            "range": "±348.1%",
            "unit": "ops/sec",
            "extra": "170 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 298.75,
            "range": "±156.7%",
            "unit": "ops/sec",
            "extra": "150 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 239.81,
            "range": "±150.0%",
            "unit": "ops/sec",
            "extra": "120 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.58,
            "range": "±16.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.56,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.17,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.97,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±350.0%",
            "unit": "MB/s",
            "extra": "418 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±200.0%",
            "unit": "MB/s",
            "extra": "70 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±1237.5%",
            "unit": "MB/s",
            "extra": "601 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1395.09,
            "range": "±431.4%",
            "unit": "MB/s",
            "extra": "136 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1688.6,
            "range": "±2550.0%",
            "unit": "ops/sec",
            "extra": "847 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.67,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.65,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 115.98,
            "range": "±108.4%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 117.98,
            "range": "±52.4%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 96.51,
            "range": "±89.9%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1360.37,
            "range": "±185.7%",
            "unit": "ops/sec",
            "extra": "681 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1172.36,
            "range": "±437.5%",
            "unit": "ops/sec",
            "extra": "587 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 561.1,
            "range": "±335.3%",
            "unit": "ops/sec",
            "extra": "281 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f0f667f0101eefae54df838c581fe6a7b93e8063",
          "message": "Add --list and --run args to perf runner. (#609)\n\nI found that I wanted this to iterate on individual benchmarks rapidly,\r\nrather than having to run a whole group.\r\n\r\nList all benchmarks:\r\nnpm run perf -- --list\r\n\r\nRun benchmarks matching --run regex:\r\nnpm run perf -- --run \"idb .* tx .* 1x1 KiB\" --format replicache --browsers all",
          "timestamp": "2021-10-14T15:35:24-07:00",
          "tree_id": "552e501aa00a07917287596e2899df539ea20ed8",
          "url": "https://github.com/rocicorp/replicache/commit/f0f667f0101eefae54df838c581fe6a7b93e8063"
        },
        "date": 1634251071644,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.04,
            "range": "±12.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.7,
            "range": "±10.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.64,
            "range": "±2.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.16,
            "range": "±28.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.61,
            "range": "±75.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.11,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.42,
            "range": "±80.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.26,
            "range": "±2.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 115.12,
            "range": "±407.2%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.15,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.46,
            "range": "±19.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.74,
            "range": "±13.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.55,
            "range": "±23.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 346.34,
            "range": "±77.8%",
            "unit": "ops/sec",
            "extra": "174 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 289.07,
            "range": "±287.1%",
            "unit": "ops/sec",
            "extra": "145 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 222.62,
            "range": "±207.5%",
            "unit": "ops/sec",
            "extra": "112 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.58,
            "range": "±22.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.36,
            "range": "±8.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.09,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.95,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±358.3%",
            "unit": "MB/s",
            "extra": "404 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±189.7%",
            "unit": "MB/s",
            "extra": "71 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±600.0%",
            "unit": "MB/s",
            "extra": "612 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1436.12,
            "range": "±420.6%",
            "unit": "MB/s",
            "extra": "133 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1685.66,
            "range": "±2550.0%",
            "unit": "ops/sec",
            "extra": "843 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.76,
            "range": "±8.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.65,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 115.72,
            "range": "±101.2%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 117.79,
            "range": "±93.9%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 92.43,
            "range": "±100.0%",
            "unit": "ops/sec",
            "extra": "47 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1344.39,
            "range": "±314.3%",
            "unit": "ops/sec",
            "extra": "673 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1146.85,
            "range": "±412.5%",
            "unit": "ops/sec",
            "extra": "574 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 570.86,
            "range": "±358.8%",
            "unit": "ops/sec",
            "extra": "286 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "whiten@georgetown.edu",
            "name": "Nate White",
            "username": "whiten"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7809c2039eaa3c69e1fddf198dc16e2e1a1db124",
          "message": "Switch to setup-node@v2 for built-in npm caching (#523)",
          "timestamp": "2021-10-14T16:17:41-07:00",
          "tree_id": "736059e550b368264a8d14323cb1ac19642af2a8",
          "url": "https://github.com/rocicorp/replicache/commit/7809c2039eaa3c69e1fddf198dc16e2e1a1db124"
        },
        "date": 1634253587853,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.97,
            "range": "±11.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.91,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.29,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.57,
            "range": "±77.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.24,
            "range": "±0.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.56,
            "range": "±77.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.32,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 116.21,
            "range": "±435.3%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.12,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.4,
            "range": "±17.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.85,
            "range": "±17.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.28,
            "range": "±27.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 353.43,
            "range": "±103.7%",
            "unit": "ops/sec",
            "extra": "177 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 303.45,
            "range": "±216.7%",
            "unit": "ops/sec",
            "extra": "152 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 226.1,
            "range": "±152.5%",
            "unit": "ops/sec",
            "extra": "114 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.62,
            "range": "±16.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.41,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.17,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.93,
            "range": "±7.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±350.0%",
            "unit": "MB/s",
            "extra": "409 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 728.78,
            "range": "±201.5%",
            "unit": "MB/s",
            "extra": "71 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±587.5%",
            "unit": "MB/s",
            "extra": "602 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1479.64,
            "range": "±469.7%",
            "unit": "MB/s",
            "extra": "141 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1715.66,
            "range": "±1400.0%",
            "unit": "ops/sec",
            "extra": "858 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.71,
            "range": "±6.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.64,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 114.94,
            "range": "±107.1%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 117.51,
            "range": "±67.5%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 96.46,
            "range": "±90.9%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1346.65,
            "range": "±142.9%",
            "unit": "ops/sec",
            "extra": "674 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1151.08,
            "range": "±425.0%",
            "unit": "ops/sec",
            "extra": "576 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 568.86,
            "range": "±341.2%",
            "unit": "ops/sec",
            "extra": "285 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg.james.baker@gmail.com",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "52bab5d0b23c4116d945a4cc6db7d456f7863b17",
          "message": "refactor: Update Replicache class to no longer implement ReadTransaction, deprecate methods (#612)\n\nUpdate Replicache class to no longer implement ReadTransactionbecause while Replicache exposing these methods is slightly convenient\r\n\r\nReplicache's implementation is not actually transactional and thus cannot safely be passed to any function expecting a transaction\r\nit makes it difficult to add a non-Promise property for clientID to the ReadTransaction interface (see RFE: Expose clientID on Read/WriteTransaction #541)\r\n\r\nCurrently does not remove ReadTransaction methods from Replicache, but marks them as\r\ndeprecated, pointing to Replicache#query.  These methods will be removed in the\r\nnext major release.\r\n\r\nCo-authored-by: Gregory Baker <greg@roci.dev>",
          "timestamp": "2021-10-21T11:00:55-07:00",
          "tree_id": "4baea55a072da235e6b1db250055fb2ca679fd31",
          "url": "https://github.com/rocicorp/replicache/commit/52bab5d0b23c4116d945a4cc6db7d456f7863b17"
        },
        "date": 1634839379565,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.84,
            "range": "±11.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.36,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.58,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.25,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.4,
            "range": "±75.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.21,
            "range": "±2.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.34,
            "range": "±75.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.23,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 112.2,
            "range": "±434.3%",
            "unit": "ops/sec",
            "extra": "57 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.03,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9,
            "range": "±30.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.86,
            "range": "±17.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.04,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 340.03,
            "range": "±139.3%",
            "unit": "ops/sec",
            "extra": "171 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 297.29,
            "range": "±276.7%",
            "unit": "ops/sec",
            "extra": "149 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 230.43,
            "range": "±157.9%",
            "unit": "ops/sec",
            "extra": "116 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.58,
            "range": "±15.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.3,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.18,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4.1,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±358.3%",
            "unit": "MB/s",
            "extra": "416 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 728.78,
            "range": "±138.8%",
            "unit": "MB/s",
            "extra": "71 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±575.0%",
            "unit": "MB/s",
            "extra": "606 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1436.12,
            "range": "±441.2%",
            "unit": "MB/s",
            "extra": "137 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1683.64,
            "range": "±2583.3%",
            "unit": "ops/sec",
            "extra": "843 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.75,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.63,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 116.81,
            "range": "±106.0%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 117.3,
            "range": "±90.4%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 96.38,
            "range": "±108.0%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1340.66,
            "range": "±457.1%",
            "unit": "ops/sec",
            "extra": "671 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1167.77,
            "range": "±412.5%",
            "unit": "ops/sec",
            "extra": "584 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 534.82,
            "range": "±335.3%",
            "unit": "ops/sec",
            "extra": "268 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "277f6ff7d3ff42d0dd5835e6dab0244a201481a0",
          "message": "fix: Fix deadlock/transaction issues with expose clientID on Read/WriteTransaction (#617)\n\nfix: Fix deadlock/transaction issues with expose clientID on Read/WriteTransaction\r\n\r\nThis change\r\n\r\n1. Addresses arv's feedback on PR feat: Expose clientID on ReadTransaction #613\r\n2. Fixes issue where awaiting clientID inside a dag transaction was causing deadlocks and/or prematurely closing idb transactions.\r\n3. Restructures Replicache#_open to avoid unnecessarily delaying the resolution of _clientIDPromise (currently blocks on db initialization and this._getRoot).\r\n\r\nCloses #541",
          "timestamp": "2021-10-22T12:59:01-07:00",
          "tree_id": "e9255ad8fc222f8f962cf29c7f8faa9477e470f2",
          "url": "https://github.com/rocicorp/replicache/commit/277f6ff7d3ff42d0dd5835e6dab0244a201481a0"
        },
        "date": 1634948390290,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 3.98,
            "range": "±43.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.59,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.66,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.37,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.43,
            "range": "±73.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.23,
            "range": "±87.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.35,
            "range": "±79.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.76,
            "range": "±88.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 109.55,
            "range": "±439.1%",
            "unit": "ops/sec",
            "extra": "56 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.12,
            "range": "±5.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.64,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.95,
            "range": "±9.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 100",
            "value": 10.27,
            "range": "±10.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.07,
            "range": "±10.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 353.86,
            "range": "±134.6%",
            "unit": "ops/sec",
            "extra": "177 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 301.77,
            "range": "±146.7%",
            "unit": "ops/sec",
            "extra": "152 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 227.45,
            "range": "±233.3%",
            "unit": "ops/sec",
            "extra": "114 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.7,
            "range": "±16.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.47,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.11,
            "range": "±10.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4,
            "range": "±7.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±308.3%",
            "unit": "MB/s",
            "extra": "409 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 728.78,
            "range": "±183.6%",
            "unit": "MB/s",
            "extra": "71 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±575.0%",
            "unit": "MB/s",
            "extra": "603 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1436.12,
            "range": "±711.8%",
            "unit": "MB/s",
            "extra": "135 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1672.66,
            "range": "±2583.3%",
            "unit": "ops/sec",
            "extra": "837 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.66,
            "range": "±5.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.63,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 115.49,
            "range": "±103.6%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 116.6,
            "range": "±72.3%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 96.42,
            "range": "±116.2%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1337.47,
            "range": "±371.4%",
            "unit": "ops/sec",
            "extra": "669 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1164,
            "range": "±375.0%",
            "unit": "ops/sec",
            "extra": "582 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 574.51,
            "range": "±362.5%",
            "unit": "ops/sec",
            "extra": "288 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "976bf988f0644e785df4ff9f569116849a9ee7c5",
          "message": "Revert \"feat: Expose clientID on ReadTransaction (#613)\"\n\nThis reverts commit 56c96cd251ca427b8bd7fccad3a1b043fd540b30.",
          "timestamp": "2021-10-22T15:25:36-10:00",
          "tree_id": "bcb5234193200df63acccd3f89a785463d5da7b6",
          "url": "https://github.com/rocicorp/replicache/commit/976bf988f0644e785df4ff9f569116849a9ee7c5"
        },
        "date": 1634952457483,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.86,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.49,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.68,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.26,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.56,
            "range": "±75.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.26,
            "range": "±1.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.76,
            "range": "±102.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.22,
            "range": "±85.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "roundtrip write/subscribe/get",
            "value": 107.82,
            "range": "±433.3%",
            "unit": "ops/sec",
            "extra": "55 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.09,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 10",
            "value": 9.31,
            "range": "±20.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 100",
            "value": 9.78,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription 1000",
            "value": 9.48,
            "range": "±25.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "subscription setup 10",
            "value": 347.31,
            "range": "±67.9%",
            "unit": "ops/sec",
            "extra": "174 samples"
          },
          {
            "name": "subscription setup 100",
            "value": 291.07,
            "range": "±156.7%",
            "unit": "ops/sec",
            "extra": "146 samples"
          },
          {
            "name": "subscription setup 1000",
            "value": 237.52,
            "range": "±123.7%",
            "unit": "ops/sec",
            "extra": "119 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.72,
            "range": "±18.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.6,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.08,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4.05,
            "range": "±7.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±350.0%",
            "unit": "MB/s",
            "extra": "414 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 728.78,
            "range": "±219.4%",
            "unit": "MB/s",
            "extra": "71 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±575.0%",
            "unit": "MB/s",
            "extra": "610 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1479.64,
            "range": "±469.7%",
            "unit": "MB/s",
            "extra": "142 samples"
          },
          {
            "name": "[MemStore] roundtrip write/subscribe/get",
            "value": 1692.28,
            "range": "±1433.3%",
            "unit": "ops/sec",
            "extra": "848 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.7,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.63,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] subscription 10",
            "value": 114.67,
            "range": "±104.8%",
            "unit": "ops/sec",
            "extra": "58 samples"
          },
          {
            "name": "[MemStore] subscription 100",
            "value": 116.55,
            "range": "±65.1%",
            "unit": "ops/sec",
            "extra": "59 samples"
          },
          {
            "name": "[MemStore] subscription 1000",
            "value": 97.26,
            "range": "±111.3%",
            "unit": "ops/sec",
            "extra": "49 samples"
          },
          {
            "name": "[MemStore] subscription setup 10",
            "value": 1358.64,
            "range": "±214.3%",
            "unit": "ops/sec",
            "extra": "680 samples"
          },
          {
            "name": "[MemStore] subscription setup 100",
            "value": 1146.62,
            "range": "±500.0%",
            "unit": "ops/sec",
            "extra": "574 samples"
          },
          {
            "name": "[MemStore] subscription setup 1000",
            "value": 571.43,
            "range": "±341.2%",
            "unit": "ops/sec",
            "extra": "286 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "61ffb2bff35c00342e52d2542ac1ec0b57dbb859",
          "message": "Adds new benchmarkWriteSubRead test and takes out some old no longer\napplicable benchmarks.\n\nThis new benchmark directly reflects our perf envelope goal for\nsubscriptions.\n\nUnsurprisingly, currently Replicache is almost perfectly linear on\nthis metric with total cache size.",
          "timestamp": "2021-10-23T16:49:07-10:00",
          "tree_id": "682f1c761b0d585b1e46470fd9e77277443e7a8f",
          "url": "https://github.com/rocicorp/replicache/commit/61ffb2bff35c00342e52d2542ac1ec0b57dbb859"
        },
        "date": 1635043907287,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.23,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.75,
            "range": "±16.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.7,
            "range": "±25.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±22.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.23,
            "range": "±74.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.12,
            "range": "±78.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.43,
            "range": "±52.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.22,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.79,
            "range": "±27.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.1,
            "range": "±4.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 11.47,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.13,
            "range": "±14.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 0.89,
            "range": "±0.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.41,
            "range": "±26.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.3,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.24,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4,
            "range": "±22.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±358.3%",
            "unit": "MB/s",
            "extra": "411 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±217.6%",
            "unit": "MB/s",
            "extra": "70 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±725.0%",
            "unit": "MB/s",
            "extra": "600 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1436.12,
            "range": "±426.5%",
            "unit": "MB/s",
            "extra": "135 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 7.83,
            "range": "±53.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.65,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 26.72,
            "range": "±6.2%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 6.03,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 1.52,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "8fe1261ae527f80e2f0db7f69d46a44390c0cd5f",
          "message": "Create a randomObject instead of randomString. The performance of\nthe test is very sensitive to number of keys in the object. I chose\n16 as that seemed like a reasonable 90th pct of fields.",
          "timestamp": "2021-10-23T17:23:30-10:00",
          "tree_id": "4caa6bb5ed9ff3836a0ae0d29e1d064d7b122fe1",
          "url": "https://github.com/rocicorp/replicache/commit/8fe1261ae527f80e2f0db7f69d46a44390c0cd5f"
        },
        "date": 1635046063071,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 8.68,
            "range": "±17.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.65,
            "range": "±410.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.65,
            "range": "±38.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±213.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.73,
            "range": "±94.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 5.87,
            "range": "±71.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.79,
            "range": "±76.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 5.87,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.24,
            "range": "±300.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.04,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.53,
            "range": "±619.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 2.56,
            "range": "±26.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 0.72,
            "range": "±1.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.45,
            "range": "±20.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.47,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.14,
            "range": "±362.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.97,
            "range": "±225.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±358.3%",
            "unit": "MB/s",
            "extra": "413 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 739.82,
            "range": "±142.4%",
            "unit": "MB/s",
            "extra": "72 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±737.5%",
            "unit": "MB/s",
            "extra": "599 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1479.64,
            "range": "±312.1%",
            "unit": "MB/s",
            "extra": "141 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.75,
            "range": "±5.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.59,
            "range": "±7.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 23.49,
            "range": "±27.6%",
            "unit": "ops/sec",
            "extra": "12 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.22,
            "range": "±367.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 1.26,
            "range": "±12.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "213511f3d1a745468bb90c029f01d174be1e5f74",
          "message": "Construct random data inside benchmark rather than outside.\n\nDoing it outside was slowing down pageload of the benchmark runner\nitself. Note that we still construct random data outside the\nmeasurement window.",
          "timestamp": "2021-10-23T17:39:50-10:00",
          "tree_id": "f77dd9ccff304fd831d9a4542b2c93428031288c",
          "url": "https://github.com/rocicorp/replicache/commit/213511f3d1a745468bb90c029f01d174be1e5f74"
        },
        "date": 1635046931995,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.72,
            "range": "±11.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.47,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.66,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.29,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.71,
            "range": "±77.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.12,
            "range": "±83.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.63,
            "range": "±77.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.1,
            "range": "±77.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 5.14,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.09,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 9.16,
            "range": "±34.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 2.54,
            "range": "±6.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 0.74,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.34,
            "range": "±254.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.27,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.22,
            "range": "±12.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4.07,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±800.0%",
            "unit": "MB/s",
            "extra": "404 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 718.06,
            "range": "±211.8%",
            "unit": "MB/s",
            "extra": "70 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±1137.5%",
            "unit": "MB/s",
            "extra": "599 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1479.64,
            "range": "±506.1%",
            "unit": "MB/s",
            "extra": "140 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.68,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.65,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 24.09,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "13 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.41,
            "range": "±29.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 1.31,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "340082016830608f21803477aefe28144a9c4749",
          "message": "tests: Add timings to perf output (#623)\n\nUsing performance.mark/measure we get UI hints for Dev Tools Performance\r\ntab where measuring is done.",
          "timestamp": "2021-10-26T10:06:20-07:00",
          "tree_id": "e5be3f9648253f66b6c453418f3a4b6e4b047bb7",
          "url": "https://github.com/rocicorp/replicache/commit/340082016830608f21803477aefe28144a9c4749"
        },
        "date": 1635268132585,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 7.91,
            "range": "±10.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 6.5,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 4.63,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 3.14,
            "range": "±42.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 6.19,
            "range": "±72.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 6.26,
            "range": "±4.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 6.1,
            "range": "±79.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 6.17,
            "range": "±90.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.99,
            "range": "±7.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 1.08,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 9.54,
            "range": "±16.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 2.52,
            "range": "±7.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 0.74,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 13.47,
            "range": "±25.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 13.45,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 6.05,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 4,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 813.8,
            "range": "±375.0%",
            "unit": "MB/s",
            "extra": "413 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 707.65,
            "range": "±139.1%",
            "unit": "MB/s",
            "extra": "69 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 1220.7,
            "range": "±587.5%",
            "unit": "MB/s",
            "extra": "599 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 1356.34,
            "range": "±422.2%",
            "unit": "MB/s",
            "extra": "130 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 8.23,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.66,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 23.57,
            "range": "±14.3%",
            "unit": "ops/sec",
            "extra": "12 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.31,
            "range": "±29.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 1.27,
            "range": "±30.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09611de2b798d2a4bc25e783186b2baa95601c42",
          "message": "B+ Tree (#610)\n\nThis adds a B+Tree that we use instead of the prolly tree. The old prolly tree was not actually using a prolly tree but a flat array of entries. That meant that we read and wrote all the data on every transaction which of course is not very fast.\r\n\r\nWith a B+Tree we only load the parts of the Map that you are interested in.\r\n\r\nThe current target chunk size is 8kb (min is 8kb and max is 16kb)\r\n\r\nFixes #596",
          "timestamp": "2021-10-26T10:11:43-07:00",
          "tree_id": "c46934e11da5f1569e330d59dc23e7e8a52ecefe",
          "url": "https://github.com/rocicorp/replicache/commit/09611de2b798d2a4bc25e783186b2baa95601c42"
        },
        "date": 1635268620195,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.1,
            "range": "±18.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.25,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.59,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.79,
            "range": "±12.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 10.86,
            "range": "±640.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 10.55,
            "range": "±1082.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.19,
            "range": "±656.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.45,
            "range": "±1072.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.94,
            "range": "±8.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.58,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 11.38,
            "range": "±13.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.25,
            "range": "±10.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.39,
            "range": "±22.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.49,
            "range": "±219.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.22,
            "range": "±21.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±21.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.3,
            "range": "±20.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±169.7%",
            "unit": "MB/s",
            "extra": "146 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 215.1,
            "range": "±116.3%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 465.03,
            "range": "±281.0%",
            "unit": "MB/s",
            "extra": "215 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 369.91,
            "range": "±140.2%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.36,
            "range": "±21.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.97,
            "range": "±16.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 193.77,
            "range": "±322.4%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 29.99,
            "range": "±315.9%",
            "unit": "ops/sec",
            "extra": "16 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 79.26,
            "range": "±50.4%",
            "unit": "ops/sec",
            "extra": "40 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "b3db7475593a152462498ccc5d9a236ff7fe3ef4",
          "message": "chore: Update comment re the RWLock in BTreeWrite",
          "timestamp": "2021-10-26T13:21:30-07:00",
          "tree_id": "ca27729c05efa0c0937c5b04e5f5bae298a1a3d5",
          "url": "https://github.com/rocicorp/replicache/commit/b3db7475593a152462498ccc5d9a236ff7fe3ef4"
        },
        "date": 1635280060427,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.96,
            "range": "±22.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.23,
            "range": "±40.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.45,
            "range": "±12.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.82,
            "range": "±11.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.32,
            "range": "±664.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 10.98,
            "range": "±1120.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.83,
            "range": "±630.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.83,
            "range": "±1097.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.97,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.59,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.56,
            "range": "±20.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.29,
            "range": "±13.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.05,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.65,
            "range": "±284.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.48,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.84,
            "range": "±27.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±19.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±168.8%",
            "unit": "MB/s",
            "extra": "149 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 212.3,
            "range": "±73.9%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±272.7%",
            "unit": "MB/s",
            "extra": "214 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 375.6,
            "range": "±213.1%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.34,
            "range": "±15.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.98,
            "range": "±8.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.98,
            "range": "±268.7%",
            "unit": "ops/sec",
            "extra": "99 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 25.98,
            "range": "±67.8%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 77.63,
            "range": "±46.0%",
            "unit": "ops/sec",
            "extra": "39 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "b57255033fc227b91f305b590147517898d6077c",
          "message": "refactor: Remove an async for Commit newImpl",
          "timestamp": "2021-10-26T16:02:44-07:00",
          "tree_id": "dd9808ca16f9c4b0089697eed2d1077926f737f9",
          "url": "https://github.com/rocicorp/replicache/commit/b57255033fc227b91f305b590147517898d6077c"
        },
        "date": 1635289686256,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 4.85,
            "range": "±13.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.24,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.42,
            "range": "±31.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.83,
            "range": "±14.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 10.13,
            "range": "±571.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 10.55,
            "range": "±1071.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.63,
            "range": "±668.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 10.62,
            "range": "±1067.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.94,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.59,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.86,
            "range": "±18.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.3,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 2.89,
            "range": "±23.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.96,
            "range": "±242.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.39,
            "range": "±35.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.75,
            "range": "±23.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±21.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 315.02,
            "range": "±183.9%",
            "unit": "MB/s",
            "extra": "151 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 212.3,
            "range": "±80.4%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 465.03,
            "range": "±323.8%",
            "unit": "MB/s",
            "extra": "215 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 384.47,
            "range": "±263.8%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.36,
            "range": "±13.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.98,
            "range": "±9.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 193.5,
            "range": "±246.9%",
            "unit": "ops/sec",
            "extra": "97 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 25.36,
            "range": "±119.6%",
            "unit": "ops/sec",
            "extra": "13 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 80.6,
            "range": "±42.6%",
            "unit": "ops/sec",
            "extra": "41 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cc2bbeb29ad954f754613eb7bfa23ac965326fb4",
          "message": "fix!: Do not send push or pull requests when pushURL/pullURL are not provided (#626)\n\nUpdates `Replicache`s logic to not send push requests when `ReplicacheOptions.pushURL` is not provided (unless `ReplicacheOptions.pusher` is provided), and similarly to not send pull requests when `ReplicacheOptions.pullURL` is not provided (unless `ReplicacheOptions.puller` is provided).\r\n\r\nImplementation uses the null object pattern , using a `NullConnectionLoop` when the corresponding url is not specified.\r\n\r\nThis fixes an issue where push and pull requests were being sent in the performance tests, unintentionally impacting the timing results. \r\n\r\nThis made a very large difference in the persistent store tests for read and scan. \r\n\r\nPrior to this change\r\n```\r\nread tx 1024x1000 x 9.74 MB/s ±78.9% (7 runs sampled)\r\nread tx 1024x5000 x 9.05 MB/s ±83.0% (5 runs sampled)\r\nscan 1024x1000 x 9.84 MB/s ±80.2% (8 runs sampled)\r\nscan 1024x5000 x 57.11 MB/s ±593.0% (5 runs sampled)\r\n```\r\n\r\nAfter this change\r\n```\r\nread tx 1024x1000 x 70.77 MB/s ±37.0% (35 runs sampled)\r\nread tx 1024x5000 x 85.97 MB/s ±36.4% (9 runs sampled)\r\nscan 1024x1000 x 72.34 MB/s ±66.7% (36 runs sampled)\r\nscan 1024x5000 x 95.74 MB/s ±52.9% (10 runs sampled)\r\n```\r\n\r\nCloses #625",
          "timestamp": "2021-10-26T17:29:31-07:00",
          "tree_id": "665754cda05fe3ea9b35931d33cc288fb7bec070",
          "url": "https://github.com/rocicorp/replicache/commit/cc2bbeb29ad954f754613eb7bfa23ac965326fb4"
        },
        "date": 1635294847873,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.42,
            "range": "±27.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.59,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.38,
            "range": "±10.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.9,
            "range": "±19.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 10.98,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.21,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.96,
            "range": "±13.6%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.52,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.07,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±6.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 11.99,
            "range": "±16.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.44,
            "range": "±14.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.18,
            "range": "±23.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.05,
            "range": "±69.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.33,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.72,
            "range": "±21.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.31,
            "range": "±24.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±145.5%",
            "unit": "MB/s",
            "extra": "144 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 211.38,
            "range": "±72.3%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 465.03,
            "range": "±271.4%",
            "unit": "MB/s",
            "extra": "215 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 384.47,
            "range": "±133.1%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.27,
            "range": "±16.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.93,
            "range": "±7.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 191.66,
            "range": "±281.6%",
            "unit": "ops/sec",
            "extra": "96 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 46.95,
            "range": "±18.9%",
            "unit": "ops/sec",
            "extra": "24 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 59.31,
            "range": "±225.4%",
            "unit": "ops/sec",
            "extra": "30 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b09a504cced136f6ea3bfebea4016b8abfc03c25",
          "message": "refactor: Use JSON specific hash function (#611)\n\nCloses #605",
          "timestamp": "2021-10-27T00:43:07Z",
          "tree_id": "216baa16ee606448a7be50d5cbfa2fd3e666e837",
          "url": "https://github.com/rocicorp/replicache/commit/b09a504cced136f6ea3bfebea4016b8abfc03c25"
        },
        "date": 1635295683206,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.62,
            "range": "±33.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.57,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.64,
            "range": "±13.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.06,
            "range": "±23.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.1,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.45,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.54,
            "range": "±18.2%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.67,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.09,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±5.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.86,
            "range": "±17.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.31,
            "range": "±12.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3,
            "range": "±40.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.58,
            "range": "±131.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 12.31,
            "range": "±35.1%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.45,
            "range": "±49.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.78,
            "range": "±46.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 168.37,
            "range": "±120.7%",
            "unit": "MB/s",
            "extra": "82 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 116.26,
            "range": "±35.0%",
            "unit": "MB/s",
            "extra": "12 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±259.1%",
            "unit": "MB/s",
            "extra": "209 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 364.39,
            "range": "±114.2%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 11.28,
            "range": "±21.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.17,
            "range": "±16.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 76.88,
            "range": "±227.9%",
            "unit": "ops/sec",
            "extra": "39 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 42.59,
            "range": "±30.6%",
            "unit": "ops/sec",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 41.55,
            "range": "±20.3%",
            "unit": "ops/sec",
            "extra": "21 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "90fd3e656099f03a314dcb73569ca57fee3adb56",
          "message": "refactor: Remove a non null assertion",
          "timestamp": "2021-10-26T17:49:16-07:00",
          "tree_id": "d99c373075f3aa8d7fdeeaad20548fabf4170568",
          "url": "https://github.com/rocicorp/replicache/commit/90fd3e656099f03a314dcb73569ca57fee3adb56"
        },
        "date": 1635296043227,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.97,
            "range": "±36.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.78,
            "range": "±11.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.79,
            "range": "±13.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.08,
            "range": "±24.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.42,
            "range": "±7.1%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.23,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.91,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.41,
            "range": "±11.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.17,
            "range": "±7.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 11.07,
            "range": "±44.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.43,
            "range": "±14.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 2.92,
            "range": "±33.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.67,
            "range": "±267.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 12.97,
            "range": "±75.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.73,
            "range": "±34.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.76,
            "range": "±38.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 238.19,
            "range": "±122.0%",
            "unit": "MB/s",
            "extra": "118 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 109.97,
            "range": "±32.4%",
            "unit": "MB/s",
            "extra": "11 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 424.59,
            "range": "±300.0%",
            "unit": "MB/s",
            "extra": "203 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 367.13,
            "range": "±121.1%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.92,
            "range": "±26.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.18,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 80,
            "range": "±241.3%",
            "unit": "ops/sec",
            "extra": "40 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 43.41,
            "range": "±42.2%",
            "unit": "ops/sec",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 39.15,
            "range": "±160.2%",
            "unit": "ops/sec",
            "extra": "20 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "b1a1774c3e0f3955ad7cb65e3b34d424d3b1e636",
          "message": "Revert \"refactor: Use JSON specific hash function (#611)\"\n\nThis reverts commit b09a504cced136f6ea3bfebea4016b8abfc03c25.\n\nPerf regression",
          "timestamp": "2021-10-26T17:50:25-07:00",
          "tree_id": "af1c80df307e1671b10d134f8041625d56b69d9d",
          "url": "https://github.com/rocicorp/replicache/commit/b1a1774c3e0f3955ad7cb65e3b34d424d3b1e636"
        },
        "date": 1635296292427,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.56,
            "range": "±28.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.43,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.47,
            "range": "±10.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±19.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.57,
            "range": "±15.4%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.19,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.85,
            "range": "±22.6%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.56,
            "range": "±11.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.06,
            "range": "±7.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.96,
            "range": "±22.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.46,
            "range": "±13.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.32,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.98,
            "range": "±71.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.74,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.78,
            "range": "±20.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.22,
            "range": "±16.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 287.22,
            "range": "±167.6%",
            "unit": "MB/s",
            "extra": "140 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 214.16,
            "range": "±74.1%",
            "unit": "MB/s",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±231.8%",
            "unit": "MB/s",
            "extra": "211 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 375.6,
            "range": "±193.8%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.33,
            "range": "±14.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.94,
            "range": "±11.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 189.77,
            "range": "±279.6%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 35.61,
            "range": "±193.5%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 49.08,
            "range": "±202.2%",
            "unit": "ops/sec",
            "extra": "25 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "78e9a5194ef65487dd017cd1466d356b2eb819f0",
          "message": "chore: remove debug console log statement from replicache.test.ts (#631)",
          "timestamp": "2021-10-26T18:31:17-07:00",
          "tree_id": "54ab9bf8a7f296575e015c69fe668f5b7e22f7fa",
          "url": "https://github.com/rocicorp/replicache/commit/78e9a5194ef65487dd017cd1466d356b2eb819f0"
        },
        "date": 1635298562963,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.36,
            "range": "±29.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.58,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.51,
            "range": "±11.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.9,
            "range": "±14.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.44,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 11.96,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.36,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.1,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.05,
            "range": "±6.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.6,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 12.53,
            "range": "±12.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.6,
            "range": "±11.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.1,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.7,
            "range": "±215.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.98,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.84,
            "range": "±21.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.26,
            "range": "±23.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±360.6%",
            "unit": "MB/s",
            "extra": "145 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 214.16,
            "range": "±74.1%",
            "unit": "MB/s",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±236.4%",
            "unit": "MB/s",
            "extra": "214 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 378.51,
            "range": "±196.1%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.17,
            "range": "±17.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.93,
            "range": "±8.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 195.77,
            "range": "±281.2%",
            "unit": "ops/sec",
            "extra": "98 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 41.22,
            "range": "±198.1%",
            "unit": "ops/sec",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 71.66,
            "range": "±220.3%",
            "unit": "ops/sec",
            "extra": "36 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "02310a4e59a96df3fe3de7258ddf11c1bd36edc1",
          "message": "Update indexes incrementally after pull.\n\nFixes #601",
          "timestamp": "2021-10-26T20:45:46-10:00",
          "tree_id": "05208bcd3ccb030e872a27d8fcb8ea91b98030f9",
          "url": "https://github.com/rocicorp/replicache/commit/02310a4e59a96df3fe3de7258ddf11c1bd36edc1"
        },
        "date": 1635317442265,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.7,
            "range": "±30.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.6,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.53,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.74,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.82,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.47,
            "range": "±10.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.86,
            "range": "±14.9%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.29,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.05,
            "range": "±6.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.41,
            "range": "±17.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.54,
            "range": "±15.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.1,
            "range": "±24.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.86,
            "range": "±213.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.31,
            "range": "±23.9%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.75,
            "range": "±32.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.25,
            "range": "±21.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±131.2%",
            "unit": "MB/s",
            "extra": "150 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 215.1,
            "range": "±68.3%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±254.5%",
            "unit": "MB/s",
            "extra": "213 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 381.47,
            "range": "±201.6%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.39,
            "range": "±12.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.92,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.75,
            "range": "±226.5%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 42.89,
            "range": "±192.5%",
            "unit": "ops/sec",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 77.95,
            "range": "±41.4%",
            "unit": "ops/sec",
            "extra": "39 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ba39583630a9c491943ccd03cb1bd0dfab1d1e30",
          "message": "feat!: Expose clientID on ReadTransaction (#629)\n\nExposes clientID on ReadTransaction (and subclasses, e.g. WriteTransaction, IndexTransaction, etc).\r\n\r\nThis change was previously reverted due to it causing perf test regressions (976bf98, 4da3f52).  The\r\nunderlying cause of those regressions was addressed in commit cc2bbeb.\r\n\r\nBREAKING CHANGE: Due to the new property on ReadTransaction the Replicache class no longer \r\nduck-types as a ReadTransaction (prior to 52bab5d Replicache explicitly implemented ReadTransaction).\r\nAny place where Replicache is assigned or passed as a ReadTransaction will need to be updated, most \r\nlikely to use Replicache.query.\r\n\r\nCloses #541",
          "timestamp": "2021-10-27T10:34:09-07:00",
          "tree_id": "33286a7410265e193403198e441231597f58d930",
          "url": "https://github.com/rocicorp/replicache/commit/ba39583630a9c491943ccd03cb1bd0dfab1d1e30"
        },
        "date": 1635356298785,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.78,
            "range": "±35.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.68,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.5,
            "range": "±11.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±42.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.27,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.57,
            "range": "±16.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.62,
            "range": "±8.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.07,
            "range": "±8.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.44,
            "range": "±16.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.51,
            "range": "±14.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.07,
            "range": "±22.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.01,
            "range": "±225.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.36,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.78,
            "range": "±28.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.16,
            "range": "±21.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±151.5%",
            "unit": "MB/s",
            "extra": "143 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 202.61,
            "range": "±62.7%",
            "unit": "MB/s",
            "extra": "20 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±422.7%",
            "unit": "MB/s",
            "extra": "205 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 378.51,
            "range": "±122.5%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.34,
            "range": "±12.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.93,
            "range": "±6.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.27,
            "range": "±249.0%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 42.32,
            "range": "±194.4%",
            "unit": "ops/sec",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 42.93,
            "range": "±1517.2%",
            "unit": "ops/sec",
            "extra": "23 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "aa5d02439657400edfc55d837b57ae632de537b3",
          "message": "refactor: Do not use flatbuffers for const (#633)\n\nAutomatic import failure",
          "timestamp": "2021-10-27T21:18:28Z",
          "tree_id": "c58146ba804799d144b79414ac5ce357ac6e0d34",
          "url": "https://github.com/rocicorp/replicache/commit/aa5d02439657400edfc55d837b57ae632de537b3"
        },
        "date": 1635369768953,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.68,
            "range": "±30.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.68,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.5,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.7,
            "range": "±30.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.91,
            "range": "±8.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.1,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.34,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.37,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.01,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.26,
            "range": "±23.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.32,
            "range": "±4.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.32,
            "range": "±21.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.26,
            "range": "±234.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.53,
            "range": "±22.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.48,
            "range": "±11.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±17.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±142.4%",
            "unit": "MB/s",
            "extra": "144 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 212.3,
            "range": "±70.9%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±222.7%",
            "unit": "MB/s",
            "extra": "213 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 381.47,
            "range": "±118.8%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.64,
            "range": "±12.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.95,
            "range": "±10.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 186.62,
            "range": "±249.0%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 33.26,
            "range": "±208.5%",
            "unit": "ops/sec",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 54.62,
            "range": "±213.3%",
            "unit": "ops/sec",
            "extra": "28 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "0736b6555309465733d537ae20f265b11b1cfdb1",
          "message": "Update bump instructions",
          "timestamp": "2021-10-27T15:45:06-10:00",
          "tree_id": "66737d86baee52d8891bb06e3aeda75a2209247c",
          "url": "https://github.com/rocicorp/replicache/commit/0736b6555309465733d537ae20f265b11b1cfdb1"
        },
        "date": 1635386078339,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.6,
            "range": "±28.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.68,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.59,
            "range": "±10.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.62,
            "range": "±27.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.63,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.34,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.38,
            "range": "±14.2%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.21,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.08,
            "range": "±7.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.7,
            "range": "±22.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.43,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.16,
            "range": "±15.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.4,
            "range": "±236.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.98,
            "range": "±14.6%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.88,
            "range": "±26.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±21.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±157.6%",
            "unit": "MB/s",
            "extra": "145 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 211.38,
            "range": "±64.9%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 465.03,
            "range": "±247.6%",
            "unit": "MB/s",
            "extra": "215 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 381.47,
            "range": "±118.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.39,
            "range": "±11.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.96,
            "range": "±8.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 186.99,
            "range": "±251.0%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 39.02,
            "range": "±211.4%",
            "unit": "ops/sec",
            "extra": "20 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 77.35,
            "range": "±52.0%",
            "unit": "ops/sec",
            "extra": "39 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "0fbeeb79b8a54fa2828acebf1b9988f6c63cdd27",
          "message": "Bump version to 8.0.0-beta.0.",
          "timestamp": "2021-10-27T16:17:11-10:00",
          "tree_id": "7efd88085282d9de4ccc4efdb5a2e1025ee8cec0",
          "url": "https://github.com/rocicorp/replicache/commit/0fbeeb79b8a54fa2828acebf1b9988f6c63cdd27"
        },
        "date": 1635387721713,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.69,
            "range": "±29.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.5,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.56,
            "range": "±14.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.86,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.82,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.16,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.96,
            "range": "±88.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.31,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.04,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 9.52,
            "range": "±18.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.6,
            "range": "±18.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.43,
            "range": "±24.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.86,
            "range": "±231.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.58,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.8,
            "range": "±37.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.28,
            "range": "±24.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±137.5%",
            "unit": "MB/s",
            "extra": "147 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 206.9,
            "range": "±83.5%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±240.9%",
            "unit": "MB/s",
            "extra": "212 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 378.51,
            "range": "±114.7%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.4,
            "range": "±14.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.9,
            "range": "±4.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 180.63,
            "range": "±247.1%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 41.72,
            "range": "±181.2%",
            "unit": "ops/sec",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 74.36,
            "range": "±50.7%",
            "unit": "ops/sec",
            "extra": "38 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6fff82be3a0e787b65a2a873c416255140a1ac2a",
          "message": "refactor: refs is always passed to new Chunk (#640)",
          "timestamp": "2021-10-28T22:53:48Z",
          "tree_id": "3d54955909e670938ceb69948f76fd175d6758d5",
          "url": "https://github.com/rocicorp/replicache/commit/6fff82be3a0e787b65a2a873c416255140a1ac2a"
        },
        "date": 1635461911914,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.71,
            "range": "±30.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.62,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.42,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.85,
            "range": "±21.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12,
            "range": "±9.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 11.99,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.87,
            "range": "±24.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.21,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.02,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.6,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 9.99,
            "range": "±22.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.59,
            "range": "±19.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.17,
            "range": "±18.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.3,
            "range": "±69.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.7,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.8,
            "range": "±26.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.29,
            "range": "±22.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±145.5%",
            "unit": "MB/s",
            "extra": "144 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 209.56,
            "range": "±97.4%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±245.5%",
            "unit": "MB/s",
            "extra": "211 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 384.47,
            "range": "±120.5%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.59,
            "range": "±12.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.97,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 186.77,
            "range": "±254.0%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 39.63,
            "range": "±192.9%",
            "unit": "ops/sec",
            "extra": "20 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 67.99,
            "range": "±197.7%",
            "unit": "ops/sec",
            "extra": "34 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2abd7fe9f6c5dbef23e39dbb70a3dd3da202246a",
          "message": "refactor: Remove callbacks in IDB commit (#641)\n\nWe already have listeners for transaction complete/abort/error so we do\r\nnot need individual listeners for each put/delete.",
          "timestamp": "2021-10-28T22:57:39Z",
          "tree_id": "9bed5efa62d38f8875e336111a1e417a75dbbf11",
          "url": "https://github.com/rocicorp/replicache/commit/2abd7fe9f6c5dbef23e39dbb70a3dd3da202246a"
        },
        "date": 1635462197049,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.68,
            "range": "±31.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.68,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.51,
            "range": "±8.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±16.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.75,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 11.92,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.71,
            "range": "±9.5%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.23,
            "range": "±13.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.09,
            "range": "±10.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.2,
            "range": "±27.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.47,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.43,
            "range": "±23.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.56,
            "range": "±35.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.64,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.8,
            "range": "±17.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.27,
            "range": "±19.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±145.5%",
            "unit": "MB/s",
            "extra": "145 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 209.56,
            "range": "±63.9%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±236.4%",
            "unit": "MB/s",
            "extra": "213 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 378.51,
            "range": "±107.8%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.41,
            "range": "±22.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 1.96,
            "range": "±12.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 182.43,
            "range": "±249.0%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 41.84,
            "range": "±222.1%",
            "unit": "ops/sec",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 75.67,
            "range": "±57.7%",
            "unit": "ops/sec",
            "extra": "38 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "de38232b7f87c03be757f17e3feb1271fdbd7034",
          "message": "refactor: Use TextEncoder encodeInto if available (#642)\n\nWhen computing the hash we need a Uint8Array. Instead of creating a new\r\none every time we can reuse the memory across calls.",
          "timestamp": "2021-10-29T14:42:07-07:00",
          "tree_id": "6fd6e9e43a1ab5c5ef9a5f8ac9b467243c5cc5c0",
          "url": "https://github.com/rocicorp/replicache/commit/de38232b7f87c03be757f17e3feb1271fdbd7034"
        },
        "date": 1635543912715,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.02,
            "range": "±31.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.73,
            "range": "±8.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.63,
            "range": "±11.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.84,
            "range": "±14.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.65,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 11.83,
            "range": "±10.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.88,
            "range": "±14.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 11.82,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.1,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 11.19,
            "range": "±20.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.55,
            "range": "±13.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.44,
            "range": "±18.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.92,
            "range": "±72.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.4,
            "range": "±9.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.26,
            "range": "±28.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.51,
            "range": "±19.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±140.6%",
            "unit": "MB/s",
            "extra": "147 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 211.38,
            "range": "±71.0%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 465.03,
            "range": "±571.4%",
            "unit": "MB/s",
            "extra": "208 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 378.51,
            "range": "±117.8%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.9,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.11,
            "range": "±10.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 205.02,
            "range": "±287.0%",
            "unit": "ops/sec",
            "extra": "103 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 42.02,
            "range": "±338.1%",
            "unit": "ops/sec",
            "extra": "23 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 6.86,
            "range": "±94.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "de7e2bf9433418d6922d0feabb1bd3ff84b60ebc",
          "message": "fix: Allow reusing references in deepClone (#644)\n\nWe used to incorrectly mark reused objects as cycles even though there\r\nwas no cycle in the JSON value.\r\n\r\nFixes #643",
          "timestamp": "2021-10-30T17:02:15-07:00",
          "tree_id": "6b400699c4184b02f85203bd92ec2fc75de17cbf",
          "url": "https://github.com/rocicorp/replicache/commit/de7e2bf9433418d6922d0feabb1bd3ff84b60ebc"
        },
        "date": 1635638721298,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.01,
            "range": "±32.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.7,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.63,
            "range": "±12.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.94,
            "range": "±27.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.09,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.36,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.85,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.01,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.12,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 11.18,
            "range": "±22.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.64,
            "range": "±8.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.22,
            "range": "±15.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.12,
            "range": "±85.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.84,
            "range": "±13.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.31,
            "range": "±29.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.47,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±134.4%",
            "unit": "MB/s",
            "extra": "150 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 217.01,
            "range": "±74.2%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±277.3%",
            "unit": "MB/s",
            "extra": "209 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 381.47,
            "range": "±124.2%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.23,
            "range": "±18.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.11,
            "range": "±13.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.75,
            "range": "±262.3%",
            "unit": "ops/sec",
            "extra": "91 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 51.67,
            "range": "±349.4%",
            "unit": "ops/sec",
            "extra": "26 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 6.89,
            "range": "±93.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "anotherjesse@gmail.com",
            "name": "Jesse Andrews",
            "username": "anotherjesse"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "adda29fd0f0370c4f4488df5a9525bcba3a40677",
          "message": "typo",
          "timestamp": "2021-10-31T15:50:44-10:00",
          "tree_id": "1524999569dedd255ce1cde6fdb8930c7cfd3c7b",
          "url": "https://github.com/rocicorp/replicache/commit/adda29fd0f0370c4f4488df5a9525bcba3a40677"
        },
        "date": 1635731636710,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.04,
            "range": "±34.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.79,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.7,
            "range": "±18.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.88,
            "range": "±43.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.68,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.56,
            "range": "±9.7%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.4,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.09,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 11.34,
            "range": "±18.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.55,
            "range": "±10.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.24,
            "range": "±22.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11,
            "range": "±203.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.77,
            "range": "±10.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.22,
            "range": "±32.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.55,
            "range": "±25.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±121.2%",
            "unit": "MB/s",
            "extra": "145 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 217.01,
            "range": "±74.7%",
            "unit": "MB/s",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±281.8%",
            "unit": "MB/s",
            "extra": "210 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 381.47,
            "range": "±121.1%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.24,
            "range": "±17.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.12,
            "range": "±14.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 183.08,
            "range": "±260.8%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 39.03,
            "range": "±334.4%",
            "unit": "ops/sec",
            "extra": "20 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 16.16,
            "range": "±1609.7%",
            "unit": "ops/sec",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "noah.w.gilmore@gmail.com",
            "name": "Noah Gilmore",
            "username": "noahsark769"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "b952a7487c704766c559f63eeec963d27c8ed9c1",
          "message": "Fix a typo in design.md",
          "timestamp": "2021-11-01T00:03:55-10:00",
          "tree_id": "f06f63b8e8a0bbe266ad990e16832e9ea8dd65d9",
          "url": "https://github.com/rocicorp/replicache/commit/b952a7487c704766c559f63eeec963d27c8ed9c1"
        },
        "date": 1635761215733,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.88,
            "range": "±30.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.66,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.61,
            "range": "±11.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.81,
            "range": "±50.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.21,
            "range": "±20.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.34,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.12,
            "range": "±13.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.43,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.12,
            "range": "±12.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.88,
            "range": "±22.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.58,
            "range": "±15.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.14,
            "range": "±17.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.34,
            "range": "±73.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.58,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.14,
            "range": "±27.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.53,
            "range": "±25.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±134.4%",
            "unit": "MB/s",
            "extra": "149 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 217.01,
            "range": "±72.0%",
            "unit": "MB/s",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 465.03,
            "range": "±257.1%",
            "unit": "MB/s",
            "extra": "215 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 381.47,
            "range": "±132.0%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.25,
            "range": "±20.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.12,
            "range": "±13.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 184.63,
            "range": "±260.4%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 39.68,
            "range": "±308.9%",
            "unit": "ops/sec",
            "extra": "20 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 9.82,
            "range": "±1024.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "633cbb3f84ca37987295099176d8202ba1bcd58b",
          "message": "fix: update perf tests with ops/sec units to output median rather than mean (#645)\n\nThis makes them more consistent with tests with MBs/sec output (which already use median), and should also make them more stable as results can't be greatly skewed by a small number of outliers.",
          "timestamp": "2021-11-01T10:39:37-07:00",
          "tree_id": "5e1752d149d8c865f015439d33f9e57d509ebd71",
          "url": "https://github.com/rocicorp/replicache/commit/633cbb3f84ca37987295099176d8202ba1bcd58b"
        },
        "date": 1635788564273,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.84,
            "range": "±27.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.78,
            "range": "±10.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.64,
            "range": "±15.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.96,
            "range": "±34.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.75,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.31,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.1,
            "range": "±10.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.72,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.06,
            "range": "±9.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.64,
            "range": "±4.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.56,
            "range": "±22.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.83,
            "range": "±17.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.04,
            "range": "±15.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.22,
            "range": "±68.7%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.85,
            "range": "±7.9%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.12,
            "range": "±35.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.51,
            "range": "±24.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±156.2%",
            "unit": "MB/s",
            "extra": "149 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 208.67,
            "range": "±67.9%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±240.9%",
            "unit": "MB/s",
            "extra": "209 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 381.47,
            "range": "±121.1%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.35,
            "range": "±28.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.17,
            "range": "±10.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±258.5%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 63.29,
            "range": "±313.3%",
            "unit": "ops/sec",
            "extra": "23 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 46.51,
            "range": "±984.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a38c1cb17e7111f2022aa2d722727d5190a26f0d",
          "message": "Hash opaque type (#648)\n\nUse opaque Hash type\r\n\r\nThis introduces an opaque Hash type. Now it is an error to pass a\r\nstring into a function that requires a Hash. It is also an error to pass\r\na Hash into a function that requires a string.\r\n\r\nTo go from a string to Hash, use `parse`.\r\n\r\nTo go from a Hash to a string do `String(hash)` (or `hash.toString()`,\r\n`hash + ''` etc).",
          "timestamp": "2021-11-01T12:00:18-07:00",
          "tree_id": "19d467839fe5c679c93fb8749ee13353efa59214",
          "url": "https://github.com/rocicorp/replicache/commit/a38c1cb17e7111f2022aa2d722727d5190a26f0d"
        },
        "date": 1635793417729,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 6.01,
            "range": "±36.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.72,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.67,
            "range": "±13.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.88,
            "range": "±13.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.07,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.02,
            "range": "±10.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.85,
            "range": "±13.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.38,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.13,
            "range": "±10.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.05,
            "range": "±27.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.72,
            "range": "±13.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.33,
            "range": "±25.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 12.15,
            "range": "±291.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.91,
            "range": "±12.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.08,
            "range": "±24.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.55,
            "range": "±26.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 305.18,
            "range": "±131.3%",
            "unit": "MB/s",
            "extra": "151 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 217.01,
            "range": "±72.4%",
            "unit": "MB/s",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±250.0%",
            "unit": "MB/s",
            "extra": "213 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 375.6,
            "range": "±126.2%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.37,
            "range": "±19.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.15,
            "range": "±11.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±234.6%",
            "unit": "ops/sec",
            "extra": "94 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 64.94,
            "range": "±322.7%",
            "unit": "ops/sec",
            "extra": "23 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 70.42,
            "range": "±1511.3%",
            "unit": "ops/sec",
            "extra": "10 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e279d25a4adc44a3a792399311df5446e289d03c",
          "message": "refactor: Remove allocation in deepEqual (#650)",
          "timestamp": "2021-11-01T22:19:58Z",
          "tree_id": "a3b5ee804e3371366a8c4ef1abbcc2203bbfb7ba",
          "url": "https://github.com/rocicorp/replicache/commit/e279d25a4adc44a3a792399311df5446e289d03c"
        },
        "date": 1635805387107,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.89,
            "range": "±27.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.72,
            "range": "±8.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.67,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.93,
            "range": "±26.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.24,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.46,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.33,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.02,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.16,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.64,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 12.29,
            "range": "±42.5%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.69,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.26,
            "range": "±16.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.06,
            "range": "±257.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 12.04,
            "range": "±38.8%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.29,
            "range": "±43.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.53,
            "range": "±23.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±142.4%",
            "unit": "MB/s",
            "extra": "147 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 216.05,
            "range": "±69.0%",
            "unit": "MB/s",
            "extra": "21 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±227.3%",
            "unit": "MB/s",
            "extra": "213 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 387.52,
            "range": "±133.3%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.14,
            "range": "±15.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.19,
            "range": "±14.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±274.0%",
            "unit": "ops/sec",
            "extra": "95 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 66.67,
            "range": "±323.3%",
            "unit": "ops/sec",
            "extra": "24 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 46.73,
            "range": "±1016.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dd7a634e854dce24f2997976da4363bf789c07c1",
          "message": "refactor: Remove allocation in getSizeOfValue (#651)",
          "timestamp": "2021-11-01T22:22:37Z",
          "tree_id": "c7e5aba800a79b7c4867c33a23b46b46ecf1624a",
          "url": "https://github.com/rocicorp/replicache/commit/dd7a634e854dce24f2997976da4363bf789c07c1"
        },
        "date": 1635805565410,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.91,
            "range": "±35.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.72,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.6,
            "range": "±10.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.02,
            "range": "±18.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.87,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.45,
            "range": "±10.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.44,
            "range": "±16.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.34,
            "range": "±14.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.15,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.64,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.3,
            "range": "±24.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.4,
            "range": "±12.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.65,
            "range": "±17.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.87,
            "range": "±63.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.02,
            "range": "±12.9%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.16,
            "range": "±25.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.46,
            "range": "±17.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 295.93,
            "range": "±145.5%",
            "unit": "MB/s",
            "extra": "145 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 216.05,
            "range": "±66.4%",
            "unit": "MB/s",
            "extra": "22 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 465.03,
            "range": "±242.9%",
            "unit": "MB/s",
            "extra": "215 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 384.47,
            "range": "±126.0%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.31,
            "range": "±13.8%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.19,
            "range": "±13.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±262.3%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 65.36,
            "range": "±317.0%",
            "unit": "ops/sec",
            "extra": "23 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 47.17,
            "range": "±986.3%",
            "unit": "ops/sec",
            "extra": "6 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ef13e52f70579cdc1c2cec0a805fdc20610e809a",
          "message": "refactor: Inline stringCompare into binarySearch (#652)",
          "timestamp": "2021-11-01T22:26:45Z",
          "tree_id": "8f0a526d19eff8ae8beef0aa4f5d10b3727014ae",
          "url": "https://github.com/rocicorp/replicache/commit/ef13e52f70579cdc1c2cec0a805fdc20610e809a"
        },
        "date": 1635805788911,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.89,
            "range": "±32.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.7,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.73,
            "range": "±13.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±20.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.32,
            "range": "±19.4%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.52,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 11.91,
            "range": "±11.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.7,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.15,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.83,
            "range": "±23.1%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.59,
            "range": "±11.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.81,
            "range": "±23.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.01,
            "range": "±80.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.53,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.23,
            "range": "±27.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.58,
            "range": "±24.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 336.75,
            "range": "±162.1%",
            "unit": "MB/s",
            "extra": "164 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 241.72,
            "range": "±83.2%",
            "unit": "MB/s",
            "extra": "24 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 424.59,
            "range": "±252.2%",
            "unit": "MB/s",
            "extra": "205 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 384.47,
            "range": "±124.4%",
            "unit": "MB/s",
            "extra": "38 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.63,
            "range": "±17.2%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.22,
            "range": "±11.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±253.8%",
            "unit": "ops/sec",
            "extra": "92 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 64.94,
            "range": "±316.2%",
            "unit": "ops/sec",
            "extra": "20 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 72.99,
            "range": "±1548.9%",
            "unit": "ops/sec",
            "extra": "9 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "45905ac67a409f2f89fd9b51829f2da50cb1d7a4",
          "message": "refactor: remove dead code iter-util (#653)",
          "timestamp": "2021-11-01T22:39:35Z",
          "tree_id": "8c7aab837edcbc2a564e8f69996e57e8d6df88f5",
          "url": "https://github.com/rocicorp/replicache/commit/45905ac67a409f2f89fd9b51829f2da50cb1d7a4"
        },
        "date": 1635806555869,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.78,
            "range": "±32.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.7,
            "range": "±7.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.52,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.91,
            "range": "±17.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.34,
            "range": "±7.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.44,
            "range": "±13.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.04,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.35,
            "range": "±10.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.18,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.63,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.79,
            "range": "±18.9%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.49,
            "range": "±13.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.33,
            "range": "±12.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.12,
            "range": "±247.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 11.37,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.21,
            "range": "±26.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.56,
            "range": "±21.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 336.75,
            "range": "±162.1%",
            "unit": "MB/s",
            "extra": "164 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 238.19,
            "range": "±90.2%",
            "unit": "MB/s",
            "extra": "24 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±236.4%",
            "unit": "MB/s",
            "extra": "208 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 372.73,
            "range": "±116.8%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.54,
            "range": "±17.6%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.21,
            "range": "±13.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±267.9%",
            "unit": "ops/sec",
            "extra": "93 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 65.79,
            "range": "±338.8%",
            "unit": "ops/sec",
            "extra": "24 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 56.5,
            "range": "±1210.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "9474eb1d47d34f275535336807c00ff23e07ba2d",
          "message": "chore: Remove unused devDependency\n\nIt kept getting inserted into the code because of VS Code's autocomplete",
          "timestamp": "2021-11-02T10:42:43-07:00",
          "tree_id": "89bec14d59d89924ec6a28387e0050b68a1a949a",
          "url": "https://github.com/rocicorp/replicache/commit/9474eb1d47d34f275535336807c00ff23e07ba2d"
        },
        "date": 1635875217684,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.68,
            "range": "±37.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.66,
            "range": "±12.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.61,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.92,
            "range": "±48.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 10.9,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 11.35,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 10.91,
            "range": "±12.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.4,
            "range": "±11.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.06,
            "range": "±6.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.61,
            "range": "±6.7%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.6,
            "range": "±17.0%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.56,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.3,
            "range": "±31.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 10.72,
            "range": "±264.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 10.6,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "6 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.16,
            "range": "±29.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.45,
            "range": "±18.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 325.52,
            "range": "±160.0%",
            "unit": "MB/s",
            "extra": "160 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 226.06,
            "range": "±77.3%",
            "unit": "MB/s",
            "extra": "23 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±254.5%",
            "unit": "MB/s",
            "extra": "203 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 369.91,
            "range": "±124.2%",
            "unit": "MB/s",
            "extra": "36 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.93,
            "range": "±20.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.13,
            "range": "±12.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±313.0%",
            "unit": "ops/sec",
            "extra": "89 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 63.69,
            "range": "±345.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 50.51,
            "range": "±1080.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "55bbb2578de729f5071726bee166f01f99f681fe",
          "message": "chore: Forgot the package-lock",
          "timestamp": "2021-11-02T10:44:07-07:00",
          "tree_id": "8c1f84238afd49da6c7c5fca918d5aac9fb1bf66",
          "url": "https://github.com/rocicorp/replicache/commit/55bbb2578de729f5071726bee166f01f99f681fe"
        },
        "date": 1635875387019,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.9,
            "range": "±28.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.68,
            "range": "±7.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.66,
            "range": "±10.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2,
            "range": "±21.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 11.82,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 11.79,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.21,
            "range": "±10.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.64,
            "range": "±7.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 3.07,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.62,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 10.09,
            "range": "±24.7%",
            "unit": "ops/sec",
            "extra": "6 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.35,
            "range": "±16.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.1,
            "range": "±12.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 11.19,
            "range": "±248.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 12.07,
            "range": "±11.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.26,
            "range": "±38.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.55,
            "range": "±26.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 325.52,
            "range": "±163.3%",
            "unit": "MB/s",
            "extra": "161 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 237.03,
            "range": "±82.0%",
            "unit": "MB/s",
            "extra": "24 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 443.89,
            "range": "±231.8%",
            "unit": "MB/s",
            "extra": "214 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 378.51,
            "range": "±120.9%",
            "unit": "MB/s",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 10.63,
            "range": "±32.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.21,
            "range": "±10.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±266.0%",
            "unit": "ops/sec",
            "extra": "90 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 63.69,
            "range": "±329.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.36,
            "range": "±92.3%",
            "unit": "ops/sec",
            "extra": "5 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4b472aa1e9a5d6ed76500ea70ec2e998d60dbe1f",
          "message": "chore: Change some perf runs to use more varied objects (#636)\n\nUse a fixed shape object with strings, boolean, numbers and null in it\r\ninstead a object of strings only.",
          "timestamp": "2021-11-02T12:03:40-07:00",
          "tree_id": "e159182d0c2221f078ff82dc9689032354123427",
          "url": "https://github.com/rocicorp/replicache/commit/4b472aa1e9a5d6ed76500ea70ec2e998d60dbe1f"
        },
        "date": 1635880142069,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.12,
            "range": "±20.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.49,
            "range": "±9.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.92,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.24,
            "range": "±0.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.12,
            "range": "±10.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.53,
            "range": "±195.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.7,
            "range": "±10.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 12.65,
            "range": "±193.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.62,
            "range": "±9.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.52,
            "range": "±46.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.88,
            "range": "±16.5%",
            "unit": "ops/sec",
            "extra": "8 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.55,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.1,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.17,
            "range": "±18.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 8.85,
            "range": "±22.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 2.23,
            "range": "±3.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 1.36,
            "range": "±3.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 279.02,
            "range": "±185.7%",
            "unit": "MB/s",
            "extra": "125 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 186.37,
            "range": "±89.3%",
            "unit": "MB/s",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 375.6,
            "range": "±238.5%",
            "unit": "MB/s",
            "extra": "169 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 297.73,
            "range": "±122.6%",
            "unit": "MB/s",
            "extra": "29 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 3.66,
            "range": "±141.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 0.75,
            "range": "±0.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±133.3%",
            "unit": "ops/sec",
            "extra": "117 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 70.92,
            "range": "±46.8%",
            "unit": "ops/sec",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 82.64,
            "range": "±1528.1%",
            "unit": "ops/sec",
            "extra": "26 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "87908ada3556051bc253d515483e3ba30874692d",
          "message": "feat: Create new perf dashboard where all measures are median ms (and thus smaller is better) (#654)\n\nThis does not get rid of the existing perf dashboard at https://rocicorp.github.io/replicache/perf/ and the alerts based on that, but rather adds a new one at https://rocicorp.github.io/replicache/perf-v2/ with corresponding alerts.  This ensures we have continuity of our benchmark data.  Once sufficient history is built up on the new dashbaord, we can clean up the old one (which will also allow some simplification/cleanup of the related code).  In the meantime we will get double alerts.\r\n\r\nThis utilizes the `customSmallerIsBetter` tool option of github-action-benchmark (see https://github.com/benchmark-action/github-action-benchmark#examples).\r\n\r\nWe have been using the `benchmarkjs` tool option, and emulating the output of that library https://github.com/bestiejs/benchmark.js, though we are not actually using the library.  Rather we are using our own custom benchmark implementation.\r\n\r\nExample JSON output:\r\n\r\n```\r\nGregorys-MacBook-Pro:replicache greg$ node perf/runner.js --format=json --run \"scan\"\r\n[\r\n  {\r\n    \"name\": \"scan 1024x1000\",\r\n    \"unit\": \"median ms\",\r\n    \"value\": 52.5,\r\n    \"range\": \"8.70\",\r\n    \"extra\": \"scan 1024x1000 50/75/90/95%=52.50/54.40/59.30/59.30 ms avg=51.34 ms (10 runs sampled)\"\r\n  },\r\n  {\r\n    \"name\": \"scan 1024x5000\",\r\n    \"unit\": \"median ms\",\r\n    \"value\": 236.5,\r\n    \"range\": \"27.50\",\r\n    \"extra\": \"scan 1024x5000 50/75/90/95%=236.50/246.40/264.00/264.00 ms avg=242.74 ms (5 runs sampled)\"\r\n  },\r\n  {\r\n    \"name\": \"[MemStore] scan 1024x1000\",\r\n    \"unit\": \"median ms\",\r\n    \"value\": 1.7000000178813934,\r\n    \"range\": \"4.10\",\r\n    \"extra\": \"[MemStore] scan 1024x1000 50/75/90/95%=1.70/2.00/2.20/2.30 ms avg=1.86 ms (269 runs sampled)\"\r\n  },\r\n  {\r\n    \"name\": \"[MemStore] scan 1024x5000\",\r\n    \"unit\": \"median ms\",\r\n    \"value\": 10.300000011920929,\r\n    \"range\": \"7.10\",\r\n    \"extra\": \"[MemStore] scan 1024x5000 50/75/90/95%=10.30/10.60/11.20/11.30 ms avg=10.53 ms (48 runs sampled)\"\r\n  }\r\n]\r\n```",
          "timestamp": "2021-11-02T19:11:53Z",
          "tree_id": "aebffe03f018e7b52440c41b9b910cca36f0c0a3",
          "url": "https://github.com/rocicorp/replicache/commit/87908ada3556051bc253d515483e3ba30874692d"
        },
        "date": 1635880664897,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.1,
            "range": "±36.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.6,
            "range": "±34.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 1.9,
            "range": "±9.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 1.24,
            "range": "±15.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.8,
            "range": "±17.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.03,
            "range": "±853.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.68,
            "range": "±10.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.4,
            "range": "±805.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 2.62,
            "range": "±43.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.53,
            "range": "±973.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.56,
            "range": "±12.4%",
            "unit": "ops/sec",
            "extra": "8 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.57,
            "range": "±16.8%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.06,
            "range": "±29.1%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.18,
            "range": "±22.3%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 8.85,
            "range": "±26.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 2.2,
            "range": "±18.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 1.35,
            "range": "±22.0%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 287.22,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "128 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 187.8,
            "range": "±22.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 375.6,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "174 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 295.93,
            "range": "±19.5%",
            "unit": "MB/s",
            "extra": "29 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 3.65,
            "range": "±394.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 0.74,
            "range": "±26.2%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "117 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 75.19,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 86.96,
            "range": "±28.9%",
            "unit": "ops/sec",
            "extra": "41 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "14ed81fdcdd8b3f2bf281ba19353ebecd84e7c56",
          "message": "chore: Fix index perf tests (#656)\n\nAn index value needs to be a string and that string cannot contain \\0\r\ncharacters.",
          "timestamp": "2021-11-02T19:32:08Z",
          "tree_id": "83cd2269af185aa3a3a636ce8efe355c72440372",
          "url": "https://github.com/rocicorp/replicache/commit/14ed81fdcdd8b3f2bf281ba19353ebecd84e7c56"
        },
        "date": 1635881831603,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.14,
            "range": "±40.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.48,
            "range": "±60.4%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 2.77,
            "range": "±37.1%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.31,
            "range": "±35.5%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.3,
            "range": "±8.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.47,
            "range": "±760.6%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.9,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.44,
            "range": "±769.7%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.36,
            "range": "±25.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.85,
            "range": "±975.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.47,
            "range": "±9.0%",
            "unit": "ops/sec",
            "extra": "8 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.46,
            "range": "±16.0%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.93,
            "range": "±14.5%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.26,
            "range": "±17.9%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 8.67,
            "range": "±15.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.53,
            "range": "±25.8%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.65,
            "range": "±48.2%",
            "unit": "MB/s",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 287.22,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "127 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 200.94,
            "range": "±17.3%",
            "unit": "MB/s",
            "extra": "20 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 336.75,
            "range": "±26.5%",
            "unit": "MB/s",
            "extra": "107 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 301.41,
            "range": "±20.4%",
            "unit": "MB/s",
            "extra": "29 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 9.9,
            "range": "±155.6%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.93,
            "range": "±63.9%",
            "unit": "ops/sec",
            "extra": "5 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±4.7%",
            "unit": "ops/sec",
            "extra": "117 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 78.74,
            "range": "±7.5%",
            "unit": "ops/sec",
            "extra": "37 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 84.03,
            "range": "±191.3%",
            "unit": "ops/sec",
            "extra": "26 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4d2eda14d0e33b230d6ff1ef3b203d40aa8abdcc",
          "message": "chore: Tweak the perf runner slightly (#655)\n\n- No need to run forever if we have enough results\r\n- Increase minRuns\r\n- Remove the 2 slowest results. JIT warmu[",
          "timestamp": "2021-11-02T19:35:19Z",
          "tree_id": "eddae060aa172239ba3b488c095c4b008218debc",
          "url": "https://github.com/rocicorp/replicache/commit/4d2eda14d0e33b230d6ff1ef3b203d40aa8abdcc"
        },
        "date": 1635882767206,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.25,
            "range": "±49.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.48,
            "range": "±16.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.04,
            "range": "±40.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.29,
            "range": "±47.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.77,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 12.84,
            "range": "±751.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.42,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.58,
            "range": "±772.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.34,
            "range": "±26.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.87,
            "range": "±1766.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.35,
            "range": "±9.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.38,
            "range": "±727.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.88,
            "range": "±69.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.73,
            "range": "±26.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 8.94,
            "range": "±17.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.9,
            "range": "±37.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.7,
            "range": "±49.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 212.3,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 180.18,
            "range": "±17.1%",
            "unit": "MB/s",
            "extra": "16 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 250.4,
            "range": "±16.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 299.56,
            "range": "±18.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 15.29,
            "range": "±24.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.96,
            "range": "±172.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±5.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 68.97,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 84.75,
            "range": "±5.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "00cbe8399d5bcf3458f528257bc785547ce79315",
          "message": "feat: Add migration code for prolly map to b+tree (#649)\n\nIssue #596",
          "timestamp": "2021-11-02T19:45:05Z",
          "tree_id": "f45c072af5d0b5544ff60bd228b2b0e460fa21bd",
          "url": "https://github.com/rocicorp/replicache/commit/00cbe8399d5bcf3458f528257bc785547ce79315"
        },
        "date": 1635883397823,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.2,
            "range": "±45.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.61,
            "range": "±90.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3,
            "range": "±48.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.32,
            "range": "±44.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.68,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.32,
            "range": "±770.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.87,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.23,
            "range": "±745.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.36,
            "range": "±31.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.87,
            "range": "±928.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.29,
            "range": "±10.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.38,
            "range": "±735.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.63,
            "range": "±83.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.33,
            "range": "±19.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 8.8,
            "range": "±15.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.84,
            "range": "±37.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.73,
            "range": "±51.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 244.14,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 190.73,
            "range": "±16.7%",
            "unit": "MB/s",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 279.02,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 301.41,
            "range": "±17.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 15.2,
            "range": "±23.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.93,
            "range": "±91.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 71.43,
            "range": "±5.6%",
            "unit": "ops/sec",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 80,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6bb1852755cdd8b4242a42dcb7520d90229bda94",
          "message": "Update HACKING.md\n\nAdd link to perf-v2",
          "timestamp": "2021-11-02T13:52:38-07:00",
          "tree_id": "15d512164aebd1442417f7daabf341ce8f9709d8",
          "url": "https://github.com/rocicorp/replicache/commit/6bb1852755cdd8b4242a42dcb7520d90229bda94"
        },
        "date": 1635887004407,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.12,
            "range": "±40.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.47,
            "range": "±70.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.02,
            "range": "±36.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.3,
            "range": "±38.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.72,
            "range": "±2.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.23,
            "range": "±758.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.63,
            "range": "±7.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.23,
            "range": "±780.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.38,
            "range": "±36.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.86,
            "range": "±2675.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 13.91,
            "range": "±12.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.44,
            "range": "±734.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.67,
            "range": "±99.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.85,
            "range": "±34.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 8.93,
            "range": "±23.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.78,
            "range": "±38.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.69,
            "range": "±51.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 232.51,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 189.26,
            "range": "±17.8%",
            "unit": "MB/s",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 63.41,
            "range": "±9.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 283.88,
            "range": "±17.6%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 15.22,
            "range": "±160.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.89,
            "range": "±291.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 69.44,
            "range": "±5.4%",
            "unit": "ops/sec",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 81.97,
            "range": "±5.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3c7164cb71593e341274623f981b699a9755be15",
          "message": "refactor: Use less allocations in B+Tree mutations (#658)",
          "timestamp": "2021-11-03T14:42:49-07:00",
          "tree_id": "f59eebe0c9dd45fe139812ef00a489560ec53bea",
          "url": "https://github.com/rocicorp/replicache/commit/3c7164cb71593e341274623f981b699a9755be15"
        },
        "date": 1635976086462,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.17,
            "range": "±45.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.73,
            "range": "±33.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.07,
            "range": "±40.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.36,
            "range": "±40.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.77,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.34,
            "range": "±780.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.8,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.47,
            "range": "±756.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.39,
            "range": "±30.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.87,
            "range": "±982.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 13.68,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.35,
            "range": "±847.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.86,
            "range": "±140.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.84,
            "range": "±27.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.27,
            "range": "±20.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.83,
            "range": "±37.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.74,
            "range": "±56.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 217.01,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 196.89,
            "range": "±19.5%",
            "unit": "MB/s",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 287.22,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 297.73,
            "range": "±18.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 14.71,
            "range": "±26.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.98,
            "range": "±564.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 73.53,
            "range": "±7.8%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 83.33,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "452b046673d38e12b8141aa16cf3f191f5359561",
          "message": "refactor: Make scan lazy (#659)\n\nWe had async iterators all the way up to ScanIterator which accumulated\r\nall the items in memory.\r\n\r\nNow we have the async iterator all the way...",
          "timestamp": "2021-11-03T22:27:23Z",
          "tree_id": "82326f3fca89663ae886583e1b3841fa84b71e01",
          "url": "https://github.com/rocicorp/replicache/commit/452b046673d38e12b8141aa16cf3f191f5359561"
        },
        "date": 1635978760629,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.16,
            "range": "±40.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.6,
            "range": "±36.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.08,
            "range": "±42.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.4,
            "range": "±57.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.82,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.38,
            "range": "±795.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.44,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.55,
            "range": "±776.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.41,
            "range": "±42.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.85,
            "range": "±938.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.45,
            "range": "±16.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.34,
            "range": "±716.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.95,
            "range": "±92.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.46,
            "range": "±39.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.14,
            "range": "±19.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.9,
            "range": "±43.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.69,
            "range": "±55.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 221.95,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 185.66,
            "range": "±18.3%",
            "unit": "MB/s",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 53.95,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 246.61,
            "range": "±16.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 14.47,
            "range": "±25.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.01,
            "range": "±290.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 208.33,
            "range": "±4.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 66.67,
            "range": "±8.5%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 86.21,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c8bb1ce087bce66ad714ec3d61c04c2dbad3229f",
          "message": "Update HACKING.md",
          "timestamp": "2021-11-03T15:33:13-07:00",
          "tree_id": "1faf3983dd555b280d20743d03076a73bd26d19a",
          "url": "https://github.com/rocicorp/replicache/commit/c8bb1ce087bce66ad714ec3d61c04c2dbad3229f"
        },
        "date": 1635979712766,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.16,
            "range": "±41.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.55,
            "range": "±22.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.05,
            "range": "±52.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.39,
            "range": "±49.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.8,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.31,
            "range": "±761.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.72,
            "range": "±11.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.36,
            "range": "±757.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.34,
            "range": "±40.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.87,
            "range": "±1749.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.33,
            "range": "±5.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.47,
            "range": "±767.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.67,
            "range": "±75.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.6,
            "range": "±23.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.27,
            "range": "±21.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.87,
            "range": "±41.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.67,
            "range": "±52.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 217.01,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 189.99,
            "range": "±18.4%",
            "unit": "MB/s",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 232.51,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 255.64,
            "range": "±16.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 14.62,
            "range": "±27.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.03,
            "range": "±239.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 212.77,
            "range": "±5.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 70.42,
            "range": "±8.3%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 87.72,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "00cb79df15ff51dddaa870756e3beff91c478944",
          "message": "refactor: Only convert scan item once (at most) (#660)\n\nWe used to generate a ScanItem from an Entry and then extract the info\r\nwe needed from the ScanItem. Now we just extract the info we need from\r\nthe Entry, which in non index scans requires no work.",
          "timestamp": "2021-11-03T22:38:09Z",
          "tree_id": "b201400029010d44ffc37f5062907300c4416617",
          "url": "https://github.com/rocicorp/replicache/commit/00cb79df15ff51dddaa870756e3beff91c478944"
        },
        "date": 1635980037015,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.15,
            "range": "±43.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.67,
            "range": "±36.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.09,
            "range": "±50.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.36,
            "range": "±47.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.72,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.58,
            "range": "±776.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.9,
            "range": "±9.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.69,
            "range": "±789.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.42,
            "range": "±36.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.88,
            "range": "±1779.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 13.7,
            "range": "±8.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.33,
            "range": "±719.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.69,
            "range": "±61.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.75,
            "range": "±41.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.29,
            "range": "±21.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.83,
            "range": "±38.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.52,
            "range": "±265.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 67.35,
            "range": "±11.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 188.53,
            "range": "±18.9%",
            "unit": "MB/s",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 217.01,
            "range": "±14.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 265.37,
            "range": "±16.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 14.27,
            "range": "±32.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.01,
            "range": "±289.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 212.77,
            "range": "±4.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 68.97,
            "range": "±7.1%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 75.76,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "2a0c7cc7cf8d5d835fb34b87715ec1368e5360b2",
          "message": "Stop alerting when old perf dashboard regresses.\n\nIt's pretty flakey and not useful info anymore.",
          "timestamp": "2021-11-03T14:07:14-10:00",
          "tree_id": "165480bf96e7a45ec10f303a1cee339fa4924e9e",
          "url": "https://github.com/rocicorp/replicache/commit/2a0c7cc7cf8d5d835fb34b87715ec1368e5360b2"
        },
        "date": 1635984761163,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 5.16,
            "range": "±42.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (dirty, indexes: 0)",
            "value": 3.56,
            "range": "±25.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 3.05,
            "range": "±43.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 2.35,
            "range": "±47.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x1000",
            "value": 12.33,
            "range": "±3.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "read tx 1024x5000",
            "value": 13.11,
            "range": "±770.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 12.68,
            "range": "±13.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x5000",
            "value": 13.62,
            "range": "±773.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x1000",
            "value": 4.35,
            "range": "±35.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 0.85,
            "range": "±1773.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 14.33,
            "range": "±15.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 4.56,
            "range": "±759.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 3.88,
            "range": "±67.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.41,
            "range": "±27.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (dirty, indexes: 0)",
            "value": 9.35,
            "range": "±21.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.93,
            "range": "±45.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.67,
            "range": "±51.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] read tx 1024x1000",
            "value": 212.3,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] read tx 1024x5000",
            "value": 186.37,
            "range": "±19.9%",
            "unit": "MB/s",
            "extra": "17 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 53.66,
            "range": "±14.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] scan 1024x5000",
            "value": 254.31,
            "range": "±16.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x1000",
            "value": 14.18,
            "range": "±119.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 2.96,
            "range": "±239.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 204.08,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 69.44,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 82.64,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "f6d029c9306ac37511ae29c2ae9e6c9dead35628",
          "message": "Spruce up the benchmarks we run by default.\n\nThis trims it down to just the MemStore versions of:\n- the write/sub/read family\n- the populate family\n- scan\n- createIndex\n\nWe remove all the IDB tests (this is not how we plan to use IDB,\nso it's irrelevant and confusing), and the read tests (does not represent\nreal-world usage).",
          "timestamp": "2021-11-03T16:56:18-10:00",
          "tree_id": "d1d7a0a3f84a31f143d484f8a0889bf15972af0f",
          "url": "https://github.com/rocicorp/replicache/commit/f6d029c9306ac37511ae29c2ae9e6c9dead35628"
        },
        "date": 1635994763871,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 208.33,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 71.94,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 81.3,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.81,
            "range": "±37.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.08,
            "range": "±52.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.77,
            "range": "±53.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 263.94,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.12,
            "range": "±87.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e7e998da4ad9de6ab442d36476079ae429ec7a94",
          "message": "Update HACKING.md",
          "timestamp": "2021-11-03T16:59:07-10:00",
          "tree_id": "b043e32e4743b6aef564334343a9c822cb75c5cf",
          "url": "https://github.com/rocicorp/replicache/commit/e7e998da4ad9de6ab442d36476079ae429ec7a94"
        },
        "date": 1635994949998,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 208.33,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 70.92,
            "range": "±7.5%",
            "unit": "ops/sec",
            "extra": "18 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 79.37,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.8,
            "range": "±41.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.02,
            "range": "±47.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.79,
            "range": "±54.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 263.94,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.1,
            "range": "±80.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2d2340227184c058bcb49ed1070bf129eb7a0385",
          "message": "fix: Correct how benchmarkWriteSubRead sets up its subscriptions and picks keys to invalidate (#657)\n\nbenchmarkWriteSubRead uses keys like:\r\nkey0, key1, key2, key3, key4, key5, key6, key7, key8, key9, key10, key11, key12, etc\r\n\r\nthe logic it uses for setting up its subscription ranges assumed the keys were sorted as above, but they are actually sorted lexicographically like:\r\nkey0, key1, key10, key11, key12, key2, key3, key4, key5, key6, key7, key8, key9, \r\n\r\n**Existing**\r\nBased on the above assumption about key ordering it used the following logic for subscriptions and invalidations\r\n\r\n_Subscriptions_\r\nscan start `k${i * keysPerSub }` limit keysWatchedPerSub, for 0 <= i < numSubsTotal \r\n\r\n_Invalidations_\r\n`k${i * keysPerSub}` for 0 <= i < numDirtySubs\r\n\r\n**New**\r\nThis change updates the logic for setting up subscriptions and picking keys to invalidate to use a sorted array of keys.\r\n\r\nThe new logic is:\r\n\r\n_Subscriptions_\r\nscan start sortedKeys[i * keysPerSub ] limit keysWatchedPerSub, for 0 <= i < numSubsTotal \r\n\r\n_Invalidations_\r\nsortedKeys[i * keysPerSub] for 0 <= i < numDirtySubs\r\n\r\n\r\nThese changes make the test performance more consistent as the data size increase.  In debugging i discovered the tests runtime mainly varies based on the sort of the keys invalidated.  The higher the invalidated keys sort order, the higher the latency.   With the old logic, the invalidated keys sort order varied a good deal based on the size of the test.   With the new code they are consistently low in the sort order (though they do increase some as numKeysPerSub increases).  \r\n\r\nWe should update these tests to invalidate a random numDirtySubs subs (rather than the first numDirtySubs in sort order) and fix scans performance.  \r\n\r\n### Perf On my M1 Max\r\n\r\n**Existing**\r\n[MemStore] writeSubRead 2MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.00/5.80/6.00/6.00 ms avg=6.34 ms (7 runs sampled)\r\n[MemStore] writeSubRead 3MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=6.20/6.40/7.70/7.70 ms avg=7.94 ms (7 runs sampled)\r\n[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=6.20/6.30/8.00/8.00 ms avg=8.13 ms (7 runs sampled)\r\n[MemStore] writeSubRead 5MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.90/6.60/8.10/8.10 ms avg=7.90 ms (7 runs sampled)\r\n[MemStore] writeSubRead 6MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=6.50/6.60/9.10/9.10 ms avg=8.56 ms (7 runs sampled)\r\n[MemStore] writeSubRead 7MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.50/5.60/7.20/7.20 ms avg=6.94 ms (7 runs sampled)\r\n[MemStore] writeSubRead 8MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.60/5.70/7.20/7.20 ms avg=7.04 ms (7 runs sampled)\r\n[MemStore] writeSubRead 9MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.10/5.50/7.20/7.20 ms avg=6.77 ms (7 runs sampled)\r\n[MemStore] writeSubRead 10MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.60/5.80/7.10/7.10 ms avg=7.19 ms (7 runs sampled)\r\n[MemStore] writeSubRead 11MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=6.30/6.70/8.70/8.70 ms avg=8.29 ms (7 runs sampled)\r\n[MemStore] writeSubRead 12MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=7.10/7.40/9.50/9.50 ms avg=9.23 ms (7 runs sampled)\r\n[MemStore] writeSubRead 13MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=4.40/4.70/5.50/5.50 ms avg=5.49 ms (7 runs sampled)\r\n[MemStore] writeSubRead 14MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.10/5.50/6.50/6.50 ms avg=6.47 ms (7 runs sampled)\r\n[MemStore] writeSubRead 15MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.00/5.80/6.40/6.40 ms avg=6.54 ms (7 runs sampled)\r\n[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=4.90/5.90/6.50/6.50 ms avg=6.61 ms (7 runs sampled)\r\n[MemStore] writeSubRead 17MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.90/6.30/7.80/7.80 ms avg=7.50 ms (7 runs sampled)\r\n[MemStore] writeSubRead 18MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=5.90/6.40/7.20/7.20 ms avg=7.33 ms (7 runs sampled)\r\n[MemStore] writeSubRead 19MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=6.00/6.80/8.00/8.00 ms avg=7.97 ms (7 runs sampled)\r\n[MemStore] writeSubRead 20MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=6.10/8.40/8.40/8.40 ms avg=8.13 ms (7 runs sampled)\r\n\r\n\r\n**New**\r\n[MemStore] writeSubRead 2MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.60/1.80/2.10/2.10 ms avg=1.97 ms (7 runs sampled)\r\n[MemStore] writeSubRead 3MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.80/2.10/2.10 ms avg=1.89 ms (7 runs sampled)\r\n[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.30/1.50/2.10/2.10 ms avg=1.76 ms (7 runs sampled)\r\n[MemStore] writeSubRead 5MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.70/2.00/2.00 ms avg=1.90 ms (7 runs sampled)\r\n[MemStore] writeSubRead 6MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.60/3.70/3.70 ms avg=2.14 ms (7 runs sampled)\r\n[MemStore] writeSubRead 7MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.50/2.10/2.10 ms avg=1.81 ms (7 runs sampled)\r\n[MemStore] writeSubRead 8MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.60/2.10/2.10 ms avg=1.86 ms (7 runs sampled)\r\n[MemStore] writeSubRead 9MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.50/2.00/2.00 ms avg=1.87 ms (7 runs sampled)\r\n[MemStore] writeSubRead 10MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.70/1.80/2.00/2.00 ms avg=1.96 ms (7 runs sampled)\r\n[MemStore] writeSubRead 11MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.50/2.20/2.20 ms avg=1.90 ms (7 runs sampled)\r\n[MemStore] writeSubRead 12MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.50/2.10/2.10 ms avg=1.81 ms (7 runs sampled)\r\n[MemStore] writeSubRead 13MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.70/2.20/2.20 ms avg=1.94 ms (7 runs sampled)\r\n[MemStore] writeSubRead 14MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.60/2.00/2.00 ms avg=1.86 ms (7 runs sampled)\r\n[MemStore] writeSubRead 15MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.70/2.10/2.10 ms avg=1.86 ms (7 runs sampled)\r\n[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.60/2.00/2.00 ms avg=1.86 ms (7 runs sampled)\r\n[MemStore] writeSubRead 17MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.50/2.20/2.20 ms avg=1.90 ms (7 runs sampled)\r\n[MemStore] writeSubRead 18MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/1.70/2.20/2.20 ms avg=1.96 ms (7 runs sampled)\r\n[MemStore] writeSubRead 19MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.60/1.80/2.10/2.10 ms avg=2.04 ms (7 runs sampled)\r\n[MemStore] writeSubRead 20MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.50/2.70/4.00/4.00 ms avg=2.39 ms (7 runs sampled)",
          "timestamp": "2021-11-04T10:39:51-07:00",
          "tree_id": "ffd273b1442335eb75a7c4575a5864fa5e80b57a",
          "url": "https://github.com/rocicorp/replicache/commit/2d2340227184c058bcb49ed1070bf129eb7a0385"
        },
        "date": 1636047779486,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±7.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.56,
            "range": "±93.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±58.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.6,
            "range": "±68.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.17,
            "range": "±88.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "883c864e984e81e2e4996a9c9aca335867f6e562",
          "message": "fix!: Remove CreateIndexDefinition.keyPrefix (#667)\n\nIt was deprecated 4 months ago\r\n\r\nBREAKING CHANGE",
          "timestamp": "2021-11-04T14:54:04-07:00",
          "tree_id": "217b0ef216ffd9c32c745a48a4d34d98eb833163",
          "url": "https://github.com/rocicorp/replicache/commit/883c864e984e81e2e4996a9c9aca335867f6e562"
        },
        "date": 1636063023372,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±9.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.69,
            "range": "±94.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.71,
            "range": "±58.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.51,
            "range": "±53.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.15,
            "range": "±86.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "bb53e8fe2ff858a9bd1a12361608c85d0d7715c5",
          "message": "feat: add p95 graphs to perf-v2 benchmarks (#665)\n\nWe want to track median and p95",
          "timestamp": "2021-11-04T15:54:35-07:00",
          "tree_id": "1044b131ebe32f944b9f86352c4b19afefa43101",
          "url": "https://github.com/rocicorp/replicache/commit/bb53e8fe2ff858a9bd1a12361608c85d0d7715c5"
        },
        "date": 1636066566782,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.62,
            "range": "±85.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.74,
            "range": "±42.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.72,
            "range": "±62.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.19,
            "range": "±79.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "742b085c980ced27e4085d18581f915079f9d915",
          "message": "Update CONTRIBUTING.md",
          "timestamp": "2021-11-08T06:48:07-10:00",
          "tree_id": "35a6e942315fd093b8f741085a68e320de3a579f",
          "url": "https://github.com/rocicorp/replicache/commit/742b085c980ced27e4085d18581f915079f9d915"
        },
        "date": 1636390188744,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±4.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.02,
            "range": "±54.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.57,
            "range": "±41.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.48,
            "range": "±61.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.07,
            "range": "±79.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "173ecfdf8889eb2906d9f7e87d4440a94539b97b",
          "message": "Remove style guidance around crashes\n\nI don't think it applies as readily in JS as in Rust.",
          "timestamp": "2021-11-08T06:49:20-10:00",
          "tree_id": "556e98e4dbc1377a38754bc7db152e21a935b87e",
          "url": "https://github.com/rocicorp/replicache/commit/173ecfdf8889eb2906d9f7e87d4440a94539b97b"
        },
        "date": 1636390451565,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.57,
            "range": "±103.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.7,
            "range": "±64.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.72,
            "range": "±69.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.13,
            "range": "±88.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "9825000c007c048d6598e47cf504586e77210865",
          "message": "fix!: Remove register\n\nregister was deprecate 7 months ago.\n\nBREAKING CHANGE",
          "timestamp": "2021-11-08T08:31:00-10:00",
          "tree_id": "520c872bc520d007056ebe4f879979c7c6296e3a",
          "url": "https://github.com/rocicorp/replicache/commit/9825000c007c048d6598e47cf504586e77210865"
        },
        "date": 1636396357013,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 270.27,
            "range": "±8.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.73,
            "range": "±39.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.66,
            "range": "±56.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.68,
            "range": "±75.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 250.4,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.19,
            "range": "±83.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e0ab261120a896d87ec26fce5a9fdfb80b9a814f",
          "message": "perf: Optimize subscriptions for scans with a limit (#669)\n\n### Problem \r\n\r\nRight now we do not use `limit` when determining if a `scan` is affected by a key.(https://github.com/rocicorp/replicache/blob/2d2340227184c058bcb49ed1070bf129eb7a0385/src/subscriptions.ts#L39). \r\n\r\nWe only use the `startKey` and `prefix`. This means that if we have something like:\r\n\r\n```js\r\nrep.subscripe(tx => {\r\n  for await (const entry of tx.scan({startKey: 'a', limit: 5}) {\r\n     console.log(e);\r\n  }\r\n}, {onData() {});\r\n```\r\n\r\nwe cannot tell whether a change to key `'x'` should affect the subscription function.\r\n\r\n### Solution\r\n\r\nInside `SubscriptionTransactionWrapper`'s `scan` method.\r\n- We currently only store a `ScanOptions` for each scan, update to store a `ScanSubrscriptionInfo`, consisting of `ScanOptions` and the new field `inclusiveLimitKey`. `inclusiveLimitKey` will be populated based on a callback driven by the scan implementation in `btree/node.ts` (this callback has to be threaded through a few layers)\r\n- Then in `scanOptionsMatchesKey` we know that a key does not match if there is a limit and the changed key is greater than the inclusiveLimitKey.  This works for both `prefix`, `startKey`, and a combination of `prefix` and `startKey`.  \r\n\r\nNote this optimization is only applied when a subscription reads its scan to its limit (it choses to stop early, or it runs out of entries).   We can optimize some cases where a subscription does not read its scan to its limit, however these optimization are only correct if the subscription body is a pure function on the replicache store state.  Subscription bodies should be pure in this way, but so far replicache behavior is correct even if they are not pure. We chose to not implement these further optimizations, erroring on the side of correctness over performance.  We can of course revisit this if it turns out not reading a scan to its limit is a common use case.  \r\n\r\n\r\n### Perf measurements\r\n\r\nThis greatly improves writeSubRead benchmark performance when random invalidates are used, **reducing the median time by ~70%**.  This benchmark uses 128 scans each using startKey and limit.   \r\n\r\nMade on my M1 Max w 64 GB of memory\r\n\r\nBefore this optimization:\r\n```\r\n[MemStore] writeSubRead randomInvalidates false 100MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=2.50/4.00/11.40/11.40 ms avg=4.56 ms (7 runs sampled)\r\n[MemStore] writeSubRead randomInvalidates true 100MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=9.50/12.70/19.70/19.70 ms avg=12.69 ms (7 runs sampled)\r\n```\r\n\r\nWith this optimization:\r\n```\r\nRunning 2 benchmarks on Chromium...\r\n[MemStore] writeSubRead randomInvalidates false 100MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=2.50/4.20/10.70/10.70 ms avg=4.49 ms (7 runs sampled)\r\n[MemStore] writeSubRead randomInvalidates true 100MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=3.00/4.40/11.10/11.10 ms avg=4.99 ms (7 runs sampled)\r\nDone!\r\n```\r\n\r\nCloses #666",
          "timestamp": "2021-11-08T13:32:45-08:00",
          "tree_id": "d354085224da09aa9122a8c26565dd21042cc839",
          "url": "https://github.com/rocicorp/replicache/commit/e0ab261120a896d87ec26fce5a9fdfb80b9a814f"
        },
        "date": 1636407349813,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±8.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.63,
            "range": "±87.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.67,
            "range": "±56.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.62,
            "range": "±56.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.14,
            "range": "±87.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5a402ab0aa6cd85b425ab8a397b21e774278d21b",
          "message": "Revert \"feat: Update WriteSubRead benchmark to invalidate random keys (instead of a fixed set) (#672)\" (#673)\n\nThis reverts commit c072880ee4c77b4eb4f042788e29f3f8bd1d7d8e.",
          "timestamp": "2021-11-08T22:01:35Z",
          "tree_id": "d354085224da09aa9122a8c26565dd21042cc839",
          "url": "https://github.com/rocicorp/replicache/commit/5a402ab0aa6cd85b425ab8a397b21e774278d21b"
        },
        "date": 1636409068183,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±7.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.32,
            "range": "±35.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.51,
            "range": "±54.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.64,
            "range": "±55.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±6.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.16,
            "range": "±81.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "44c4ce5bb42221b90914c7cd56e7dcf24087eb1d",
          "message": "Bump version to 8.0.0.",
          "timestamp": "2021-11-08T13:57:17-10:00",
          "tree_id": "59bd30bbd69685ba21f44477ab1e64cdae88b214",
          "url": "https://github.com/rocicorp/replicache/commit/44c4ce5bb42221b90914c7cd56e7dcf24087eb1d"
        },
        "date": 1636416030184,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.43,
            "range": "±39.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.68,
            "range": "±38.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.69,
            "range": "±60.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.13,
            "range": "±79.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "212f6ad4a10479ddb866135b61e60c3fea5f5669",
          "message": "refactor: Change commit refs computation (#675)\n\nMain motivation is to be able to compute the refs directly from the\r\nchunk data but this simplifies the code a bit. We used to have an object\r\ntelling us if the Hash in the commit was Weak or Strong. It was only\r\nused internally when computing the actual refs. Now we keep this logic\r\nin one place and we do need to keep this extra type around.",
          "timestamp": "2021-11-09T00:34:23Z",
          "tree_id": "4093c0cb3eb0c2ba6cd32ccf5b0baa69ca6f4232",
          "url": "https://github.com/rocicorp/replicache/commit/212f6ad4a10479ddb866135b61e60c3fea5f5669"
        },
        "date": 1636418150507,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 270.27,
            "range": "±8.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.17,
            "range": "±55.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±43.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.69,
            "range": "±56.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.14,
            "range": "±79.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "cdc83e1f5ebc5a0497277243d8851b981dcaa639",
          "message": "feat: Take 2 - Update WriteSubRead benchmark to invalidate random keys (instead of a fixed set) (#674)\n\nNow using 'lodash-es' (Take 1 c072880 had to be reverted because the 'lodash.range' and 'lodash.samplesize' were cjs modules).",
          "timestamp": "2021-11-08T17:52:42-08:00",
          "tree_id": "10a5f91eaa1eecaad0abe1c1c695c66c2ea56206",
          "url": "https://github.com/rocicorp/replicache/commit/cdc83e1f5ebc5a0497277243d8851b981dcaa639"
        },
        "date": 1636422867469,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.63,
            "range": "±88.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.71,
            "range": "±71.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.62,
            "range": "±61.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.16,
            "range": "±81.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4813b8209c788bd8f1819bcf0de161a5881fe423",
          "message": "feat: Setup dashboard and alerts for bundle sizes (#677)\n\n### Problem\r\nWe are missing a way to see bundle size changes over time (i.e. across commits).  It would also be nice to get alerts when bundle sizes increase by more than a small percent.\r\n\r\n### Solution\r\n\r\n- Create a small node script that outputs the bundle sizes in the format needed for the github-action-benchmark customSmallerIsBetter tool.  \r\n- Set up yml for github action that will run this script and use github-action-benchmark to graph the sizes on a new dashboard at https://rocicorp.github.io/replicache/bundle-sizes/\r\n- Also configure an alert for when bundle sizes increase by more than **5%.** \r\n\r\nCloses #125",
          "timestamp": "2021-11-08T19:15:39-08:00",
          "tree_id": "468347858d21689b9523cb5b46ad0abf521c79ed",
          "url": "https://github.com/rocicorp/replicache/commit/4813b8209c788bd8f1819bcf0de161a5881fe423"
        },
        "date": 1636427964106,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 163.93,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.71,
            "range": "±48.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.92,
            "range": "±81.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.68,
            "range": "±92.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.15,
            "range": "±87.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1fa2cfdc6334cbc8db8c506477397c4590b44e44",
          "message": "refactor: Rework test config to avoid missing new tests in src/ (#676)\n\n### Problem\r\nNew tests added to the `src/` dir are not run by `npm run test` unless the are explicitly added to `web-test-runner.config.mjs`.  This is unexpected as tests added to subdirs of src are automatically included, and so I was confused for sometime as to why a new test I added wasn't running.  \r\n\r\nThe reason for this is we don't want to run `src/worker.test.ts` with the other tests.\r\n\r\n### Solution\r\nMove `worker.test.ts` and `worker-test.ts` to a subdir `worker-tests`, and add `src/*.test.ts` to files config in `web-test-runner.config.mjs`.  Now new tests added to `src/` will automatically be included in `npm run test`.",
          "timestamp": "2021-11-09T16:10:00Z",
          "tree_id": "f9ca8796a9b450624c4b8841eccf4309cc1012ab",
          "url": "https://github.com/rocicorp/replicache/commit/1fa2cfdc6334cbc8db8c506477397c4590b44e44"
        },
        "date": 1636474337030,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 208.33,
            "range": "±9.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 166.67,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.67,
            "range": "±73.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.7,
            "range": "±71.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.6,
            "range": "±56.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.16,
            "range": "±82.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "eric@ericanderson.ca",
            "name": "Eric Anderson",
            "username": "aroc"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "29ab1cd78593f937371a03c78c57d6600a909e74",
          "message": "Fix import from wrong lib",
          "timestamp": "2021-11-09T06:43:22-10:00",
          "tree_id": "5f2e49e296d540f573ef8ed9ae99c24c5d7b1747",
          "url": "https://github.com/rocicorp/replicache/commit/29ab1cd78593f937371a03c78c57d6600a909e74"
        },
        "date": 1636476326335,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.76,
            "range": "±95.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.59,
            "range": "±70.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.7,
            "range": "±68.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.18,
            "range": "±79.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "da05aa3319dedf3ad93862c2349cc097e41d9382",
          "message": "feat: Add Brotli compressed bundle sizes to Bundle Sizes dashboard (#679)\n\n### Problem\r\nBundle Size dashboard https://rocicorp.github.io/replicache/bundle-sizes/ and associated alerts currently only track non-compressed sizes of bundles.  What we really care about is Brotli compressed size.\r\n\r\n### Solution\r\nAdd Brotli compressed sizes of bundles to dashboard and alert.\r\nTo do this needed to move from `self-hosted` runner to `ubuntu-latest` as `brotli` command was not available in the `self-hosted` environment (but is in `ubuntu-latest`).  This is fine as we don't care about cpu/memory isolation for this benchmark as we do for the performance benchmarks, because we are just measuring byte size.",
          "timestamp": "2021-11-09T08:59:18-08:00",
          "tree_id": "e6c7667d804131fff367901c076321d5c4d8751a",
          "url": "https://github.com/rocicorp/replicache/commit/da05aa3319dedf3ad93862c2349cc097e41d9382"
        },
        "date": 1636477353513,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±9.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.82,
            "range": "±82.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.61,
            "range": "±70.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.62,
            "range": "±80.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 232.51,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.13,
            "range": "±73.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6996df2a55e0ad54d319dc1ee71c2dca19658eb3",
          "message": " docs: Add Bundle Sizes dashboard to HACKING.md (#680)",
          "timestamp": "2021-11-09T22:00:36Z",
          "tree_id": "1430b464de31793607ce754674c6881cbe62252d",
          "url": "https://github.com/rocicorp/replicache/commit/6996df2a55e0ad54d319dc1ee71c2dca19658eb3"
        },
        "date": 1636495340098,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.08,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.76,
            "range": "±66.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.65,
            "range": "±69.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.65,
            "range": "±55.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.17,
            "range": "±75.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "10153e05a9c8101428580a739f37524a639a9896",
          "message": "add checklist item for passing name to constructor",
          "timestamp": "2021-11-11T16:15:40-10:00",
          "tree_id": "802a122c7481f65a65e03f6f941c85c94a7dd81c",
          "url": "https://github.com/rocicorp/replicache/commit/10153e05a9c8101428580a739f37524a639a9896"
        },
        "date": 1636683544693,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±6.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.67,
            "range": "±88.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.67,
            "range": "±70.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.66,
            "range": "±68.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.12,
            "range": "±80.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9533421da8c2dcd39a206bac26788f7e69e71ebc",
          "message": "feat: Functionality for managing the ClientMap needed for Simplified Dueling Dags (#683)\n\nIn the Simplified Dueling Dags design for Realtime Persistence, each tab is a `client` and has its own `perdag` - an instance of `dag.Store` backed by IDB.  All tabs' `perdag` instances are backed by the same IDB object store, thus they share physical storage. \r\n\r\nTo keep track of each client's current `headHash` (and additional metadata such as heartbeatTimestampMS used for garbage collection of client perdags), a new `ClientMap` data structure is introduced.  The `ClientMap` is stored in a chunk in the `perdag` at the head `'clients'`.  This `ClientMap` chunk contains refs to each client's `headHash`.\r\n\r\nThis change implements helpers for reading and writing the `ClientMap`.     \r\n\r\nSee larger design at https://www.notion.so/Simplified-DD1-1ed242a8c1094d9ca3734c46d65ffce4\r\n\r\nPart of #671",
          "timestamp": "2021-11-12T14:36:39-08:00",
          "tree_id": "d91a7c4eefbaedecebc2f6b84af8e5f307d2df6d",
          "url": "https://github.com/rocicorp/replicache/commit/9533421da8c2dcd39a206bac26788f7e69e71ebc"
        },
        "date": 1636756801698,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.83,
            "range": "±38.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.64,
            "range": "±68.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.66,
            "range": "±69.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.14,
            "range": "±81.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "debd66e99de171002dbfef9310b135b628c08f31",
          "message": "fix: improve test description grammar in clients.test.ts (#684)",
          "timestamp": "2021-11-12T22:46:14Z",
          "tree_id": "2393949e016e01ee7f832025b2c1bd05591879a3",
          "url": "https://github.com/rocicorp/replicache/commit/debd66e99de171002dbfef9310b135b628c08f31"
        },
        "date": 1636757271395,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 178.57,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.69,
            "range": "±87.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.96,
            "range": "±81.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.61,
            "range": "±87.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.16,
            "range": "±86.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5dcc0e1bfb263bac50b27775730a12b40c81eeaa",
          "message": "chore: Allow unused vars starting with underscore (#691)",
          "timestamp": "2021-11-16T00:48:44Z",
          "tree_id": "0aa4e7f3dfbe6460cd65527115c86e9affe08c2e",
          "url": "https://github.com/rocicorp/replicache/commit/5dcc0e1bfb263bac50b27775730a12b40c81eeaa"
        },
        "date": 1637023936291,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 178.57,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.8,
            "range": "±103.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.55,
            "range": "±74.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.63,
            "range": "±70.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.13,
            "range": "±80.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "02a55e50e969d1e1a8e1d7f0a5ad5e731640c01c",
          "message": "chore: Address review comments on commit 9533421 (#693)\n\nSee https://github.com/rocicorp/replicache/pull/683",
          "timestamp": "2021-11-16T16:38:06Z",
          "tree_id": "e02c7eb284ca8f71fc67ffab2f1cf6919f5902a7",
          "url": "https://github.com/rocicorp/replicache/commit/02a55e50e969d1e1a8e1d7f0a5ad5e731640c01c"
        },
        "date": 1637080788772,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 204.08,
            "range": "±9.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.54,
            "range": "±35.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.57,
            "range": "±71.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.62,
            "range": "±71.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.14,
            "range": "±85.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b18ad07e3c3afd2978c8c37e0a57ae34c8d16c1",
          "message": "feat: Implement heartbeats mechanism needed for Client state garbage collection for Simplified Dueling Dags\n\nSimplified Dueling Dags requires a mechanism for collecting the perdag state for Clients (i.e. tabs) which have been closed.\r\n\r\nA Client (i.e. tab) that has been closed cannot reliably clean up its own state (due to crashes and force closes).  It is difficult for other Client (i.e. tabs) to determine if a tab has been closed and is gone for ever, or just has been frozen for a long time.  The approach taken here is to have each Client update a heartbeatTimestampMS once per minute while it is active.  Other Client's then collect a Client only if it hasn't been active for a very long time (current plan is 1 week).\r\n\r\nA client's heartbeat time is also updated when its memdag is persisted to the perdag.  This way the \"newest\" client state is roughly the state of the client with the most recent heartbeat time, which is useful for determining which client state a new client should choose for bootstrapping. \r\n\r\nA timestamp is used (as opposed to a heartbeat counter) in order to support expiration periods much longer than a typical session (e.g. 7 days).\r\n\r\nSee larger design at https://www.notion.so/Simplified-DD1-1ed242a8c1094d9ca3734c46d65ffce4\r\n\r\nPart of #671",
          "timestamp": "2021-11-16T16:54:14Z",
          "tree_id": "866491cc5cf051f5787bad2d3151b26e9be3405c",
          "url": "https://github.com/rocicorp/replicache/commit/6b18ad07e3c3afd2978c8c37e0a57ae34c8d16c1"
        },
        "date": 1637081755008,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.77,
            "range": "±45.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.59,
            "range": "±69.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.56,
            "range": "±66.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.13,
            "range": "±80.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9a4a5100173ac577e167f5838c6b35d4a7b60cf1",
          "message": "feat: Implements Client state Garbage Collection for Simplified Dueling Dags (#689)\n\nSimplified Dueling Dags requires a mechanism for collecting the perdag state for Clients (i.e. tabs) which have been closed.\r\n\r\nEvery **five minutes**, each Client collects any Clients that haven't updated their heartbeat timestamp **for at least seven days**. \r\n\r\nSee larger design at https://www.notion.so/Simplified-DD1-1ed242a8c1094d9ca3734c46d65ffce4\r\n\r\nPart of #671",
          "timestamp": "2021-11-16T17:26:47Z",
          "tree_id": "57bd8b69d05ccce9336b15c615de5c24a9ada2c0",
          "url": "https://github.com/rocicorp/replicache/commit/9a4a5100173ac577e167f5838c6b35d4a7b60cf1"
        },
        "date": 1637083715529,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 172.41,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.45,
            "range": "±79.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.65,
            "range": "±78.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.61,
            "range": "±48.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 227.11,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.12,
            "range": "±85.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ee9ed0ded7638b9881c487a0814e60cfabd2ddf4",
          "message": "refactor: Skip creating a Chunk & Commit in migrate (#694)\n\nThese extra objects are not needed here and makes other things harder to\r\nachieve.",
          "timestamp": "2021-11-16T19:35:39Z",
          "tree_id": "54dcd7f6326037bbc924d0226f6b0b4b510061c1",
          "url": "https://github.com/rocicorp/replicache/commit/ee9ed0ded7638b9881c487a0814e60cfabd2ddf4"
        },
        "date": 1637091544068,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.08,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.66,
            "range": "±86.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.64,
            "range": "±96.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.56,
            "range": "±60.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.16,
            "range": "±78.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "123687f2b772e8255894fb5820aaf12d831e9b4e",
          "message": "refactor: Make the hash function a property of the dag store (#695)\n\nThe dag store now takes the function to use when computing the hash of a\r\nchunk. This is needed because we want to use differn hash functions for\r\nmemdag and perdag.\r\n\r\nTowards #671",
          "timestamp": "2021-11-16T13:34:20-08:00",
          "tree_id": "f5ef20ab65404b9695d9151f722b46301da67cba",
          "url": "https://github.com/rocicorp/replicache/commit/123687f2b772e8255894fb5820aaf12d831e9b4e"
        },
        "date": 1637098664552,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.81,
            "range": "±88.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.92,
            "range": "±83.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.6,
            "range": "±80.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 232.51,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.14,
            "range": "±85.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "63a05379b317a84e7ad80fb5624370619e3e790a",
          "message": "fix: Fix bug where pusher/puller/pushURL/pullURL set after construction are ignored if initially none set. (#696)\n\nAlso updates tests to cover these cases.\r\n\r\nFixes #685",
          "timestamp": "2021-11-16T23:19:53Z",
          "tree_id": "0acd8b7078c5237cdf8a3543315696191fe046f4",
          "url": "https://github.com/rocicorp/replicache/commit/63a05379b317a84e7ad80fb5624370619e3e790a"
        },
        "date": 1637104897753,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.08,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.89,
            "range": "±40.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.63,
            "range": "±65.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.73,
            "range": "±72.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.18,
            "range": "±86.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d85d41e12214c88c9d7a9cfa7976ede120379fd8",
          "message": "refactor: Do not use temp hash as a sign of mutability in B+Tree (#697)\n\nWe used to use isTempHash to determine if the B+Tree node was mutable or\r\nnot (isTempHash === true => mutable). This is not going to work when the\r\nwhole MemDag is going to use temp hashes. Instead, use a flag on the\r\nnode.\r\n\r\nTowards #671",
          "timestamp": "2021-11-16T23:28:45Z",
          "tree_id": "2b022f710fa27dc85aa2024bf2d2a08af9d64efc",
          "url": "https://github.com/rocicorp/replicache/commit/d85d41e12214c88c9d7a9cfa7976ede120379fd8"
        },
        "date": 1637105514852,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 204.08,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.03,
            "range": "±44.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.01,
            "range": "±79.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.82,
            "range": "±77.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.3,
            "range": "±68.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "126b6a7e1918544d691bcd1a79f5ddae2f8dca0c",
          "message": "refactor: Make assertValidChunk part of dag Store (#698)\n\nFor memdag we will allow temp hashes but for perdag we will not.\r\n\r\nTowards #671",
          "timestamp": "2021-11-17T00:44:32Z",
          "tree_id": "5092a6fdda5e931512d51568d3954760d9a9bb66",
          "url": "https://github.com/rocicorp/replicache/commit/126b6a7e1918544d691bcd1a79f5ddae2f8dca0c"
        },
        "date": 1637109975724,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±4.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.97,
            "range": "±39.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.73,
            "range": "±62.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.81,
            "range": "±71.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.26,
            "range": "±61.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7ad07333fb6ea30a0e431a74aa942b3a5efe9997",
          "message": "refactor: Move createChunk to dag.Write (#699)\n\nIt was not needed on dag.Read.\r\n\r\nFollowup to #695",
          "timestamp": "2021-11-17T18:30:26Z",
          "tree_id": "611160eae10e771db88caa74c996b8e28f2f1ec0",
          "url": "https://github.com/rocicorp/replicache/commit/7ad07333fb6ea30a0e431a74aa942b3a5efe9997"
        },
        "date": 1637173943227,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.93,
            "range": "±80.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.56,
            "range": "±57.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.78,
            "range": "±47.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.25,
            "range": "±62.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "78c046eb0a372a03b64cdfda1f47a14e3a637ad8",
          "message": "refactor: Rename _kvr to _tx (#700)\n\nSince it is either a kv.Read or a kv.Write transaction.\r\n\r\nFollowup to #698",
          "timestamp": "2021-11-17T18:38:55Z",
          "tree_id": "4ef7b82fef552d81542061cae911535c52e96384",
          "url": "https://github.com/rocicorp/replicache/commit/78c046eb0a372a03b64cdfda1f47a14e3a637ad8"
        },
        "date": 1637174431255,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.81,
            "range": "±90.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±69.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.8,
            "range": "±73.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.22,
            "range": "±62.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "268c15c4d6043a93763c89b15941cde1580e96e5",
          "message": "refactor: Add back parse to dag/key.ts (#701)\n\nI need it for a test I'm writing...",
          "timestamp": "2021-11-17T20:25:51Z",
          "tree_id": "925063e5e1fb7037ce2085ee200eaa448f62396b",
          "url": "https://github.com/rocicorp/replicache/commit/268c15c4d6043a93763c89b15941cde1580e96e5"
        },
        "date": 1637180856717,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.08,
            "range": "±51.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±65.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.78,
            "range": "±42.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.25,
            "range": "±65.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "71d5cbee735b4e55ab03fa1ad4b1da043d23b250",
          "message": "Update HACKING.md",
          "timestamp": "2021-11-17T15:03:56-08:00",
          "tree_id": "98955436162abc5380c12335eb0fa5ba13e1dec2",
          "url": "https://github.com/rocicorp/replicache/commit/71d5cbee735b4e55ab03fa1ad4b1da043d23b250"
        },
        "date": 1637190340081,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9,
            "range": "±38.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.78,
            "range": "±64.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.76,
            "range": "±69.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.24,
            "range": "±62.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "phritz@users.noreply.github.com",
            "name": "phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "e9da6cfdbe765d23d9719760bc4fc54df6c5af10",
          "message": "remove weblock test",
          "timestamp": "2021-11-17T17:12:43-10:00",
          "tree_id": "7ae962619ddfb419f29909ae36807ca30149c19f",
          "url": "https://github.com/rocicorp/replicache/commit/e9da6cfdbe765d23d9719760bc4fc54df6c5af10"
        },
        "date": 1637205363003,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 204.08,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.91,
            "range": "±50.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.9,
            "range": "±74.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.65,
            "range": "±47.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.29,
            "range": "±73.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8c50cb4dce1267fdf89c9bf67ce2e3b00df128b0",
          "message": "fix: Fix migraion of head (#708)\n\nThe migration from v1 to v2 was not updating the head so the migrated\r\ndag was GC'ed and the old dag was being kept.\r\n\r\nFixes #704",
          "timestamp": "2021-11-18T21:37:11Z",
          "tree_id": "f481b8d22633ae0b0d4544e2395fae3e45ed7dd9",
          "url": "https://github.com/rocicorp/replicache/commit/8c50cb4dce1267fdf89c9bf67ce2e3b00df128b0"
        },
        "date": 1637271536620,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 212.77,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.08,
            "range": "±67.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.9,
            "range": "±68.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.82,
            "range": "±67.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 250.4,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.33,
            "range": "±68.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f0c31e44c1d45be7a3382f6899cca9ad4bd80f3e",
          "message": "fix: Write the empty BTree node to the dag store (#709)\n\nPreviously we used the empty hash and didn't write this chunk. It meant\r\nthat there were refs that were the empty hash and the system had to be\r\nresilient to the valueHash being an empty hash etc.",
          "timestamp": "2021-11-18T21:45:31Z",
          "tree_id": "11c04e445113a25530dbb21cfc193a0423808496",
          "url": "https://github.com/rocicorp/replicache/commit/f0c31e44c1d45be7a3382f6899cca9ad4bd80f3e"
        },
        "date": 1637272027140,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±6.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.96,
            "range": "±84.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.93,
            "range": "±74.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.77,
            "range": "±52.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.24,
            "range": "±66.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4bcae282030d4ce84e2ef5cb3fc45f16e152be22",
          "message": "refactor: Add PersistGatherVisitor (#702)\n\nAdd a DB/Dag Visitor -- This walks the entire dag using a semantic\r\nvisitor, which knows what each chunk represents.\r\n\r\nThen implement the PersistGatherVisitor as a visitor of the Dag Visitor\r\nwhich stops the traversal when it finds a non temp hash. It collects all\r\nthe chunks it sees and exposes them as a property.\r\n\r\nTowards #671",
          "timestamp": "2021-11-18T18:01:41-08:00",
          "tree_id": "c4956185616bada4ed21491ce0942334b5dd7531",
          "url": "https://github.com/rocicorp/replicache/commit/4bcae282030d4ce84e2ef5cb3fc45f16e152be22"
        },
        "date": 1637287405378,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 175.44,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.9,
            "range": "±37.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.65,
            "range": "±61.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.76,
            "range": "±73.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 238.19,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.34,
            "range": "±54.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "phritz@users.noreply.github.com",
            "name": "phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "f63c28be2033af13c3dd6bc0c1fc272596b38480",
          "message": "address code review comments",
          "timestamp": "2021-11-18T20:46:37-10:00",
          "tree_id": "ee51c3f62b883eb3bdc7f044965b4d27ac756787",
          "url": "https://github.com/rocicorp/replicache/commit/f63c28be2033af13c3dd6bc0c1fc272596b38480"
        },
        "date": 1637304594252,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±7.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.08,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.93,
            "range": "±44.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.77,
            "range": "±59.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.78,
            "range": "±61.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 244.14,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±61.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1fbcba8027a7a7aea04e3d6844b43128837ad422",
          "message": "refactor: remove default value of Meta for Commit's  M type param to improve typing of Commit (#715)\n\n### Problem\r\nHaving a default value of Meta for Commit's M type param led to less specific typing in many places. \r\n\r\n### Solution\r\nRemove the default and make typing more specific where possible.",
          "timestamp": "2021-11-19T12:20:41-08:00",
          "tree_id": "955289bad92a5f1b732439ac32d077b978ce5ff6",
          "url": "https://github.com/rocicorp/replicache/commit/1fbcba8027a7a7aea04e3d6844b43128837ad422"
        },
        "date": 1637353439074,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±8.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±19.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.83,
            "range": "±87.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.72,
            "range": "±60.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.67,
            "range": "±38.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 232.51,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.3,
            "range": "±72.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "186bb707de1b2d421b61d291a3bc010b05c74b22",
          "message": "fix: Provide more details to logger when push or pull fails (#716)\n\n### Problem\r\nPush and pull error logging lacks sufficient detail to debug errors.\r\n\r\nA pull failure currently logs to info (and a push error logs essentially the same):\r\n`Pull returned: PullError: Failed to pull`\r\n\r\nNot the most useful logging.  However, our `PushError` and `PullError` classes have a `cause?: Error` property with details on the underlying cause, it is just not logged.\r\n\r\n### Solution\r\nIf the error is a `PushError` or `PullError`, log the cause.\r\n\r\nUpdate log format to include stack traces for both the error, and cause.\r\n\r\nAlso update to use `error` instead of `info` logging.\r\n\r\nCloses #690",
          "timestamp": "2021-11-19T13:13:11-08:00",
          "tree_id": "950b3b51a836e7bd7295f81a785b14d499788f5d",
          "url": "https://github.com/rocicorp/replicache/commit/186bb707de1b2d421b61d291a3bc010b05c74b22"
        },
        "date": 1637356591187,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 172.41,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.85,
            "range": "±37.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.95,
            "range": "±67.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.83,
            "range": "±68.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 250.4,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.29,
            "range": "±60.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "15703ca4396be61447be6e572600e6b7fac5b9d6",
          "message": "refactor: Optimize scan (#717)\n\nThere are two kinds of optimizations in here:\r\n\r\n1. Get rid of intermediate for await loops.\r\n2. Get rid of yield*\r\n\r\nBoth of these adds extra Promise and IteratorResult objects.\r\n\r\nBy passing the convertEntry function all the way down into the BTree\r\niterator we do not need the intermediate for await loops.\r\n\r\nIn a few places we can return the async iterable iterator instead of\r\nyield* it. This only works if the function/method is not `async` of\r\n`async *`.\r\n\r\nTowards #711",
          "timestamp": "2021-11-19T20:42:54-08:00",
          "tree_id": "669656b5ed75ea43a0f7410caeb8b92d1d61bb32",
          "url": "https://github.com/rocicorp/replicache/commit/15703ca4396be61447be6e572600e6b7fac5b9d6"
        },
        "date": 1637383477027,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.82,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.94,
            "range": "±36.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.72,
            "range": "±59.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.85,
            "range": "±50.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.31,
            "range": "±64.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "e9c2d7da548fc6e9c61c3b714390d0f5e10cf3c4",
          "message": "fix: Remove log spew from test (#720)\n\nThe mock fetch was returning `{}` which is not a valid PullResponse",
          "timestamp": "2021-11-22T10:50:17-08:00",
          "tree_id": "a614d776b75d54cb4781a0f9dbeb38cbd2d90d73",
          "url": "https://github.com/rocicorp/replicache/commit/e9c2d7da548fc6e9c61c3b714390d0f5e10cf3c4"
        },
        "date": 1637607122231,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±3.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.82,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.95,
            "range": "±87.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.84,
            "range": "±67.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.75,
            "range": "±42.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.31,
            "range": "±69.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "08ef17fa16e66267077de90e305fffdb44eb06b2",
          "message": "fix: correct log levels for push and pull errors to follow style guidelines (#719)\n\n### Problem\r\nPush and pull errors are being logged at level `error`, which violates our style guide for log levels: https://github.com/rocicorp/replicache/blob/main/CONTRIBUTING.md#style-general\r\n\r\n### Solution\r\nUpdate to use `info` level instead.",
          "timestamp": "2021-11-22T11:29:05-08:00",
          "tree_id": "68940fa618c677811048c59fab22c8225708931d",
          "url": "https://github.com/rocicorp/replicache/commit/08ef17fa16e66267077de90e305fffdb44eb06b2"
        },
        "date": 1637609443858,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 204.08,
            "range": "±4.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.91,
            "range": "±37.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.99,
            "range": "±74.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.64,
            "range": "±73.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.22,
            "range": "±69.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b549045d3da37eb5b47d61a5c37d7b6997f6c4f4",
          "message": "fix: Silence and check error message (#722)\n\nThe test was hitting `console.error` which is good because it means the\r\ncode works. But we do not want errors to escape the tests. Instead\r\ninstall a stub for console.error and check that it was called.",
          "timestamp": "2021-11-22T21:11:48Z",
          "tree_id": "f296eae1275ee8d80c4c91aef2daa89927141929",
          "url": "https://github.com/rocicorp/replicache/commit/b549045d3da37eb5b47d61a5c37d7b6997f6c4f4"
        },
        "date": 1637615707524,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±7.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.83,
            "range": "±86.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.77,
            "range": "±67.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.77,
            "range": "±70.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±71.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "981248bf0caefd60754db4a64eb59524250dda8b",
          "message": "feat: Simplified Dueling Dags - Implement initing a new client including bootstraping from existing client state. (#712)\n\nSimplified Dueling Dags always creates a new Client for each new tab.  To enable fast startup of new tabs utilizing previous stored data Simplified Dueling Dags bootstraps new clients by forking an existing Client's state. \r\n\r\nWhen forking from another Client, the fork should be based on the existing Client's most recent base snapshot (which may not be its latest head).  This is necessary because pending mutations (LocalMutationCommits) cannot be forked as the last mutation id series is different per client.\r\n\r\nIt is important that the last mutation id for the new client be set to 0, since a replicache server implementation will start clients for which they do not have a last mutation id stored at last mutation id 0.  If the server receives a request from a client with a non-0 last mutation id, for which it does not have a last mutation id stored, it knows that it is unsafe for it to execute mutations form the client, as it could result in re-running mutations or otherwise failing to guarantee sequential execution of mutations.  This tells the server that this is an old client that it has GC'd (we need some way to signal this to the client so it can reset itself, see https://github.com/rocicorp/replicache/issues/335). \r\n\r\nWhen choosing a Client to bootstrap from, it is safe to pick any Client, but it is ideal to chose the Client with the most recent snapshot from the server.  Currently the age of snapshots is not stored, so this implementation uses a heuristic of choosing the base snapshot of the Client with the newest heartbeat timestamp. \r\n\r\nSee larger design at https://www.notion.so/Simplified-DD1-1ed242a8c1094d9ca3734c46d65ffce4#64e4299105dd490a9ffbc6c9c771f5d2\r\n\r\nPart of #671",
          "timestamp": "2021-11-22T14:54:58-08:00",
          "tree_id": "0438301398305ead0cb6f1d1ea6a99ef4ef18d2d",
          "url": "https://github.com/rocicorp/replicache/commit/981248bf0caefd60754db4a64eb59524250dda8b"
        },
        "date": 1637621802379,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.99,
            "range": "±37.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.91,
            "range": "±33.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.72,
            "range": "±49.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.25,
            "range": "±52.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "058d17429a8b96780776bd2f39b1213094df5e16",
          "message": "feat: Add Persist Writer (#723)\n\nUse a Transformer to transform one dag tree into another.\r\n\r\nThen use this to implement a Persist Writer which uses the previous\r\ngathered chunks to determine what to write.\r\n\r\nTowards #671",
          "timestamp": "2021-11-23T16:40:01-08:00",
          "tree_id": "ab7f320030d3b25f28a7a938d93a08c786cfb06d",
          "url": "https://github.com/rocicorp/replicache/commit/058d17429a8b96780776bd2f39b1213094df5e16"
        },
        "date": 1637714506701,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.82,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.93,
            "range": "±37.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.81,
            "range": "±68.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.82,
            "range": "±49.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 295.93,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.3,
            "range": "±68.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c1daafb647a418aac0dbd9f524bc9fc81c2fddab",
          "message": "feat: Add Persist Fixup Transformer (#726)\n\nThis is another transformer that changes the hashes in a DAG. It walks\r\ndown the DAG and \"rewrites\" chunks with a new hash, provided as a\r\nmapping from old hash to new hash. The old chunks will get garbage\r\ncollected as usual.\r\n\r\nTowards #671",
          "timestamp": "2021-11-29T12:58:34-08:00",
          "tree_id": "a4efe0191a8af00489944c95df1913d8ac67972e",
          "url": "https://github.com/rocicorp/replicache/commit/c1daafb647a418aac0dbd9f524bc9fc81c2fddab"
        },
        "date": 1638219625621,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±6.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.81,
            "range": "±88.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.98,
            "range": "±83.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.65,
            "range": "±51.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±7.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.18,
            "range": "±63.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c62688fa2b642e9cb30f99c9e8941b2c2b325814",
          "message": "refactor: Rename HashType -> HashRefType (#728)",
          "timestamp": "2021-11-29T21:51:24Z",
          "tree_id": "feae4c9d117afa0b36577f017436a81a313d26b6",
          "url": "https://github.com/rocicorp/replicache/commit/c62688fa2b642e9cb30f99c9e8941b2c2b325814"
        },
        "date": 1638222887455,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±4.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 175.44,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.86,
            "range": "±46.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.09,
            "range": "±77.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.64,
            "range": "±75.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.24,
            "range": "±59.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "595e2080c81118598507f71b339718cc17f34980",
          "message": "feat: A transformer that computes the chunk hash (#727)\n\nThis does not need a `dag.Read` or `dag.Write`. It only operates on the\r\ngathered chunks in the map from the previous step.\r\n\r\nThe input is a `Map<TempHash, Chunk<TempHash>>` and the output is the\r\nsame logical map but the hashes have been computed based on the chunk\r\ndata; `Map<PerHash, Chunk<PerHash>>`\r\n\r\nTowards Implement Dueling Dags #671",
          "timestamp": "2021-11-29T22:04:23Z",
          "tree_id": "68e2ed63093fd5546b9ac01b375e73cdb1a350ec",
          "url": "https://github.com/rocicorp/replicache/commit/595e2080c81118598507f71b339718cc17f34980"
        },
        "date": 1638223572883,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.82,
            "range": "±1.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.71,
            "range": "±90.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.69,
            "range": "±67.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.67,
            "range": "±45.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.24,
            "range": "±67.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9481c4c9c98824eb61351652590e2a76fbb8243d",
          "message": "refactor: Rename hash in db transformer (#729)\n\nUse NewHash and OldHash type aliases",
          "timestamp": "2021-11-29T14:19:36-08:00",
          "tree_id": "3a14d318369964c4e54758ef112ce6571e37a420",
          "url": "https://github.com/rocicorp/replicache/commit/9481c4c9c98824eb61351652590e2a76fbb8243d"
        },
        "date": 1638224477932,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 208.33,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.65,
            "range": "±35.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.65,
            "range": "±67.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.64,
            "range": "±74.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 295.93,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.23,
            "range": "±74.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "764f55e3acad523db351d26814241fedd5c6aa5d",
          "message": "feat: Add mappings to db.Transformer (#730)\n\nThis writes the `Map<OldHash, NewHash>` as the transformer writes new\r\nchunks\r\n\r\nTowards #671",
          "timestamp": "2021-11-29T14:50:12-08:00",
          "tree_id": "3c2429d283df9c2b6ed9890a5ab349da773ccc61",
          "url": "https://github.com/rocicorp/replicache/commit/764f55e3acad523db351d26814241fedd5c6aa5d"
        },
        "date": 1638226411781,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 212.77,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.9,
            "range": "±37.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.1,
            "range": "±83.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.67,
            "range": "±76.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 295.93,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±63.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d9a71bc9bba229c02820b228492aed80055a4232",
          "message": "chore: Update to TS 4.5 (#731)",
          "timestamp": "2021-11-29T23:13:02Z",
          "tree_id": "489d506acefea690ec4c97348b3998013d5728b6",
          "url": "https://github.com/rocicorp/replicache/commit/d9a71bc9bba229c02820b228492aed80055a4232"
        },
        "date": 1638227688881,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.83,
            "range": "±35.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.74,
            "range": "±67.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.8,
            "range": "±49.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±63.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b57c94ff9a0f6be3c8eb902c7bd3b09f4635f526",
          "message": "chore: Update web test runner and deps (#732)",
          "timestamp": "2021-11-29T23:29:34Z",
          "tree_id": "757f1d3f3ef72908e4af5571c5ff92eb9a294381",
          "url": "https://github.com/rocicorp/replicache/commit/b57c94ff9a0f6be3c8eb902c7bd3b09f4635f526"
        },
        "date": 1638228691836,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±4.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.98,
            "range": "±32.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.86,
            "range": "±43.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.89,
            "range": "±72.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.24,
            "range": "±51.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "5e4afe41b36cb118680a72bcee25d5e0be2713c4",
          "message": "refactor: Rename classes",
          "timestamp": "2021-11-29T15:45:37-08:00",
          "tree_id": "3b032c8809033402712d8cc34c3268e331629ea7",
          "url": "https://github.com/rocicorp/replicache/commit/5e4afe41b36cb118680a72bcee25d5e0be2713c4"
        },
        "date": 1638229733986,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.08,
            "range": "±83.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.94,
            "range": "±73.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.79,
            "range": "±41.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.29,
            "range": "±56.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "febb5b7850e578fcb9d28ac34c40ec826511c1f5",
          "message": "fix: Persist Write Transformer should preserve hashes (#734)\n\nNow we precompute the hashes of the chunks we are going to write so we\r\nneed to preserve the hashes of the chunks passed in.\r\n\r\nTowards #671",
          "timestamp": "2021-11-30T11:47:50-08:00",
          "tree_id": "0b72a243a323014e3ceabd33be923e97d9ef8975",
          "url": "https://github.com/rocicorp/replicache/commit/febb5b7850e578fcb9d28ac34c40ec826511c1f5"
        },
        "date": 1638301875143,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 212.77,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.09,
            "range": "±82.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.86,
            "range": "±59.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.75,
            "range": "±41.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.29,
            "range": "±59.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1bb8f57514f85290571577bf8aeabf33d53326c3",
          "message": "feat: Add nativeHashOf (#736)\n\nAnd change type signature of hashOf to take a JSON value as well.",
          "timestamp": "2021-11-30T15:22:04-08:00",
          "tree_id": "445490f7a5b19347bd0a94806fd43ac58289c941",
          "url": "https://github.com/rocicorp/replicache/commit/1bb8f57514f85290571577bf8aeabf33d53326c3"
        },
        "date": 1638314630855,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.17,
            "range": "±80.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.05,
            "range": "±37.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.79,
            "range": "±64.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.26,
            "range": "±58.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "56f34dbd0ca3b49551b6fd9e53ea64f67c2257ab",
          "message": "refactor: Move sync/client to persist (#737)",
          "timestamp": "2021-11-30T23:27:25Z",
          "tree_id": "fd6253a068d52e058d36ec36d7f919f194684d9e",
          "url": "https://github.com/rocicorp/replicache/commit/56f34dbd0ca3b49551b6fd9e53ea64f67c2257ab"
        },
        "date": 1638314941432,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 204.08,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.03,
            "range": "±75.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.04,
            "range": "±65.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.87,
            "range": "±46.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.31,
            "range": "±61.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7769f098922ccfaf05275834f1d179dce35f1941",
          "message": "feat: Add top level persist function (#738)\n\nThis combines the different persist steps into a single function.\r\n\r\nTowards #671",
          "timestamp": "2021-11-30T16:16:44-08:00",
          "tree_id": "a7b57fc71e057a964a7595442ddd2d42d7907619",
          "url": "https://github.com/rocicorp/replicache/commit/7769f098922ccfaf05275834f1d179dce35f1941"
        },
        "date": 1638317910722,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.08,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.02,
            "range": "±31.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.93,
            "range": "±35.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.9,
            "range": "±62.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.32,
            "range": "±60.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3774ee574c60dadfd0d1838cad772bbbd07f4d1d",
          "message": "refactor: Remove persist WriteTransformer (#739)\n\nTurns out that we can just write the chunks since we computed the hashes\r\nin an earlier step.\r\n\r\nPersist ComputeTransformer now takes over some of the work of\r\nWriteTransformer.\r\n\r\nTowards #671",
          "timestamp": "2021-11-30T16:42:02-08:00",
          "tree_id": "b2f1822cbff505e219d07816cf59e822c8a3b80f",
          "url": "https://github.com/rocicorp/replicache/commit/3774ee574c60dadfd0d1838cad772bbbd07f4d1d"
        },
        "date": 1638319513551,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.08,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.15,
            "range": "±33.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.95,
            "range": "±60.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.85,
            "range": "±43.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±57.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5aa948f4d672290172792aa86ce02d83d51c77b4",
          "message": "feat!: Include versions in IDB name (#741)\n\nFor Simplified Dueling Dags we need to ensure that different tabs\r\nrunning different versions of Replicache do not interact with IDB data\r\nit does not know how to read/write.\r\n\r\nTo achieve this the name if the IDB database now contains the\r\n`REPLICACHE_FORMAT_VERSION` (which is currently at `3`).\r\n\r\nThe IDB name also contains the `schemaVersion` som if the schema changes\r\na fresh IDB database is used. The motivation is the same. Multiple tabs\r\nwith different schemaVersions should not interact with the same IDB\r\ndatabase.\r\n\r\nBREAKING CHANGE\r\n\r\nTowards #671",
          "timestamp": "2021-12-02T11:10:18-08:00",
          "tree_id": "67017af060aaec2267e5b8a4364522faad25ad08",
          "url": "https://github.com/rocicorp/replicache/commit/5aa948f4d672290172792aa86ce02d83d51c77b4"
        },
        "date": 1638472327727,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 192.31,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.07,
            "range": "±31.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.88,
            "range": "±59.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.81,
            "range": "±67.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.32,
            "range": "±59.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "6b6d213bb554525a6834ce2cb8e5b76ebfa7f934",
          "message": "refactor: Use abstract db transformer (#744)\n\nThe old code was pretty silly and used runtime type checks. Now we use\r\nan abstract base class and static type checking.",
          "timestamp": "2021-12-02T19:40:31Z",
          "tree_id": "2f8163c1d1660a21218ef59c2eeae2a1e1e41b3c",
          "url": "https://github.com/rocicorp/replicache/commit/6b6d213bb554525a6834ce2cb8e5b76ebfa7f934"
        },
        "date": 1638474229880,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.82,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.03,
            "range": "±31.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.86,
            "range": "±56.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.71,
            "range": "±37.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±56.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9b0af12031ba19b1c27b5372ba3f18f60df2307d",
          "message": "refactor: persist test to usa a suite (#745)",
          "timestamp": "2021-12-02T20:00:31Z",
          "tree_id": "25f5e4a33cbd87f1332df015bed6c573c0e4679d",
          "url": "https://github.com/rocicorp/replicache/commit/9b0af12031ba19b1c27b5372ba3f18f60df2307d"
        },
        "date": 1638475425004,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 263.16,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 204.08,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.11,
            "range": "±31.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.88,
            "range": "±57.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.81,
            "range": "±62.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±52.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f2d0d0c6cfdbcaf351ab71b29060314bfa9f6731",
          "message": "refactor: Make commit statics module functions (#749)\n\nStatic methods are generally an anti-pattern in JS. They are sometimes\r\nnice from an API perspective, but tree shaking generally has problems\r\nwith them.\r\n\r\nThe only real valid use case I can think of is when you need to inherit\r\nstatic methods. In other words when your statics references `this`.",
          "timestamp": "2021-12-02T16:26:52-08:00",
          "tree_id": "3bd6ea9d57c96a9ad5c85867bac2be7dda672472",
          "url": "https://github.com/rocicorp/replicache/commit/f2d0d0c6cfdbcaf351ab71b29060314bfa9f6731"
        },
        "date": 1638491411405,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 256.41,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.14,
            "range": "±84.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.07,
            "range": "±50.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.94,
            "range": "±66.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.26,
            "range": "±55.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3d65d8110a477049d5b8afdbc179702e7c26434d",
          "message": "chore: Add sync head test for persist (#750)\n\nTest that the sync head is updated correctly when doing persist",
          "timestamp": "2021-12-02T16:32:36-08:00",
          "tree_id": "0cf779260f27312cb1f8897bfa61c99420160aba",
          "url": "https://github.com/rocicorp/replicache/commit/3d65d8110a477049d5b8afdbc179702e7c26434d"
        },
        "date": 1638491758444,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 212.77,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 188.68,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.75,
            "range": "±86.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.57,
            "range": "±58.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.65,
            "range": "±42.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.19,
            "range": "±55.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "alexandru_turcanu@ymail.com",
            "name": "Alexandru Turcanu",
            "username": "Pondorasti"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5d0a073a6bcc111c869219e284e4c083f3b46ad9",
          "message": "Update sample-replidraw.md (#751)",
          "timestamp": "2021-12-06T14:37:10-08:00",
          "tree_id": "2e810c3a48d20e7f48f1994dd845f02590bf0d72",
          "url": "https://github.com/rocicorp/replicache/commit/5d0a073a6bcc111c869219e284e4c083f3b46ad9"
        },
        "date": 1638830338600,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.98,
            "range": "±38.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.92,
            "range": "±33.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.82,
            "range": "±56.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.24,
            "range": "±50.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c47eff4dcd846bb28bca07308a0b572869861679",
          "message": "feat: Move all client map updating to retrying updateClients pattern that enables using async native hashing outside of perdag transaction  (#752)\n\n### Problem\r\nFor Simplified Dueling Dags we want to allow using an async native hash\r\nfunction. That means that the hash of a chunk has to be computed\r\noutside the DAG transaction (because of IDB's auto commit bug/feature).\r\n\r\nThis mostly works well on the perdag because it gets it's chunks from\r\nthe memdag using the persist function which allows us to precompute all\r\nthe hashes; **except for the hash of the clients map**.\r\n\r\n### Solution\r\nTo not require a sync hash function we instead precompute the hash of\r\nthe clients map outside the DAG transaction and then write it in the tx.\r\nHowever, by doing this there is a small chance that the clients map\r\nchanged since we mutated it and computed the hash for it. If it did\r\nchange we now retry the update clients function with the new up to date\r\nclients map.\r\n\r\nFixes #735\r\nFixes #743",
          "timestamp": "2021-12-07T19:32:44Z",
          "tree_id": "de95959cf263b0e34008ee562672f0d503e06adf",
          "url": "https://github.com/rocicorp/replicache/commit/c47eff4dcd846bb28bca07308a0b572869861679"
        },
        "date": 1638905790792,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.07,
            "range": "±88.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.81,
            "range": "±62.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.78,
            "range": "±60.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.29,
            "range": "±52.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "76e609e60595097434f969f2bed6adb343210186",
          "message": "chore: Remove dead test code (#755)\n\nThis code was left over from when we removed the weblocks test",
          "timestamp": "2021-12-07T23:33:48Z",
          "tree_id": "083182b167c6b0b43e711e0a4948d60af57d616b",
          "url": "https://github.com/rocicorp/replicache/commit/76e609e60595097434f969f2bed6adb343210186"
        },
        "date": 1638920229581,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 200,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.08,
            "range": "±82.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.91,
            "range": "±37.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.85,
            "range": "±66.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.18,
            "range": "±51.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "958734ed575e55a648d42e873e22e2573780a4b9",
          "message": "chore: Split replicache.test.ts (#756)\n\nIt was getting too large. This breaks out all the tests that contains\r\n'subscribe'/'subscription' in their title.",
          "timestamp": "2021-12-08T00:03:38Z",
          "tree_id": "90f1462f5f0caaf2fbd719269f7bd8520bad86be",
          "url": "https://github.com/rocicorp/replicache/commit/958734ed575e55a648d42e873e22e2573780a4b9"
        },
        "date": 1638921919076,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.21,
            "range": "±64.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.81,
            "range": "±58.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.84,
            "range": "±47.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.33,
            "range": "±62.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83a4a1e607421a6aa3b323ab02a28b06d7c4d9cb",
          "message": "fix: Subscriptions with errors never recovered (#757)\n\nEven if we get an exception calling the subscription query body we need\r\nto keep track of the keys.\r\n\r\nCloses #754",
          "timestamp": "2021-12-08T00:22:28Z",
          "tree_id": "c74ca1d0671acdad2808cb513113ba24803895c7",
          "url": "https://github.com/rocicorp/replicache/commit/83a4a1e607421a6aa3b323ab02a28b06d7c4d9cb"
        },
        "date": 1638923046604,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 196.08,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.25,
            "range": "±78.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.76,
            "range": "±54.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.77,
            "range": "±63.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.29,
            "range": "±60.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "279fb79df9bd862bdc9ed03a3a746e638d34035d",
          "message": "chore: Remove prolly/",
          "timestamp": "2021-12-09T11:41:44-08:00",
          "tree_id": "9ef5aae8289c0968bb4c7549d420673f1091376e",
          "url": "https://github.com/rocicorp/replicache/commit/279fb79df9bd862bdc9ed03a3a746e638d34035d"
        },
        "date": 1639079011838,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 166.67,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.14,
            "range": "±70.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 4.99,
            "range": "±102.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.86,
            "range": "±55.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±55.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ae89eca17baa249a8b68796f8a120ea34deac58a",
          "message": "fix: Incorrect ref count (#761)\n\nIf there is a diamond shape (or similar) we could end up writing a stale\r\nref count.\r\n\r\nThis happened because we read the ref count async and when that resolves\r\nwe end up with the same ref count in more than one possible execution of\r\nchangeRefCount and the ref count gets modified and written in both those\r\ncalls to changeRefCount.\r\n\r\nBy only loading the ref count once, and after that only operate on the\r\ncache we can ensure we are always working with the up to data ref count.",
          "timestamp": "2021-12-10T11:52:03-08:00",
          "tree_id": "92db6a93979b5f1e49d72d3dc61bb6904f79c242",
          "url": "https://github.com/rocicorp/replicache/commit/ae89eca17baa249a8b68796f8a120ea34deac58a"
        },
        "date": 1639166027291,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.2,
            "range": "±75.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.12,
            "range": "±73.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.86,
            "range": "±81.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.32,
            "range": "±54.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "distinct": true,
          "id": "bedf419842d30445c1174b61f0cc3a88ea34c2b2",
          "message": "comments: Forgot to commit these comments\n\nFollow up to ae89eca17baa249a8b68796f8a120ea34deac58a",
          "timestamp": "2021-12-10T12:33:23-08:00",
          "tree_id": "08d9ed444b0bf8f0fa41b8c172e1ec1678f491ea",
          "url": "https://github.com/rocicorp/replicache/commit/bedf419842d30445c1174b61f0cc3a88ea34c2b2"
        },
        "date": 1639168789259,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±7.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 185.19,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.17,
            "range": "±40.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.03,
            "range": "±76.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.92,
            "range": "±82.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.28,
            "range": "±65.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b727a6d23cfeea645a52c3a30d9e4ef78b2c03a1",
          "message": "chore: Build a minified bundle too (#763)\n\nThis is only used in the dashboard and it is not included in the npm\r\npackage (at the moment).",
          "timestamp": "2021-12-10T21:29:22Z",
          "tree_id": "9bd0d788c81a930cfe55e25e23275261242e377f",
          "url": "https://github.com/rocicorp/replicache/commit/b727a6d23cfeea645a52c3a30d9e4ef78b2c03a1"
        },
        "date": 1639171861443,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 175.44,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 9.2,
            "range": "±32.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.08,
            "range": "±76.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.69,
            "range": "±76.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.24,
            "range": "±68.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2ce13a01e35b7d485008d516d573be0242d7bf3e",
          "message": "chore: Remove endian functions (#764)\n\nNo longer used",
          "timestamp": "2021-12-10T21:42:55Z",
          "tree_id": "b6094484cc8895ce1c1a95a539e33ad8e68fde81",
          "url": "https://github.com/rocicorp/replicache/commit/2ce13a01e35b7d485008d516d573be0242d7bf3e"
        },
        "date": 1639172674661,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 178.57,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 181.82,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.98,
            "range": "±83.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.07,
            "range": "±75.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.91,
            "range": "±91.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.21,
            "range": "±51.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3aa8064fcfef6b42a6ae6966360215d7101faf26",
          "message": "feat: Add slurp function (#762)\n\nThis walks a dag from a commit and copies the chunks over to another\r\ndag.\r\n\r\nTowards #671",
          "timestamp": "2021-12-10T22:03:19Z",
          "tree_id": "d71f446d95d3369c37d417f95ec8fd2a75512545",
          "url": "https://github.com/rocicorp/replicache/commit/3aa8064fcfef6b42a6ae6966360215d7101faf26"
        },
        "date": 1639173896080,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 222.22,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 178.57,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 8.79,
            "range": "±38.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 5.08,
            "range": "±45.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 3.81,
            "range": "±72.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.27,
            "range": "±56.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "26ef0cf8b43da04dbd67413b21d3fc6dedeb77eb",
          "message": "feat: Add persist to Replicache (#753)\n\nSee Simplified Dueling Dags design doc\r\n\r\nReplicache now creates two DAG stores backed by two different KV stores.\r\nThese are referred to as `memdag` and `perdag`.\r\n\r\nReplicache operates on the memdag and once in a while it does a persist\r\nwhich syncs data from the memdag to the perdag.\r\n\r\nTowards #671",
          "timestamp": "2021-12-10T15:11:23-08:00",
          "tree_id": "0c1216d38ded7f3855b145a64c3581f79b6124f2",
          "url": "https://github.com/rocicorp/replicache/commit/26ef0cf8b43da04dbd67413b21d3fc6dedeb77eb"
        },
        "date": 1639178018780,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 23.2,
            "range": "±52.4%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.53,
            "range": "±79.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 7.66,
            "range": "±27.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.06,
            "range": "±61.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 256.41,
            "range": "±81.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.46,
            "range": "±56.5%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.41,
            "range": "±72.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.06,
            "range": "±37.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.98,
            "range": "±53.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "abf8eccba602014745c95e0b47775b3310eb335a",
          "message": "feat!: Make ReplicacheOptions name required (#759)\n\nIt is important to not use a generic default name if you ever intend to\r\nallow Replicache to be used by multiple users on the same machine.\r\nTherefore remove the default name value.\r\n\r\nBREAKING CHANGE\r\n\r\nFixes #742",
          "timestamp": "2021-12-10T23:21:06Z",
          "tree_id": "b26246137ba42d1910ef6b04b161c222bea23eea",
          "url": "https://github.com/rocicorp/replicache/commit/abf8eccba602014745c95e0b47775b3310eb335a"
        },
        "date": 1639178598454,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 250,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.51,
            "range": "±76.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.08,
            "range": "±29.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 7.88,
            "range": "±30.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4,
            "range": "±71.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 263.16,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.61,
            "range": "±55.4%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.98,
            "range": "±74.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.87,
            "range": "±39.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.01,
            "range": "±37.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7ca403125d598b8eb8d3671ea83c3c2b2855d2ff",
          "message": "refactor: Extract interface for dag.Store,dag.Read, and dag.Write (#766)\n\nIn preparation for adding a dag.LazyStore implementation, extract an interface for the dag Store.  \r\n\r\nTowards #671",
          "timestamp": "2021-12-16T09:32:38-08:00",
          "tree_id": "6d10b94ba47235b41af5e19ba3998333e5b55e30",
          "url": "https://github.com/rocicorp/replicache/commit/7ca403125d598b8eb8d3671ea83c3c2b2855d2ff"
        },
        "date": 1639676231620,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±3.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.18,
            "range": "±54.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.32,
            "range": "±75.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.51,
            "range": "±44.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 336.75,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.18,
            "range": "±43.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 270.27,
            "range": "±13.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 256.41,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 22.3,
            "range": "±76.6%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.56,
            "range": "±79.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.87,
            "range": "±32.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±7.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.04,
            "range": "±62.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c64a26a30accc9e1aac2b90f306d6edfdb728534",
          "message": "refactor: move getSizeOfValue from src/btree/ to src/json.ts (#770)\n\n### Problem\r\n`getSizeOfValue` is needed by the upcoming Lazy DagStore for Simplified Dueling Dags.  It is needed for implementing LRU caching with a size limit.  However the dag/ directory should not depend on the btree/ directory, as dag is at a lower abstraction layer than btree.\r\n\r\n### Solution\r\nMove `getSizeOfValue` to src/json.ts.  This is a logic place of the function as it computes the size of a `ReadonlyJsonValue`.",
          "timestamp": "2021-12-17T11:01:26-08:00",
          "tree_id": "c310dedbfe7bda117d86d546c5814edd6a79ac13",
          "url": "https://github.com/rocicorp/replicache/commit/c64a26a30accc9e1aac2b90f306d6edfdb728534"
        },
        "date": 1639767828840,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 250,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 22.45,
            "range": "±76.2%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.27,
            "range": "±71.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.46,
            "range": "±46.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.18,
            "range": "±71.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 263.16,
            "range": "±4.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 238.1,
            "range": "±73.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.56,
            "range": "±53.8%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.91,
            "range": "±61.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.36,
            "range": "±40.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.96,
            "range": "±50.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "077a5da788bd1940afd0325a4cefe15ec1be7f0e",
          "message": "refactor: Split readCommit into readCommit/readCommitForBTreeRead/readCommitForBTreeWrite to avoid duck-typing (#767)\n\nThis allows us to get rid of some ugly runtime duck-typing.",
          "timestamp": "2021-12-17T11:11:30-08:00",
          "tree_id": "c9bb40821a972b0319ea8e35c013a53afb8f2854",
          "url": "https://github.com/rocicorp/replicache/commit/077a5da788bd1940afd0325a4cefe15ec1be7f0e"
        },
        "date": 1639768552710,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.46,
            "range": "±51.9%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.41,
            "range": "±77.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.57,
            "range": "±42.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.27,
            "range": "±41.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±3.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 256.41,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.75,
            "range": "±57.4%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.41,
            "range": "±73.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.84,
            "range": "±26.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.14,
            "range": "±71.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "fae7daffaa5f5ce72b8062458dc433a9e770ef2e",
          "message": "refactor: Extract ref count updating logic out of dag WriteImpl so it can be reused by lazy dag store. (#769)\n\nPulls Garbage Collection logic into its own module, so that it can be shared with the upcoming lazy dag store implementation for Simplified Dueling Dags.\r\n\r\nInterface:\r\n```ts\r\nexport type HeadChange = {\r\n  new: Hash | undefined;\r\n  old: Hash | undefined;\r\n};\r\n\r\nexport type RefCountUpdates = Map<Hash, number>;\r\n\r\nexport interface GarbageCollectionDelegate {\r\n  getRefCount: (hash: Hash) => Promise<number>;\r\n  getRefs: (hash: Hash) => Promise<readonly Hash[] | undefined>;\r\n}\r\n\r\n/**\r\n * Computes how ref counts should be updated when a dag write is commited.\r\n * Does not modify the dag store.\r\n * @param headChanges Heads that were changed by the dag write.\r\n * @param putChunks Chunks that were put by the dag write.\r\n * @param delegate Delegate used for loading ref information from the dag store.\r\n * @returns Map from chunk Hash to new ref count.  Chunks with a new ref count of 0 should\r\n * be deleted.  All hashes in `putChunks` will have an entry (which will be zero if a\r\n * newly put chunk is not reachable from any head).\r\n */\r\nexport async function computeRefCountUpdates(\r\n  headChanges: Iterable<HeadChange>,\r\n  putChunks: ReadonlySet<Hash>,\r\n  delegate: GarbageCollectionDelegate,\r\n): Promise<RefCountUpdates> \r\n```\r\n\r\nPart of #671",
          "timestamp": "2021-12-17T11:39:13-08:00",
          "tree_id": "54cdf820fe49a32f66bf97d9200d7901add7d24a",
          "url": "https://github.com/rocicorp/replicache/commit/fae7daffaa5f5ce72b8062458dc433a9e770ef2e"
        },
        "date": 1639770083472,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 250,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 23.03,
            "range": "±58.5%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.43,
            "range": "±56.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.36,
            "range": "±34.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.03,
            "range": "±55.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 250,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 22.14,
            "range": "±54.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.31,
            "range": "±64.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.46,
            "range": "±42.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 295.93,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.02,
            "range": "±59.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a3887061c3dacf4f9803dc3c8d98d815b22bad88",
          "message": "Remove wasm hash (#765)\n\nThis removes wasm hash\r\n\r\nWe no longer use sync hashing so we can use the local native hash functions.",
          "timestamp": "2022-01-10T15:09:26+01:00",
          "tree_id": "a59608e16bc306f0649bca1cb3a9b3f8914d75bc",
          "url": "https://github.com/rocicorp/replicache/commit/a3887061c3dacf4f9803dc3c8d98d815b22bad88"
        },
        "date": 1641824065578,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 555.56,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 227.27,
            "range": "±92.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 19.73,
            "range": "±19.4%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.74,
            "range": "±32.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.02,
            "range": "±36.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.05,
            "range": "±44.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±7.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21,
            "range": "±61.9%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10,
            "range": "±66.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.1,
            "range": "±39.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.81,
            "range": "±58.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "7bc61066df2cb4402d5bb75895a4ab6691d1c564",
          "message": "feat: Simplified Dueling Dags - Implement a dag.LazyStore for memdag (#771)\n\nImplements a DAG Store which lazily loads values from a source store and then caches \r\nthem in an LRU cache.  The memory cache for chunks from the source store\r\nsize is limited to `sourceCacheSizeLimit` bytes, and values are evicted in an LRU\r\nfashion.  **The purpose of this store is to avoid holding the entire client view\r\n(i.e. the source store's content) in each client tab's JavaScript heap.**\r\n\r\nThis store's heads are independent from the heads of source store, and are only\r\nstored in memory.\r\n\r\nChunks which are put with a temp hash (see `isTempHash`) are assumed to not be\r\npersisted to the source store and thus are cached separately from the source store\r\nchunks.  These temp chunks cannot be evicted, and their sizes are not counted\r\ntowards the source chunk cache size.  A temp chunk will be deleted if it is no longer\r\nreachable from one of this store's heads.\r\n\r\nWrites only manipulate the in memory state of this store and do not alter the source\r\nstore.  Thus values must be written to the source store through a separate process \r\n(see persist implemented in 7769f09).\r\n\r\nIntended use:\r\n\r\n1. source store is the 'perdag', a slower persistent store (i.e. dag.StoreImpl using a kv.IDBStore)\r\n2. this store's 'main' head is initialized to the hash of a chunk containing a snapshot \r\ncommit in the 'perdag'\r\n3. reads from this store lazily read chunks from the source store and cache them\r\n4. writes are initially made to this store using temp hashes (i.e. temp chunks)\r\n5. writes are asynchronously persisted to the perdag through a separate process.  \r\nSee persist implemented in 7769f09. This process gathers all temp chunks from this store, \r\ncomputes real hashes for them and then writes them to the perdag.  It then replaces in this \r\ndag all the temp chunks written to the source with chunks with permanent hashes and \r\nupdates heads to reference these permanent hashes instead of the temp hashes.  This \r\nresults  in the temp chunks being deleted from this store and the chunks with permanent \r\nhashes being placed in this store's LRU cache of source chunks.\r\n\r\n**Performance**\r\nOn our existing performance benchmarks outperforms the existing mem dag store \r\n( dag.StoreImpl on top of kv.MemStore).   The current benchmarks really only test \r\nperformance of the temp hashes cache though, since they don't use persist at all.  \r\nI believe this outperforms the existing mem dag store because the temp hashes cache\r\nis just a straightforward Map<Hash, Chunk>, and is thus a bit simpler than \r\ndag.StoreImpl on top of kv.MemStore which uses 3 keys per chunk.  A follow up is to \r\nadd some benchmarks that exercise persists and lazy loading.  \r\n\r\n```\r\n[greg replicache [grgbkr/ssd-lazy-dag-impl]$ npm run perf -- --format replicache\r\n\r\n> replicache@8.0.0 perf\r\n> node perf/runner.js \"--format\" \"replicache\"\r\n\r\n\r\nRunning 16 benchmarks on Chromium...\r\n[LazyDag] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=0.70/0.80/0.90/1.40 ms avg=0.73 ms (19 runs sampled)\r\n[LazyDag] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.00/1.00/1.90/3.90 ms avg=1.25 ms (17 runs sampled)\r\n[LazyDag] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/2.20/2.50/2.50 ms avg=1.97 ms (7 runs sampled)\r\n[LazyDag] populate 1024x1000 (clean, indexes: 0) 50/75/90/95%=16.40/20.60/28.70/39.00 ms avg=20.30 ms (19 runs sampled)\r\n[LazyDag] populate 1024x1000 (clean, indexes: 1) 50/75/90/95%=38.30/41.50/45.00/58.90 ms avg=43.28 ms (12 runs sampled)\r\n[LazyDag] populate 1024x1000 (clean, indexes: 2) 50/75/90/95%=47.30/48.50/71.30/71.30 ms avg=58.49 ms (9 runs sampled)\r\n[LazyDag] scan 1024x1000 50/75/90/95%=1.20/1.50/2.50/2.70 ms avg=1.49 ms (19 runs sampled)\r\n[LazyDag] create index 1024x5000 50/75/90/95%=105.80/124.90/130.50/130.50 ms avg=139.61 ms (7 runs sampled)\r\nwriteSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=0.70/0.90/1.00/1.60 ms avg=0.85 ms (19 runs sampled)\r\nwriteSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.60/2.50/4.70 ms avg=1.79 ms (16 runs sampled)\r\nwriteSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=2.20/2.30/2.40/2.40 ms avg=2.57 ms (7 runs sampled)\r\npopulate 1024x1000 (clean, indexes: 0) 50/75/90/95%=18.60/20.40/22.10/39.30 ms avg=21.08 ms (19 runs sampled)\r\npopulate 1024x1000 (clean, indexes: 1) 50/75/90/95%=38.00/45.00/50.20/59.70 ms avg=46.58 ms (11 runs sampled)\r\npopulate 1024x1000 (clean, indexes: 2) 50/75/90/95%=50.60/66.30/75.00/75.00 ms avg=63.77 ms (8 runs sampled)\r\nscan 1024x1000 50/75/90/95%=1.20/1.60/2.30/3.10 ms avg=1.53 ms (19 runs sampled)\r\ncreate index 1024x5000 50/75/90/95%=104.30/115.70/117.30/117.30 ms avg=137.03 ms (7 runs sampled)\r\nDone!\r\n```\r\n\r\nPart of #671",
          "timestamp": "2022-01-10T13:00:14-08:00",
          "tree_id": "d6d88c199e3a86698b56ca9eed390f4c34dd2e1f",
          "url": "https://github.com/rocicorp/replicache/commit/7bc61066df2cb4402d5bb75895a4ab6691d1c564"
        },
        "date": 1641848557070,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 250,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 23.14,
            "range": "±58.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.68,
            "range": "±37.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 7.7,
            "range": "±24.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±8.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.11,
            "range": "±63.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±4.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.14,
            "range": "±51.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.69,
            "range": "±28.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.47,
            "range": "±41.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.01,
            "range": "±73.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "815731dc5d2cfe1e0bcc89234c2a5a7362f44b80",
          "message": "refactor: Also rename nativeHashOfClients (#774)\n\nFollow up to a388706",
          "timestamp": "2022-01-11T10:32:29Z",
          "tree_id": "d12b4ee580478bf5c9aa4961d4b41c4beccf6cff",
          "url": "https://github.com/rocicorp/replicache/commit/815731dc5d2cfe1e0bcc89234c2a5a7362f44b80"
        },
        "date": 1641897292780,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.99,
            "range": "±49.2%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 9.99,
            "range": "±32.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 7.94,
            "range": "±34.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 305.18,
            "range": "±4.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.22,
            "range": "±144.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 208.33,
            "range": "±103.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.14,
            "range": "±18.9%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.07,
            "range": "±16.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.95,
            "range": "±39.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.98,
            "range": "±83.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1ad995e550c175b8513cec6475617d84ece16494",
          "message": "chore: Update esbuild to 0.14.11 (#776)\n\nGets some enum inlining",
          "timestamp": "2022-01-11T14:42:37Z",
          "tree_id": "1c8343854d3cc93b349212b5b60702c626b7e5f5",
          "url": "https://github.com/rocicorp/replicache/commit/1ad995e550c175b8513cec6475617d84ece16494"
        },
        "date": 1641912297608,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±6.5%",
            "unit": "ops/sec",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 263.16,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 23.2,
            "range": "±49.7%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 9.95,
            "range": "±27.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.17,
            "range": "±40.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.05,
            "range": "±30.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±5.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 22.25,
            "range": "±20.3%",
            "unit": "MB/s",
            "extra": "10 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.29,
            "range": "±18.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.14,
            "range": "±36.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.18,
            "range": "±68.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "anotherjesse@gmail.com",
            "name": "Jesse Andrews",
            "username": "anotherjesse"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "d59496c5f0a4ff701078a5e4704d3d70b1454222",
          "message": "Update conclusion guide to point to replidraw2\n\nreplidraw.vercel.app is now a page saying \"This was left to be taken over.\"",
          "timestamp": "2022-01-11T08:49:22-08:00",
          "tree_id": "2d5fcca50a24f2d119f17938a199898c3243b8f3",
          "url": "https://github.com/rocicorp/replicache/commit/d59496c5f0a4ff701078a5e4704d3d70b1454222"
        },
        "date": 1641920058238,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±7.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.05,
            "range": "±50.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 9.86,
            "range": "±33.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.07,
            "range": "±36.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 325.52,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.91,
            "range": "±67.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±76.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.18,
            "range": "±47.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.71,
            "range": "±41.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.83,
            "range": "±40.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.13,
            "range": "±67.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "2b73b931967d8f435ddd4eecb60f03e836ca4718",
          "message": "Nit: it's still called Replidraw",
          "timestamp": "2022-01-11T06:55:48-10:00",
          "tree_id": "6291206e764598c1fcb0caafc1752bc96a277056",
          "url": "https://github.com/rocicorp/replicache/commit/2b73b931967d8f435ddd4eecb60f03e836ca4718"
        },
        "date": 1641920298178,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.61,
            "range": "±51.3%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.76,
            "range": "±41.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 7.64,
            "range": "±27.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 315.02,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.98,
            "range": "±65.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 588.24,
            "range": "±7.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 250,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.52,
            "range": "±53.9%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 11.16,
            "range": "±45.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.72,
            "range": "±32.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.95,
            "range": "±88.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dfb20a2afd9c3c9155e17dec2ad5480d4eee2d89",
          "message": "chore: Update docusaurus and algolia (#779)",
          "timestamp": "2022-01-13T14:31:53+01:00",
          "tree_id": "7749cb3e98826b2c248afce04b7f758fa37af28f",
          "url": "https://github.com/rocicorp/replicache/commit/dfb20a2afd9c3c9155e17dec2ad5480d4eee2d89"
        },
        "date": 1642080994084,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 20.78,
            "range": "±51.3%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 9.99,
            "range": "±32.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.38,
            "range": "±41.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 336.75,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 3.94,
            "range": "±79.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 232.56,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.85,
            "range": "±54.8%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.92,
            "range": "±32.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.25,
            "range": "±34.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.03,
            "range": "±60.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c685a9a90ae87cafe3ee3c15b4e47f65978c5784",
          "message": "feat: Simplified Dueling Dags - Integrate dag.LazyStore into Replicache (#777)\n\nUpdate Replicache to use new dag.LazyStore (implemented in 7bc6106) for the memdag.  \r\nReplace use of dag.StoreImpl on top of kv.MemStore.  Lazy loading is now used instead of\r\nslurp.\r\n\r\n**Performance**\r\nOutperforms dag.StoreImpl on top of kv.MemStore with slurp on all existing benchmarks.  \r\nAlso outperforms slurp on WIP benchmark for startup from persistent storage when the \r\namount of data stored is > ~4MB.\r\n\r\nIn the below output lines starting with `[LazyStore]` are with LazyStore and the other lines are with dag.StoreImpl on top of kv.MemStore using slurp (this was done with a small local patch for comparing).\r\n\r\n```\r\ngreg replicache [grgbkr/ssd-startup-benchmark-on-checked-in-code]$ npm run perf -- --format replicache\r\n\r\n> replicache@8.0.0 perf\r\n> node perf/runner.js \"--format\" \"replicache\"\r\n\r\nRunning 40 benchmarks on Chromium...\r\n[LazyStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=0.60/0.70/0.80/1.50 ms avg=0.69 ms (19 runs sampled)\r\n[LazyStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.00/1.20/1.30/1.60 ms avg=1.16 ms (11 runs sampled)\r\n[LazyStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/1.60/2.20/2.20 ms avg=1.76 ms (7 runs sampled)\r\n[LazyStore] populate 1024x1000 (clean, indexes: 0) 50/75/90/95%=83.60/86.10/137.30/137.30 ms avg=110.81 ms (7 runs sampled)\r\n[LazyStore] populate 1024x1000 (clean, indexes: 1) 50/75/90/95%=36.90/47.60/53.70/56.60 ms avg=44.20 ms (12 runs sampled)\r\n[LazyStore] populate 1024x1000 (clean, indexes: 2) 50/75/90/95%=45.30/51.20/67.70/67.70 ms avg=57.71 ms (9 runs sampled)\r\n[LazyStore] scan 1024x1000 50/75/90/95%=1.20/1.50/2.20/2.70 ms avg=1.43 ms (19 runs sampled)\r\n[LazyStore] create index 1024x5000 50/75/90/95%=95.00/101.50/106.50/106.50 ms avg=124.14 ms (7 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x100 stored 50/75/90/95%=9.50/10.20/10.50/10.60 ms avg=10.72 ms (19 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x1000 stored 50/75/90/95%=25.90/26.40/26.80/27.10 ms avg=28.57 ms (18 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x2000 stored 50/75/90/95%=27.10/28.30/32.90/84.10 ms avg=35.00 ms (15 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x3000 stored 50/75/90/95%=27.90/28.50/33.00/35.60 ms avg=31.82 ms (16 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x4000 stored 50/75/90/95%=27.90/34.40/46.10/61.50 ms avg=36.80 ms (14 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x5000 stored 50/75/90/95%=27.50/29.90/30.20/40.20 ms avg=31.90 ms (16 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x6000 stored 50/75/90/95%=31.20/56.90/63.60/77.90 ms avg=47.06 ms (11 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x7000 stored 50/75/90/95%=27.70/55.00/57.40/61.10 ms avg=42.12 ms (12 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x8000 stored 50/75/90/95%=30.10/42.70/77.90/78.80 ms avg=43.28 ms (12 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x9000 stored 50/75/90/95%=28.50/29.00/32.30/43.70 ms avg=33.43 ms (15 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x10000 stored 50/75/90/95%=28.30/28.70/29.20/36.10 ms avg=32.13 ms (16 runs sampled)\r\n[LazyStore] startup read 1024x100 from 1024x100000 stored 50/75/90/95%=54.60/67.10/72.20/72.20 ms avg=73.43 ms (7 runs sampled)\r\nwriteSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=0.70/0.90/1.00/1.50 ms avg=0.83 ms (19 runs sampled)\r\nwriteSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=1.40/2.30/2.80/4.90 ms avg=2.12 ms (11 runs sampled)\r\nwriteSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub 50/75/90/95%=2.10/2.90/2.90/2.90 ms avg=2.60 ms (7 runs sampled)\r\npopulate 1024x1000 (clean, indexes: 0) 50/75/90/95%=70.60/90.90/112.40/112.40 ms avg=91.83 ms (7 runs sampled)\r\npopulate 1024x1000 (clean, indexes: 1) 50/75/90/95%=34.60/47.30/54.50/56.60 ms avg=43.95 ms (12 runs sampled)\r\npopulate 1024x1000 (clean, indexes: 2) 50/75/90/95%=47.50/48.70/67.40/67.40 ms avg=59.67 ms (9 runs sampled)\r\nscan 1024x1000 50/75/90/95%=1.20/1.50/2.20/2.80 ms avg=1.48 ms (19 runs sampled)\r\ncreate index 1024x5000 50/75/90/95%=99.60/106.30/109.60/109.60 ms avg=129.09 ms (7 runs sampled)\r\nstartup read 1024x100 from 1024x100 stored 50/75/90/95%=9.00/9.40/9.70/9.70 ms avg=9.91 ms (19 runs sampled)\r\nstartup read 1024x100 from 1024x1000 stored 50/75/90/95%=14.00/14.40/15.10/15.30 ms avg=15.51 ms (19 runs sampled)\r\nstartup read 1024x100 from 1024x2000 stored 50/75/90/95%=19.10/20.00/28.60/93.00 ms avg=25.45 ms (19 runs sampled)\r\nstartup read 1024x100 from 1024x3000 stored 50/75/90/95%=26.70/28.10/29.80/64.60 ms avg=31.74 ms (16 runs sampled)\r\nstartup read 1024x100 from 1024x4000 stored 50/75/90/95%=31.60/33.20/35.10/37.10 ms avg=36.14 ms (14 runs sampled)\r\nstartup read 1024x100 from 1024x5000 stored 50/75/90/95%=54.30/55.10/114.20/114.20 ms avg=73.50 ms (7 runs sampled)\r\nstartup read 1024x100 from 1024x6000 stored 50/75/90/95%=62.20/94.20/97.10/97.10 ms avg=82.19 ms (7 runs sampled)\r\nstartup read 1024x100 from 1024x7000 stored 50/75/90/95%=55.20/90.60/94.00/94.00 ms avg=77.96 ms (7 runs sampled)\r\nstartup read 1024x100 from 1024x8000 stored 50/75/90/95%=57.80/62.30/63.20/63.20 ms avg=69.91 ms (8 runs sampled)\r\nstartup read 1024x100 from 1024x9000 stored 50/75/90/95%=66.30/80.30/111.00/111.00 ms avg=89.51 ms (7 runs sampled)\r\nstartup read 1024x100 from 1024x10000 stored 50/75/90/95%=82.10/89.40/114.30/114.30 ms avg=101.73 ms (7 runs sampled)\r\nstartup read 1024x100 from 1024x100000 stored 50/75/90/95%=638.90/645.50/675.20/675.20 ms avg=805.41 ms (7 runs sampled)\r\n```\r\n\r\n\r\nPart of #671",
          "timestamp": "2022-01-13T16:42:00Z",
          "tree_id": "369435529f4fffdc3b64fefc2c95531892f6ad5c",
          "url": "https://github.com/rocicorp/replicache/commit/c685a9a90ae87cafe3ee3c15b4e47f65978c5784"
        },
        "date": 1642092286128,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 22.87,
            "range": "±42.8%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.14,
            "range": "±15.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.23,
            "range": "±45.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 348.77,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.27,
            "range": "±73.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.56,
            "range": "±43.3%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.71,
            "range": "±28.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.21,
            "range": "±38.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 375.6,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.31,
            "range": "±79.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b770a25b38b5660978475c1c6180238c8f3b30fa",
          "message": "refactor: Delete unused slurp and merge kv.MemStore into kv.TestMemStore (#778)\n\nWith the integration of dag.LazyStore slurp is no longer used, and kv.MemStore is only \r\nused via kv.TestMemStore in tests.",
          "timestamp": "2022-01-13T16:46:23Z",
          "tree_id": "ad9557b50cc861bb2572061f5ec2ca19242b6184",
          "url": "https://github.com/rocicorp/replicache/commit/b770a25b38b5660978475c1c6180238c8f3b30fa"
        },
        "date": 1642092692996,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 416.67,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±6.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 18.74,
            "range": "±38.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 11.38,
            "range": "±38.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 7.96,
            "range": "±32.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 361.69,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.18,
            "range": "±63.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±10.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.51,
            "range": "±69.6%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.79,
            "range": "±65.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.3,
            "range": "±60.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.27,
            "range": "±41.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "b328e1b9dc1dd5c9a9772a1c54be386f43facde6",
          "message": "Adds a timestamp field to mutations.\n\nNote: Format change. Not changing REPLICACHE_FORMAT_VERSION constant\nbecause we should only do so once per release by policy, so that\nshould be something we do during release.",
          "timestamp": "2022-01-13T15:14:57-10:00",
          "tree_id": "fbcc9161c769af14eb09bbd0e143e1aac9ec66aa",
          "url": "https://github.com/rocicorp/replicache/commit/b328e1b9dc1dd5c9a9772a1c54be386f43facde6"
        },
        "date": 1642123044306,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.7,
            "range": "±40.6%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.39,
            "range": "±18.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.24,
            "range": "±27.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 348.77,
            "range": "±9.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.12,
            "range": "±118.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.9,
            "range": "±66.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.87,
            "range": "±68.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.12,
            "range": "±28.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.33,
            "range": "±72.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "875ff1a992cb7c2dc0d90c4ccfe0d7f2bece8c10",
          "message": "refactor: inline call to scan (#782)",
          "timestamp": "2022-01-14T15:13:21Z",
          "tree_id": "821548d06d6a0751e724d5e3a4cec69d62c46b67",
          "url": "https://github.com/rocicorp/replicache/commit/875ff1a992cb7c2dc0d90c4ccfe0d7f2bece8c10"
        },
        "date": 1642173373833,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 416.67,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±0.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 19.57,
            "range": "±36.5%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.33,
            "range": "±24.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.26,
            "range": "±44.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 361.69,
            "range": "±6.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.18,
            "range": "±74.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±6.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.46,
            "range": "±63.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.58,
            "range": "±29.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.86,
            "range": "±19.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.2,
            "range": "±44.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ce2baacce6723f0323a6016d30c383caf6bdaa1b",
          "message": "feat: Add benchmarks for startup from persisted state  (#780)\n\nAdd two benchmarks for startup from persisted state based on the Replicache performance envelope (#595).\r\n\r\n1. Init replicache and read 100 KB of data from 100 MB of persisted state using `get`s of random keys.\r\n2. Init replicache and read 100 KB of data from 100 MB of persisted state using `scan` starting at a random key.",
          "timestamp": "2022-01-14T18:42:39Z",
          "tree_id": "8b5dd619bc07989b24c6aac25d82a4f7d8318423",
          "url": "https://github.com/rocicorp/replicache/commit/ce2baacce6723f0323a6016d30c383caf6bdaa1b"
        },
        "date": 1642185963165,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 416.67,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 20.01,
            "range": "±69.4%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.61,
            "range": "±74.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8,
            "range": "±28.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 375.6,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.23,
            "range": "±68.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±4.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.89,
            "range": "±39.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.89,
            "range": "±26.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.26,
            "range": "±48.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.08,
            "range": "±70.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.84,
            "range": "±123.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.79,
            "range": "±7.1%",
            "unit": "MB/s",
            "extra": "18 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "6389906ff304c1df117d6c8df64168f3ace49433",
          "message": "Remove unused public field `now`.\n\nWas accidentally introduced in b328e1b9dc1dd5c9a9772a1c54be386f43facde6.",
          "timestamp": "2022-01-14T09:42:49-10:00",
          "tree_id": "0da9982524ffbe52004f2a6b96a4c88abd306b6a",
          "url": "https://github.com/rocicorp/replicache/commit/6389906ff304c1df117d6c8df64168f3ace49433"
        },
        "date": 1642189755156,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 21.9,
            "range": "±73.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 10.5,
            "range": "±65.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 7.98,
            "range": "±30.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 348.77,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.26,
            "range": "±74.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 416.67,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.22,
            "range": "±38.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 11.46,
            "range": "±33.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.96,
            "range": "±26.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.19,
            "range": "±72.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.91,
            "range": "±135.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 4.07,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "392daf1054735a3e92bcb1aa3e5f7df8f0f649d7",
          "message": "chore: Reenable testing in WebKit (#786)\n\nWith updated deps the test runner works again",
          "timestamp": "2022-01-17T14:04:10Z",
          "tree_id": "b03fa1b4476a482f3db2810c0911a3cf31a39db2",
          "url": "https://github.com/rocicorp/replicache/commit/392daf1054735a3e92bcb1aa3e5f7df8f0f649d7"
        },
        "date": 1642428474012,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "[MemStore] writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 454.55,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 0)",
            "value": 20.26,
            "range": "±39.8%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 1)",
            "value": 11.1,
            "range": "±28.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] populate 1024x1000 (clean, indexes: 2)",
            "value": 8.09,
            "range": "±34.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "[MemStore] scan 1024x1000",
            "value": 375.6,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "[MemStore] create index 1024x5000",
            "value": 4.28,
            "range": "±73.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.14,
            "range": "±41.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.31,
            "range": "±34.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.88,
            "range": "±29.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 375.6,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.17,
            "range": "±39.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.9,
            "range": "±142.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 4.19,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "25925524c1ed8ef02d1f918f09f38f0d9d18426c",
          "message": "chore: remove useMemstore from perf (#787)\n\nI printed MemStore so we would have some overlap in the perf graphs",
          "timestamp": "2022-01-17T15:40:45+01:00",
          "tree_id": "5f6d3bbbd8747c4ccb5838b49f448319408f6d1d",
          "url": "https://github.com/rocicorp/replicache/commit/25925524c1ed8ef02d1f918f09f38f0d9d18426c"
        },
        "date": 1642430589572,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.38,
            "range": "±37.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 11.25,
            "range": "±26.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.95,
            "range": "±33.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 390.63,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 4.24,
            "range": "±75.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.87,
            "range": "±136.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.6,
            "range": "±149.9%",
            "unit": "MB/s",
            "extra": "17 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c580626bbc774f957a156bea67c0bc333faa8edc",
          "message": "chore: Remove typedoc dependency (#788)\n\nIt is only used from doc/ now and doc/ has its own package.json",
          "timestamp": "2022-01-20T15:17:49+01:00",
          "tree_id": "e9e4603413cfa2e13a0d2c0179b1c802d5fad49c",
          "url": "https://github.com/rocicorp/replicache/commit/c580626bbc774f957a156bea67c0bc333faa8edc"
        },
        "date": 1642688450745,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.5,
            "range": "±48.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.44,
            "range": "±38.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 6.96,
            "range": "±36.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.53,
            "range": "±103.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.66,
            "range": "±203.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.81,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a2d4a74471b8a34258f0b890e5d084727178f141",
          "message": "doc: client view cannot be a function of clientID (#790)\n\nclient view cannot be a function of clientID since we fork an existing\r\nclient view and create a new client with the same client view but a new\r\nclient id.\r\n\r\ncloses #789",
          "timestamp": "2022-01-25T11:49:27+01:00",
          "tree_id": "08df3a6ca33ecd72182ec1790d9cad8bd810eb69",
          "url": "https://github.com/rocicorp/replicache/commit/a2d4a74471b8a34258f0b890e5d084727178f141"
        },
        "date": 1643107967223,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±3.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.31,
            "range": "±40.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.61,
            "range": "±41.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.13,
            "range": "±28.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.68,
            "range": "±67.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.77,
            "range": "±146.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.77,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "17 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "7b11da7752680afe9a7779f57cbf531dec110e49",
          "message": "Bump version to 9.0.0-beta.0.",
          "timestamp": "2022-01-25T17:59:42-10:00",
          "tree_id": "818871428e210fd8638dea919044d7e785e2298c",
          "url": "https://github.com/rocicorp/replicache/commit/7b11da7752680afe9a7779f57cbf531dec110e49"
        },
        "date": 1643169778016,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 625,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.1,
            "range": "±43.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.2,
            "range": "±15.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.33,
            "range": "±43.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.72,
            "range": "±45.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.78,
            "range": "±152.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.54,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "17 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "931c9bb00d2667a0ea2ab98ce5fd22d4a775a85e",
          "message": "feat: Simplified Dueling Dags - Mutation Recover - Add mutationID and  lastServerAckdMutationID to Client. (#792)\n\nAdd `mutationID` and  `lastServerAckdMutationID` to `Client` and update `initClient` and `persist` to\r\nwrite them appropriately.  These new fields will be used by other clients to determine if a client has \r\npending mutations (persisted local mutations unacknowledged by the server) that it can push on the \r\nother client's behalf.  We will refer to this process as “mutation recovery”, as one client is recovering the\r\n mutations of another client, by reading them from the other client’s perdag stage and pushing on the \r\nother client’s behalf. \r\n\r\nSee [Mutation Recovery design](https://www.notion.so/Mutation-Recovery-Avoiding-Mutation-Loss-using-PerDag-state-f54025b52cbc435692abca3307947d15). \r\n\r\nPart of #671",
          "timestamp": "2022-01-26T10:16:01-08:00",
          "tree_id": "a651b0b7764a81fc88b50a42970476f92f615103",
          "url": "https://github.com/rocicorp/replicache/commit/931c9bb00d2667a0ea2ab98ce5fd22d4a775a85e"
        },
        "date": 1643221297279,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 277.78,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.47,
            "range": "±43.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.8,
            "range": "±73.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.29,
            "range": "±28.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.57,
            "range": "±80.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.87,
            "range": "±162.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.36,
            "range": "±28.3%",
            "unit": "MB/s",
            "extra": "13 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "60391d56ba0a4ffb1b37764a18e04033203f84ce",
          "message": "refactor!: Remove deprecated pushAuth/getPushAuth and pullAuth/getPullAuth (#796)\n\nRemoves `Replicache.getPushAuth` and `Replicache.getPullAuth` which were deprecated and replaced by `Replicache.getAuth`.\r\nRemoves `ReplicacheOptions.pushAuth` and `ReplicacheOptions.pullAuth` which were deprecated and replaced by `ReplicacheOptions.auth`. \r\n\r\nThese fields were deprecated by 9c3a49bc4b16924a3d8e0af5bbd4208156d20174, and have been deprecated since release [v6.4.0](https://github.com/rocicorp/replicache/releases/tag/v6.4.0).  \r\n \r\nThis will make some work on mutation recovery cleaner.\r\n\r\nBREAKING CHANGE: Removes `Replicache#getPushAuth` and `Replicache#getPullAuth`.  Usages should be updated to use `Replicache#getAuth`. Removes `ReplicacheOptions.pushAuth` and `ReplicacheOptions.pullAuth`.  Usages should be updated to use `ReplicacheOptions.auth`.",
          "timestamp": "2022-01-27T08:03:24-08:00",
          "tree_id": "9a04c9e9ff9b5dd5ae43a0df023b927ac4e36977",
          "url": "https://github.com/rocicorp/replicache/commit/60391d56ba0a4ffb1b37764a18e04033203f84ce"
        },
        "date": 1643299715333,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 18.67,
            "range": "±43.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.11,
            "range": "±51.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.41,
            "range": "±34.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.71,
            "range": "±71.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.73,
            "range": "±177.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.67,
            "range": "±6.3%",
            "unit": "MB/s",
            "extra": "17 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c36f0d53f711f31a095aea4a1e9b5b53b7227426",
          "message": "refactor: Extract reauth retry logic from push and pull into shared method. (#797)\n\nExtract reauth retry logic from push and pull into shared method.  This reduces duplication and also will allow for reuse of this logic for mutation recovery.",
          "timestamp": "2022-01-27T08:19:43-08:00",
          "tree_id": "1f46e28ce4482de6a95f7a34917e30afa834ba3b",
          "url": "https://github.com/rocicorp/replicache/commit/c36f0d53f711f31a095aea4a1e9b5b53b7227426"
        },
        "date": 1643300536971,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.05,
            "range": "±94.2%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.01,
            "range": "±32.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.45,
            "range": "±30.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.6,
            "range": "±72.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.76,
            "range": "±175.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.64,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "17 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "09be25008105ff50a3fb8b97effa99c0a2c65d00",
          "message": "feat: Simplified Dueling Dags - Mutation Recovery - Add an optional parameter to beingPull for disabling the creation of a sync branch from the pull response (#798)\n\nFor Mutation Recover we need to be able to pull to confirm mutations have been applied on the server by \r\nlooking at the responses `lastMutationID`, but we do not want to apply the response to the DAG.  Add an \r\noption to beginPull to not create a sync branch from the pull response.\r\n\r\nAlso add the `PullResponse` to `BeginPullResponse`, as it will be need by Mutation Recovery to get the \r\n`lastMutationID`. \r\n\r\nPart of #671",
          "timestamp": "2022-01-27T09:41:37-08:00",
          "tree_id": "e3ddf924293db282515f45b49ec9bcd548e15df3",
          "url": "https://github.com/rocicorp/replicache/commit/09be25008105ff50a3fb8b97effa99c0a2c65d00"
        },
        "date": 1643305603481,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 666.67,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.38,
            "range": "±38.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.83,
            "range": "±27.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.42,
            "range": "±26.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.82,
            "range": "±80.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.75,
            "range": "±171.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.33,
            "range": "±4.5%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "39007eaf0f075ef6535072d2cc12e16fa7386b92",
          "message": "refactor!: Update Replicache.schemaVersion to readonly. (#800)\n\nThis should always have been readonly, the schema version of a Replicache instance should be constant through out its life.   Previously modifying this had no effect.\r\n\r\nBREAKING CHANGE:  Code modifying Replicache.schemaVersion must be removed (to resolve TypeScript errors).",
          "timestamp": "2022-01-28T17:01:02Z",
          "tree_id": "4dffed004fa86f3e015f8d9d4886944fcb16d584",
          "url": "https://github.com/rocicorp/replicache/commit/39007eaf0f075ef6535072d2cc12e16fa7386b92"
        },
        "date": 1643389573656,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.85,
            "range": "±96.5%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.37,
            "range": "±18.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.83,
            "range": "±42.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±4.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.76,
            "range": "±72.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.7,
            "range": "±155.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.71,
            "range": "±7.8%",
            "unit": "MB/s",
            "extra": "17 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "8ba35ffca743d3121557939a220b31d597300c4c",
          "message": "chore: Delete change broadcast code (#801)\n\nIn the new unified storage model of simplified dueling dags changes are shared between \r\ntabs via syncing with the server.   This code is no longer needed, possibly impacting\r\nperformance and causing spurious firing of subscriptions.",
          "timestamp": "2022-01-28T12:33:57-08:00",
          "tree_id": "54b8f4d0cf89ee91da25553e5e71fcd3430e2a62",
          "url": "https://github.com/rocicorp/replicache/commit/8ba35ffca743d3121557939a220b31d597300c4c"
        },
        "date": 1643402341823,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±12.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.97,
            "range": "±44.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.37,
            "range": "±27.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.45,
            "range": "±35.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.81,
            "range": "±48.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.78,
            "range": "±164.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.89,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "18 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "d939623e76df90efdbfd0116a20201fb0d428aed",
          "message": "feat: Track Replicache IndexedDB databases in another IndexedDB database for mutation recovery and db gc. (#802)\n\n### Problem\r\nWe need to be able to find old Replicache IndexedDB databases (i.e. databases with previous schema \r\nversions or replicache format versions), so that we can recover mutations from them and also GC them.\r\n\r\n### Solution\r\nKeep track of Replicache IndexedDB databases in a IndexedDB database. \r\n\r\nUnfortunately Firefox does not implement [IDBFactory.databases](https://developer.mozilla.org/en-US/docs/Web/API/IDBFactory/databases), or we would use that api.\r\n\r\nIndexedDB is used over LocalStorage because LocalStorage's lack of concurrency control makes\r\nit very difficult to avoid write clobbering when updating a list or map.",
          "timestamp": "2022-01-28T13:13:52-08:00",
          "tree_id": "8ac31a2e70bf642e8b7aff4160a946d19abd7ada",
          "url": "https://github.com/rocicorp/replicache/commit/d939623e76df90efdbfd0116a20201fb0d428aed"
        },
        "date": 1643404585871,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.89,
            "range": "±40.3%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.99,
            "range": "±33.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.54,
            "range": "±33.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±6.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.84,
            "range": "±88.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.75,
            "range": "±174.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.36,
            "range": "±8.9%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "1538c424e2369c36c5a41c7876f0dad338e59768",
          "message": "feat: Simplified Dueling Dag - Mutation Recovery - Implement the mutation recovery process. (#799)\n\n### Problem \r\nWith Simplified Dueling Dags mutations that have not been synced to the server when a tab is \r\nunloaded (or frozen and never unfrozen) are lost.  This can occur in common user flows, and \r\nwill result in unexpected data loss.  The impact is worst when the user has been offline or has \r\na flakey connection as there will be more local mutations that have not been synced.   Cases \r\nwhere this will occur:\r\n\r\n- Refresh before changes have been pushed\r\n- Close before changes have been pushed\r\n- Navigate away before changes have been pushed\r\n- Tab backgrounded and frozen before changes have been pushed (seems unlikely) and tab is not revisited before client is gc’d\r\n- Tab crash before changes have been pushed\r\n\r\n### Solution\r\nReplicache clients will try to recover mutations from other Replicache client's perdag state.   \r\nA Replicache client can recover another Replicache client's mutations if the other clients has \r\nthe same name (and thus can share auth), the same domain, and a Replicache format and \r\nschema version understood by the client.   A Replicache client will try to recover other\r\nclients' mutation at startup, reconnection and on a 5 minute interval\r\n\r\nSee full design at https://www.notion.so/replicache/Mutation-Recovery-Avoiding-Mutation-Loss-using-PerDag-state-f54025b52cbc435692abca3307947d15",
          "timestamp": "2022-02-01T22:16:09-08:00",
          "tree_id": "079a53d5ca1a2250cd9d0382fbf519a24247084f",
          "url": "https://github.com/rocicorp/replicache/commit/1538c424e2369c36c5a41c7876f0dad338e59768"
        },
        "date": 1643782851606,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.63,
            "range": "±173.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 1.85,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "arv@roci.dev",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "eab7fb6ffa9276450dd185cbbd43adc0f05b7c83",
          "message": "chore: Use esbuild mangle-props (#805)\n\nFor even smaller minimized output",
          "timestamp": "2022-02-03T19:32:01Z",
          "tree_id": "aa42e322ed574d072fc61e3c228a151ae56d4953",
          "url": "https://github.com/rocicorp/replicache/commit/eab7fb6ffa9276450dd185cbbd43adc0f05b7c83"
        },
        "date": 1643916853352,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±4.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.66,
            "range": "±181.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 1.78,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "8 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ac33faf50ceb379998ad1697305c29d19f32644a",
          "message": "fix: fix benchmarks broken by mutation recovery change (#808)\n\nThese were broken by 1538c424e2369c36c5a41c7876f0dad338e59768. \r\n\r\nthree fixes.\r\n1. close other indexeddbs we try to recover\r\n2. delete IDBDatabasesStore indexeddb db after each benchmark.  this way mutationRecovery is not try to recover a ton of dbs during benchmarks. \r\n3. make the indexeddb deletion code in perf tests more robost.  There is no way to wait for an indexeddb close to complete (the api is silently async).  If you call delete when a close is in process, it fails with a onblocked event.  Add code that will delay 100ms and then retry delete after a onblocked event (up to 10 retries).",
          "timestamp": "2022-02-04T09:38:42-08:00",
          "tree_id": "cc81b015c7757441e11493bb603a6ccb7ac5d27e",
          "url": "https://github.com/rocicorp/replicache/commit/ac33faf50ceb379998ad1697305c29d19f32644a"
        },
        "date": 1643996638344,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±7.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 16.69,
            "range": "±39.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.54,
            "range": "±17.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.39,
            "range": "±30.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±5.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.86,
            "range": "±43.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.67,
            "range": "±172.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.21,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b980904005580a5817719681526191cf1f4a6598",
          "message": "fix: remove debugging console.log from benchmarks (#809)\n\nRemove debugging console.log from benchmarks.\r\n\r\nAccidentally check in here ac33faf50ceb379998ad1697305c29d19f32644a.",
          "timestamp": "2022-02-04T17:48:53Z",
          "tree_id": "a522d5c2f6e79528a5c1a0933d75a22b036797f5",
          "url": "https://github.com/rocicorp/replicache/commit/b980904005580a5817719681526191cf1f4a6598"
        },
        "date": 1643997243616,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.6,
            "range": "±94.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.32,
            "range": "±14.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.88,
            "range": "±146.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.67,
            "range": "±71.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.66,
            "range": "±176.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.81,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f988f1c1db5ec5b9dd43020c64625508f26100d4",
          "message": "fix: Simplified Dueling Dags - Mutation Recovery - Do not recover mutation from clients with a different Replicache name (#810)\n\nProblem\r\n======\r\nA client _**MUST NOT**_ recover mutations from a client with a different Replicache name.  This is because a client uses its auth to push the mutations.  This is safe for client's with the same name as they are for the same user.  However, pushing on behalf of a client with a different name is very bad, as it will apply the mutations for a different user.\r\n\r\nSolution\r\n======\r\nAdd Replicache name to the IndexedDBDatabase records, and only recover mutations for clients with the same Repliache name.  Add a test for this behavior.\r\n\r\nAlso adds versioning to IDBDatabasesStore for easing handling of future format changes of  IndexedDBDatabase records.",
          "timestamp": "2022-02-04T11:13:49-08:00",
          "tree_id": "39fda2b737e9e2f1c8850b4befe56dcda321ebd3",
          "url": "https://github.com/rocicorp/replicache/commit/f988f1c1db5ec5b9dd43020c64625508f26100d4"
        },
        "date": 1644002195331,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 18.25,
            "range": "±100.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 8.9,
            "range": "±23.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.78,
            "range": "±38.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.75,
            "range": "±40.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.64,
            "range": "±175.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.33,
            "range": "±7.1%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "a42745809efa825f769f9f737ee04aa8c8b6fc34",
          "message": "fix: add runtime checking for require non-empty Replicache name (#811)\n\nFixes #795",
          "timestamp": "2022-02-04T11:57:56-08:00",
          "tree_id": "f0410a9d31507acc580e6aeaebb0e1381cb05dc2",
          "url": "https://github.com/rocicorp/replicache/commit/a42745809efa825f769f9f737ee04aa8c8b6fc34"
        },
        "date": 1644004997643,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 16.92,
            "range": "±36.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.9,
            "range": "±22.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.43,
            "range": "±32.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±10.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.83,
            "range": "±37.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.65,
            "range": "±178.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.44,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "c90c0ab1716b4084552e706e409d98593f3f2b94",
          "message": "Revert \"add licensing client\" (#816)\n\nThis reverts commit 01d45a4e465834217c5844766383d23b7ddb6170.\r\n\r\nThe CI cannot fetch the package",
          "timestamp": "2022-02-07T12:23:38+01:00",
          "tree_id": "f0410a9d31507acc580e6aeaebb0e1381cb05dc2",
          "url": "https://github.com/rocicorp/replicache/commit/c90c0ab1716b4084552e706e409d98593f3f2b94"
        },
        "date": 1644233186262,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.28,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±8.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 16.41,
            "range": "±41.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.62,
            "range": "±24.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.33,
            "range": "±29.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.51,
            "range": "±75.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.65,
            "range": "±167.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.34,
            "range": "±10.4%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ef25543da8c82f8f445a4a325e275fdd2c2eebf5",
          "message": "feat: Simplified Dueling Dags - Mutation Recovery - Make recovery robust to errors and exit early on close. (#820)\n\n**Problem**\r\nIf the Mutation Recovery process stops on the first error encountered.  This means a single problematic db or client can prevent recovery of all other clients.  \r\n\r\n**Solution**\r\nUpdates Mutation Recovery logic to be more robust against errors.  If an error occurs recovering a particular \r\nclient or db, the logic will now log that error, and continue trying to recover other clients/dbs. \r\n\r\nAdding the above robustness requires the process to handle the Replicache instance being closed more explicitly.  Previously the process would stop on the first error encountered due to the Replicache intance being closed. \r\nThis change updates the logic to check if this Replicache instance is closed before processing each db, and \r\neach client inside each db, and exits early if this Replicache instance is closed.",
          "timestamp": "2022-02-07T10:50:38-08:00",
          "tree_id": "5e435a973dfba442a47b8c253a19db93f0de9913",
          "url": "https://github.com/rocicorp/replicache/commit/ef25543da8c82f8f445a4a325e275fdd2c2eebf5"
        },
        "date": 1644260160108,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.69,
            "range": "±107.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 8.55,
            "range": "±26.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.89,
            "range": "±46.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.8,
            "range": "±44.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.69,
            "range": "±187.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.24,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "ab8990ae58853906ae0b6c465354a88f73d01d64",
          "message": "feat: Simplified Dueling Dags - Mutation Recovery - Optimize mutation recovery at startup by reusing client map read by client init. (#821)\n\n**Problem**\r\nMutation recovery regressed our median startup scan benchmark by ~20% (25 ms to 30 ms).\r\n\r\n**Solution**\r\nTry to mitigate by reusing the client map read by `persist.initClient`, rather than reading it in a new IndexedDB transaction.",
          "timestamp": "2022-02-07T19:11:00Z",
          "tree_id": "2b2db7a63b0903d8350230c5f486b3d3f34bfe61",
          "url": "https://github.com/rocicorp/replicache/commit/ab8990ae58853906ae0b6c465354a88f73d01d64"
        },
        "date": 1644261220744,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±54.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 16.17,
            "range": "±89.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.1,
            "range": "±30.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.56,
            "range": "±38.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.75,
            "range": "±36.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.55,
            "range": "±131.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.2,
            "range": "±9.8%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "83e15f22b04332eea9d3261a7c925633ca8f61c8",
          "message": "chore(deps): bump shelljs from 0.8.4 to 0.8.5 in /doc (#807)\n\nBumps [shelljs](https://github.com/shelljs/shelljs) from 0.8.4 to 0.8.5.\r\n- [Release notes](https://github.com/shelljs/shelljs/releases)\r\n- [Changelog](https://github.com/shelljs/shelljs/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/shelljs/shelljs/compare/v0.8.4...v0.8.5)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: shelljs\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Erik Arvidsson <erik.arvidsson@gmail.com>",
          "timestamp": "2022-02-08T09:42:32Z",
          "tree_id": "ed93870c93382e0dd1f45d97516fa53ad6c068c3",
          "url": "https://github.com/rocicorp/replicache/commit/83e15f22b04332eea9d3261a7c925633ca8f61c8"
        },
        "date": 1644313522910,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 16.11,
            "range": "±41.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.78,
            "range": "±24.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.06,
            "range": "±46.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±6.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.72,
            "range": "±46.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.59,
            "range": "±161.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.14,
            "range": "±4.2%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "85b33812235990fb733fe1c972ed2bf7b0fe080d",
          "message": "chore(deps): bump nanoid from 3.1.30 to 3.2.0 (#806)\n\nBumps [nanoid](https://github.com/ai/nanoid) from 3.1.30 to 3.2.0.\r\n- [Release notes](https://github.com/ai/nanoid/releases)\r\n- [Changelog](https://github.com/ai/nanoid/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/ai/nanoid/compare/3.1.30...3.2.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: nanoid\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Erik Arvidsson <erik.arvidsson@gmail.com>",
          "timestamp": "2022-02-08T09:47:48Z",
          "tree_id": "9357019f947b0291b6f3b8854be8cb19ee8bc1e4",
          "url": "https://github.com/rocicorp/replicache/commit/85b33812235990fb733fe1c972ed2bf7b0fe080d"
        },
        "date": 1644313992936,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.25,
            "range": "±103.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.01,
            "range": "±24.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.69,
            "range": "±47.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.5,
            "range": "±78.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.68,
            "range": "±178.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.27,
            "range": "±7.6%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "29bdaea299cfe232146d43257b8de433cf620b53",
          "message": "fix: Improve isolation of tests' and benchmarks' indexeddb state to reduce flakiness (#822)\n\nIn tests add a uuid to indexeddb database names (Replicache name and IDBDatbasesStore DB) \r\nto isolate tests' indexed db state.\r\n \r\nAlso fixes a bug in kv.IDBStore which was blocking IndexedDB opened by these stores from being \r\ndeleted.   In order to not block deletion of the db, the connection needs to be closed on \r\n`onversionchange`.  Previously the code was only setting up \r\n`db.onversionchange = () => db.close()` in `onupgradeneeded` which only fires if the db didnt \r\nalready exist.  Code is updated to always setup `db.onversionchange = () => db.close()`. \r\n\r\nWhile this fix allows the IndexedDB databases to be reliably deleted, it did not prevent races \r\naround deletion.  Before isolating with uuid, I was observing that after one test's teardown \r\nawait the deletion of a database with name X, if the next test opened the database with name \r\nX, the test would _sometimes_ get an error that its connection to X was closed, suggestion some \r\nrace where the deletion is not truly complete when the success callback for the deletion is invoked.\r\n\r\nFixes #819",
          "timestamp": "2022-02-08T08:38:33-08:00",
          "tree_id": "eff3bafc09cfe2daf99c93c9a90b75c61d174f10",
          "url": "https://github.com/rocicorp/replicache/commit/29bdaea299cfe232146d43257b8de433cf620b53"
        },
        "date": 1644338660221,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.15,
            "range": "±55.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.53,
            "range": "±32.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.69,
            "range": "±37.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.78,
            "range": "±48.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.65,
            "range": "±162.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.18,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "f28980eefa4f3a207bf0fba9a951d4897e10434b",
          "message": "chore: improve createPushBody arg name and type in replicache-mutation-recovery.test (#825)",
          "timestamp": "2022-02-08T16:58:41Z",
          "tree_id": "0bca3f8cbaaee4977ae459e03d40e2a957fbbae2",
          "url": "https://github.com/rocicorp/replicache/commit/f28980eefa4f3a207bf0fba9a951d4897e10434b"
        },
        "date": 1644339843978,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±5.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.76,
            "range": "±49.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.33,
            "range": "±30.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.58,
            "range": "±86.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±5.3%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.79,
            "range": "±39.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.68,
            "range": "±167.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.18,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "206685bc9a816076212b730fd7cfcdfbc30fb346",
          "message": "fix: Fix flakiness of replicache-persist.test.ts on Webkit (#828)\n\n**Problem**\r\nreplicache-persist.test is flacky on webkit because the persist process does not always complete before we \r\ncreate a new replicache and try to read the persisted data.  This happens more on webkit because it uses a \r\ntimeout rather than request idle callback to start persist.\r\n\r\n**Solution**\r\nWait for persist to complete (detected by polling the ClientMap) before creating a new Replicache and verifying\r\nit bootstraps from the persisted data.",
          "timestamp": "2022-02-08T14:46:30-08:00",
          "tree_id": "f9ce8fb2628921e04181765d799e989bdf6ae24d",
          "url": "https://github.com/rocicorp/replicache/commit/206685bc9a816076212b730fd7cfcdfbc30fb346"
        },
        "date": 1644360559798,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.65,
            "range": "±104.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.9,
            "range": "±63.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.95,
            "range": "±96.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.79,
            "range": "±49.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.65,
            "range": "±174.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.95,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "bfd812b0026bd025ddb0fa3f59cc658220d7695d",
          "message": "Revert \"add npmrc setup to perf CI\"\n\nThis reverts commit 9e495fa0259e0b9a0c2ab8400b4fcfff725761cf.",
          "timestamp": "2022-02-09T10:03:59-10:00",
          "tree_id": "68fe6087af007d111f07bd5ae04d4d49716f93bf",
          "url": "https://github.com/rocicorp/replicache/commit/bfd812b0026bd025ddb0fa3f59cc658220d7695d"
        },
        "date": 1644437203341,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.82,
            "range": "±49.3%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.22,
            "range": "±26.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.27,
            "range": "±36.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.81,
            "range": "±47.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.67,
            "range": "±163.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.04,
            "range": "±8.5%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "phritz@users.noreply.github.com",
            "name": "phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "6231b09ba697cb4f4a8d5e86bd7c1cf7310f39aa",
          "message": "add npmrc setup to perf CI",
          "timestamp": "2022-02-09T10:16:36-10:00",
          "tree_id": "8bb9428403c5ce6bddc6802b781f9c3f97569966",
          "url": "https://github.com/rocicorp/replicache/commit/6231b09ba697cb4f4a8d5e86bd7c1cf7310f39aa"
        },
        "date": 1644437956311,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±3.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.26,
            "range": "±90.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.1,
            "range": "±48.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.01,
            "range": "±41.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.82,
            "range": "±47.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.65,
            "range": "±156.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.21,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "phritz@users.noreply.github.com",
            "name": "phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "5104a8aa842acfae3fa3c1c04c372036a07820b1",
          "message": "bump licensing version",
          "timestamp": "2022-02-09T16:34:32-10:00",
          "tree_id": "78501dc8e5dcb27550eb36d03ba3658616fb9d0a",
          "url": "https://github.com/rocicorp/replicache/commit/5104a8aa842acfae3fa3c1c04c372036a07820b1"
        },
        "date": 1644460801735,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.69,
            "range": "±59.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.88,
            "range": "±18.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.09,
            "range": "±37.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±7.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.8,
            "range": "±119.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.7,
            "range": "±176.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.27,
            "range": "±3.5%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Gregory Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "d95d8bf18d84dc465f2cbe58069668fc86a2a6cd",
          "message": "refactor: Rename ReplicacheOptions.name and Replicache.name to userID.",
          "timestamp": "2022-02-09T21:03:00-10:00",
          "tree_id": "eb04d410445c922c61098f2237f9729188c85f7b",
          "url": "https://github.com/rocicorp/replicache/commit/d95d8bf18d84dc465f2cbe58069668fc86a2a6cd"
        },
        "date": 1644476903815,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 18.57,
            "range": "±94.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.86,
            "range": "±35.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.18,
            "range": "±27.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.85,
            "range": "±50.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.67,
            "range": "±158.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.33,
            "range": "±2.6%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Gregory Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "0a38f9f297fbf8159a1029785f957550ed3ba6c8",
          "message": "feat: Update Replicache Format Version from 3 to 4 for v9 release.",
          "timestamp": "2022-02-09T21:11:21-10:00",
          "tree_id": "b3bec3c3f0b36ece2eac1ddeea03246bea432003",
          "url": "https://github.com/rocicorp/replicache/commit/0a38f9f297fbf8159a1029785f957550ed3ba6c8"
        },
        "date": 1644477403136,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.98,
            "range": "±54.1%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.58,
            "range": "±26.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.48,
            "range": "±33.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±10.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.56,
            "range": "±46.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.74,
            "range": "±187.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.27,
            "range": "±3.3%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "addf5ffcdf1b8f4e851efdfc383527c38852f020",
          "message": "Bump version to 9.0.0-beta.1.",
          "timestamp": "2022-02-09T21:21:00-10:00",
          "tree_id": "965012483a7f03b4773ccef5a1595ace6db0ff71",
          "url": "https://github.com/rocicorp/replicache/commit/addf5ffcdf1b8f4e851efdfc383527c38852f020"
        },
        "date": 1644477980453,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.38,
            "range": "±90.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.87,
            "range": "±71.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.86,
            "range": "±89.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±14.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.81,
            "range": "±37.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.67,
            "range": "±165.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.26,
            "range": "±4.6%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "b40de269b9e8e178f11b098f6eb3112e4c5d53d6",
          "message": "refactor: Rename ReplicacheOptions.userID and Replicache.userID back to name. (#835)\n\nThis reverts commit d95d8bf18d84dc465f2cbe58069668fc86a2a6cd.\r\n\r\nWe realized we will need both a userID, and another identifier to support multiple Replicache instance for the same user (e.g. roomID).  We will do this api change in v10 rather than v9.  \r\n\r\nAdded details to documentation for `name` around Replicache bootsrapping and mutation recovery.",
          "timestamp": "2022-02-10T10:16:34-08:00",
          "tree_id": "1a01a62b035c7dd373dc90ab77b43deed02fb261",
          "url": "https://github.com/rocicorp/replicache/commit/b40de269b9e8e178f11b098f6eb3112e4c5d53d6"
        },
        "date": 1644517332259,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±0.8%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 416.67,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.72,
            "range": "±44.0%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.09,
            "range": "±25.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.93,
            "range": "±38.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.81,
            "range": "±46.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.74,
            "range": "±189.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.11,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "e4c67f42481f9025f633e4cdc7dd9a5ff9089b40",
          "message": "Update package-lock.json",
          "timestamp": "2022-02-10T09:58:21-10:00",
          "tree_id": "eeb1e3a80ad7d59f6aa308ab13c6827b6387c236",
          "url": "https://github.com/rocicorp/replicache/commit/e4c67f42481f9025f633e4cdc7dd9a5ff9089b40"
        },
        "date": 1644523440386,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±62.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 18.93,
            "range": "±111.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.69,
            "range": "±46.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.62,
            "range": "±36.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.71,
            "range": "±34.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.71,
            "range": "±193.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.97,
            "range": "±6.6%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "5c76f54b247e4412c7db6fc46601d034e76f736e",
          "message": "chore(deps): bump follow-redirects from 1.14.7 to 1.14.8 in /doc (#840)\n\nBumps [follow-redirects](https://github.com/follow-redirects/follow-redirects) from 1.14.7 to 1.14.8.\r\n- [Release notes](https://github.com/follow-redirects/follow-redirects/releases)\r\n- [Commits](https://github.com/follow-redirects/follow-redirects/compare/v1.14.7...v1.14.8)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: follow-redirects\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2022-02-14T15:36:49+01:00",
          "tree_id": "8e9d6faf0f16a1611482d62c7028d321cd27f1fc",
          "url": "https://github.com/rocicorp/replicache/commit/5c76f54b247e4412c7db6fc46601d034e76f736e"
        },
        "date": 1644849737244,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.63,
            "range": "±76.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.84,
            "range": "±34.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.93,
            "range": "±69.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±6.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.75,
            "range": "±40.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.69,
            "range": "±164.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.29,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "358212cc1d153cea6ff39763417588fa1d7c6d7b",
          "message": "feat!: Prefix the IDB name with `rep:` (#842)\n\nFixes #836",
          "timestamp": "2022-02-14T20:37:34Z",
          "tree_id": "786bdf0e700af26f989ec4b73c1be94b7b6f4c50",
          "url": "https://github.com/rocicorp/replicache/commit/358212cc1d153cea6ff39763417588fa1d7c6d7b"
        },
        "date": 1644871226973,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±1.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.97,
            "range": "±101.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.69,
            "range": "±45.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.87,
            "range": "±47.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.77,
            "range": "±44.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.7,
            "range": "±172.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.14,
            "range": "±6.9%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3290f8e97df2d9ff17a4863225e7fa9e8e3d3a84",
          "message": "fix: Do not use window (#844)\n\nReplicache runs in web workers so we should not use `window`.",
          "timestamp": "2022-02-15T09:32:00Z",
          "tree_id": "de8378ca2c47e049794fe7ac1dbd8ee93475b8ce",
          "url": "https://github.com/rocicorp/replicache/commit/3290f8e97df2d9ff17a4863225e7fa9e8e3d3a84"
        },
        "date": 1644917789585,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 18.29,
            "range": "±87.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.75,
            "range": "±66.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.81,
            "range": "±96.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.76,
            "range": "±50.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.73,
            "range": "±164.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.26,
            "range": "±3.7%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "greg@roci.dev",
            "name": "Greg Baker",
            "username": "grgbkr"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "4c2001ad37721e7f148ccaa52803bb242ca1d467",
          "message": "fix: Catch errors in background interval processes and log appropriatly. (#846)\n\nProblem\r\n=======\r\nWe have a report of the following exception being thrown from `heartbeat.ts` after a Replicache instance is closed and a new one created as part of a development setup using Replicache, Reach hooks, and Next with HMR.\r\n\r\n```\r\nDOMException: Failed to execute 'transaction' on 'IDBDatabase': The database connection is closing.\r\n```\r\n\r\nWe do stop the heartbeat interval when a Replicache instance is closed, however there is a race that can lead to the above exception: if the Replicache instance is closed while the hearbeat update is running.  \r\n\r\nThis is a fairly narrow race, so I'm still uncertain if this is what the issue reporter is hitting. \r\n\r\nSolution\r\n=======\r\nCatch errors in interval based background processes and log them to 'debug' if the error occurred after the Replicache instance was closed (as this is an expected error), and to 'error' otherwise.  Applied this to the \"heartbeat\" and \"ClientGC\" processes.  The \"mutation recovery\" process already does this.\r\n\r\nAlso added so additional debug logging to aid in further debugging if this does not fix the issue for the reporter.\r\n\r\n\r\nFixes #843",
          "timestamp": "2022-02-24T13:50:42-08:00",
          "tree_id": "016622276cf1e1891a63442d984787a4b6a7cd30",
          "url": "https://github.com/rocicorp/replicache/commit/4c2001ad37721e7f148ccaa52803bb242ca1d467"
        },
        "date": 1645739618697,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.63,
            "range": "±96.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.98,
            "range": "±28.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.3,
            "range": "±99.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.78,
            "range": "±49.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.69,
            "range": "±164.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.23,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "47cc40a5d7506b6d63a51726a7b09117cafc6b8b",
          "message": "Bump version to 9.0.0-beta.2.",
          "timestamp": "2022-02-24T14:57:06-10:00",
          "tree_id": "c995678e0be78655a28ecbca40f03f7806bfdbc6",
          "url": "https://github.com/rocicorp/replicache/commit/47cc40a5d7506b6d63a51726a7b09117cafc6b8b"
        },
        "date": 1645750970667,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±65.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.05,
            "range": "±102.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.74,
            "range": "±31.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.49,
            "range": "±34.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.9,
            "range": "±48.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.7,
            "range": "±176.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.86,
            "range": "±4.9%",
            "unit": "MB/s",
            "extra": "13 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "49699333+dependabot[bot]@users.noreply.github.com",
            "name": "dependabot[bot]",
            "username": "dependabot[bot]"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "9fd50e10f5d36932829f4ba3b36075b077097ed9",
          "message": "chore(deps): bump prismjs from 1.26.0 to 1.27.0 in /doc (#847)\n\nBumps [prismjs](https://github.com/PrismJS/prism) from 1.26.0 to 1.27.0.\r\n- [Release notes](https://github.com/PrismJS/prism/releases)\r\n- [Changelog](https://github.com/PrismJS/prism/blob/master/CHANGELOG.md)\r\n- [Commits](https://github.com/PrismJS/prism/compare/v1.26.0...v1.27.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: prismjs\r\n  dependency-type: indirect\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>",
          "timestamp": "2022-02-28T16:59:44+01:00",
          "tree_id": "f6abe36d483070d27fb0679fc82bfa4486d50986",
          "url": "https://github.com/rocicorp/replicache/commit/9fd50e10f5d36932829f4ba3b36075b077097ed9"
        },
        "date": 1646064158175,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±0.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±63.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.18,
            "range": "±83.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.74,
            "range": "±31.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.04,
            "range": "±53.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±7.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.79,
            "range": "±48.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.68,
            "range": "±172.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.08,
            "range": "±7.7%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "phritz@users.noreply.github.com",
            "name": "phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "0b84a67f0833fbb7a0de50a0d405dccc9ab801c8",
          "message": "add license check call",
          "timestamp": "2022-03-01T09:40:46-10:00",
          "tree_id": "b8d351b8c26c8193d0dff936984f9b9570371955",
          "url": "https://github.com/rocicorp/replicache/commit/0b84a67f0833fbb7a0de50a0d405dccc9ab801c8"
        },
        "date": 1646163974934,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 333.33,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 243.9,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±1.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.85,
            "range": "±107.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.06,
            "range": "±27.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.02,
            "range": "±94.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.1%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.83,
            "range": "±49.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.69,
            "range": "±176.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.36,
            "range": "±5.2%",
            "unit": "MB/s",
            "extra": "16 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "phritz@users.noreply.github.com",
            "name": "phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "bd50f9923ebeb5c1173ccab8ece313f86a53d414",
          "message": "move license check to after ready",
          "timestamp": "2022-03-01T11:05:58-10:00",
          "tree_id": "ff62bc9b92adbea5d47f4a470930c71b11207cf8",
          "url": "https://github.com/rocicorp/replicache/commit/bd50f9923ebeb5c1173ccab8ece313f86a53d414"
        },
        "date": 1646169080208,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 384.62,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19,
            "range": "±51.6%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.34,
            "range": "±33.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.07,
            "range": "±36.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.83,
            "range": "±44.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.68,
            "range": "±155.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3,
            "range": "±7.3%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "5ff1b23494583122722ee8b838f2461d7d1e005c",
          "message": "Merge tag 'v9.0.0'",
          "timestamp": "2022-03-02T21:52:28-10:00",
          "tree_id": "bab29d3f8f85d03163ad42eca82bca9a9ddafc2a",
          "url": "https://github.com/rocicorp/replicache/commit/5ff1b23494583122722ee8b838f2461d7d1e005c"
        },
        "date": 1646294160117,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.9%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±10.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 17.25,
            "range": "±105.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.29,
            "range": "±31.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.48,
            "range": "±30.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.81,
            "range": "±41.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.73,
            "range": "±188.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.21,
            "range": "±6.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dda2cb70ea1a1b42e060bb2a87c225dcc976de60",
          "message": "Update HACKING.md",
          "timestamp": "2022-03-02T21:59:08-10:00",
          "tree_id": "24954f807b5dbb38a309ad675ea5727f1960a729",
          "url": "https://github.com/rocicorp/replicache/commit/dda2cb70ea1a1b42e060bb2a87c225dcc976de60"
        },
        "date": 1646294513016,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 357.14,
            "range": "±1.0%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±9.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±3.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 19.38,
            "range": "±94.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.08,
            "range": "±34.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.77,
            "range": "±39.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.79,
            "range": "±45.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.68,
            "range": "±165.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.21,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "6234c54a4867e05434a4a70f619f4f90f72e6ea0",
          "message": "Add 64MB write/sub/read benchmark 😬",
          "timestamp": "2022-03-03T18:33:21-10:00",
          "tree_id": "75ee393bac3b03824fe824005ccb1afb0f8684cb",
          "url": "https://github.com/rocicorp/replicache/commit/6234c54a4867e05434a4a70f619f4f90f72e6ea0"
        },
        "date": 1646368931844,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±1.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±6.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±15.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.01,
            "range": "±27.2%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 9.53,
            "range": "±32.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 8.09,
            "range": "±100.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 325.52,
            "range": "±7.2%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.73,
            "range": "±53.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.7,
            "range": "±181.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.16,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "0dc390fa2a3f877c197e0662e0fd7011f62f3a1c",
          "message": "Add 10MB populate tests.",
          "timestamp": "2022-03-03T22:08:06-10:00",
          "tree_id": "be54ded722ca79dc78bd25a21ac5a8d406ced9d1",
          "url": "https://github.com/rocicorp/replicache/commit/0dc390fa2a3f877c197e0662e0fd7011f62f3a1c"
        },
        "date": 1646381607574,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±1.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 400,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±64.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±15.4%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 18.64,
            "range": "±26.1%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 10.14,
            "range": "±63.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 7.65,
            "range": "±39.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 28.88,
            "range": "±257.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 9.13,
            "range": "±65.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 6.82,
            "range": "±148.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±9.7%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 3.74,
            "range": "±52.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.73,
            "range": "±198.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.08,
            "range": "±5.0%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "distinct": true,
          "id": "2442bc5dcad97769c22c67c6105e3aa56b2cd4e3",
          "message": "Minor perf optimization to benchmarks. This reduces time of the 16MB\nrun by about 10%. It has no affect on the result of the benchmark,\njust the setup overhead.",
          "timestamp": "2022-03-06T19:17:51-10:00",
          "tree_id": "4f059426f705279bcddcfd4813fb211302ede79b",
          "url": "https://github.com/rocicorp/replicache/commit/2442bc5dcad97769c22c67c6105e3aa56b2cd4e3"
        },
        "date": 1646630712689,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.3%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 500,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 24.6,
            "range": "±117.5%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 15.96,
            "range": "±31.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.33,
            "range": "±38.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 30.28,
            "range": "±52.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 13.34,
            "range": "±64.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 8.96,
            "range": "±103.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 348.77,
            "range": "±5.6%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 7.19,
            "range": "±34.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.7,
            "range": "±20.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.2,
            "range": "±10.3%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "3a5da8644030a6e0fcaa88ca7ce4a57d3a1edd91",
          "message": "Update HACKING.md",
          "timestamp": "2022-03-06T21:39:41-10:00",
          "tree_id": "af940f1102c11e93395bbca2502d1f3c6ec3a3a8",
          "url": "https://github.com/rocicorp/replicache/commit/3a5da8644030a6e0fcaa88ca7ce4a57d3a1edd91"
        },
        "date": 1646638993507,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 454.55,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±2.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±15.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 26.04,
            "range": "±113.2%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 16.11,
            "range": "±35.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.53,
            "range": "±39.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 30.23,
            "range": "±55.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 13.27,
            "range": "±114.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 9.17,
            "range": "±85.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±5.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 7.04,
            "range": "±46.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.71,
            "range": "±24.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.86,
            "range": "±6.8%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "aaron@aaronboodman.com",
            "name": "Aaron Boodman",
            "username": "aboodman"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "200a6a3f93dd2113f3f82131a93fe785ed57529a",
          "message": "Update HACKING.md",
          "timestamp": "2022-03-06T21:40:08-10:00",
          "tree_id": "e562d16195580c3715a8f741165d3f77802d625e",
          "url": "https://github.com/rocicorp/replicache/commit/200a6a3f93dd2113f3f82131a93fe785ed57529a"
        },
        "date": 1646639393184,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 476.19,
            "range": "±3.9%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 370.37,
            "range": "±4.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 285.71,
            "range": "±15.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 23.88,
            "range": "±116.4%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 15.45,
            "range": "±30.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.54,
            "range": "±41.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 29.86,
            "range": "±51.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 13.13,
            "range": "±120.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 9.08,
            "range": "±98.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 361.69,
            "range": "±13.0%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 6.98,
            "range": "±35.7%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.7,
            "range": "±18.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.14,
            "range": "±7.4%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "phritz@users.noreply.github.com",
            "name": "phritz",
            "username": "phritz"
          },
          "committer": {
            "email": "157153+phritz@users.noreply.github.com",
            "name": "Phritz",
            "username": "phritz"
          },
          "distinct": true,
          "id": "f4c021b0bf9fa162f83d28073606d31cb21c21c3",
          "message": "add license active ping",
          "timestamp": "2022-03-07T15:34:43-10:00",
          "tree_id": "aa97a954c6ffb7d5118e95178ff0370161248d97",
          "url": "https://github.com/rocicorp/replicache/commit/f4c021b0bf9fa162f83d28073606d31cb21c21c3"
        },
        "date": 1646703556594,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 500,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±3.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 24.17,
            "range": "±118.7%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 16.28,
            "range": "±32.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.88,
            "range": "±42.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 31.21,
            "range": "±66.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 13.34,
            "range": "±100.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 9.04,
            "range": "±80.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±4.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 7.32,
            "range": "±38.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.73,
            "range": "±15.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.82,
            "range": "±7.7%",
            "unit": "MB/s",
            "extra": "14 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "039d333ab98e8c463a7f38e5f8d595ea17fab6d3",
          "message": "fix: Log subscribe errors if no onError (#864)\n\nIf `onError` is provided to a subscription the `onError` handler gets\r\ncalled with the exception as argument.\r\n\r\nIf there is no `onError` then we log the error to the console.\r\n\r\nFixes #862",
          "timestamp": "2022-03-10T13:39:22+01:00",
          "tree_id": "f546b2d44cb01c5f7a0902f67d74bed0ad640780",
          "url": "https://github.com/rocicorp/replicache/commit/039d333ab98e8c463a7f38e5f8d595ea17fab6d3"
        },
        "date": 1646916181671,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.4%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 476.19,
            "range": "±4.1%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 303.03,
            "range": "±2.0%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 344.83,
            "range": "±15.9%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 20.96,
            "range": "±114.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 15.55,
            "range": "±27.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.45,
            "range": "±42.8%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 30.07,
            "range": "±57.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 13.11,
            "range": "±72.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 9.18,
            "range": "±96.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±11.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 7.25,
            "range": "±41.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.72,
            "range": "±18.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 2.83,
            "range": "±8.2%",
            "unit": "MB/s",
            "extra": "13 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "97d56722c35cabd0b351270b6882ed176b0aa59c",
          "message": "chore: Add a mustGetChunk that throws if missing (#866)\n\nNow, all code paths that gets a required chunk uses `mustGetChunk`. When\r\nthe chunk is missing this throws a `MissingChunkError`.\r\n\r\nThe idea is that the caller will detect these errors and see if the\r\nclient might have been GC'd.\r\n\r\nTowards #784",
          "timestamp": "2022-03-11T15:36:22+01:00",
          "tree_id": "00a630d694322f53471681e582e4e3e67f34f5c2",
          "url": "https://github.com/rocicorp/replicache/commit/97d56722c35cabd0b351270b6882ed176b0aa59c"
        },
        "date": 1647009807104,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 714.29,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 454.55,
            "range": "±2.9%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 217.39,
            "range": "±2.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±21.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.05,
            "range": "±121.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 16.22,
            "range": "±35.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.28,
            "range": "±38.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 30.49,
            "range": "±61.7%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 12.85,
            "range": "±71.4%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 9.05,
            "range": "±119.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 315.02,
            "range": "±16.5%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 7.32,
            "range": "±44.1%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.71,
            "range": "±23.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.14,
            "range": "±9.6%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "2cbbf982f0c932e5d99e3e5a02bbfd78be38991d",
          "message": "feat: Check if client exists in persist (#867)\n\nWe now check if the client ID exists in the client map when we do a\r\n`persist`. If it doesn't we throw a `MissingClientError`.\r\n\r\nFor testing purpose we can skip this check.\r\n\r\nThe intended use is to handle clients that are missing and raise an\r\n\"event\" on the Replicache instance when this happens.\r\n\r\nTowards #784",
          "timestamp": "2022-03-12T15:18:34Z",
          "tree_id": "77cebeb2bca9496c2f4744b4acd5824c8e87eba7",
          "url": "https://github.com/rocicorp/replicache/commit/2cbbf982f0c932e5d99e3e5a02bbfd78be38991d"
        },
        "date": 1647098721646,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 434.78,
            "range": "±2.7%",
            "unit": "ops/sec",
            "extra": "14 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 312.5,
            "range": "±20.8%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 21.42,
            "range": "±120.4%",
            "unit": "MB/s",
            "extra": "8 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 16.95,
            "range": "±37.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.3,
            "range": "±44.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 30.2,
            "range": "±62.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 13.14,
            "range": "±121.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 9.24,
            "range": "±92.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 336.75,
            "range": "±5.4%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 7.09,
            "range": "±39.6%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.73,
            "range": "±11.5%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.3,
            "range": "±8.1%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      },
      {
        "commit": {
          "author": {
            "email": "erik.arvidsson@gmail.com",
            "name": "Erik Arvidsson",
            "username": "arv"
          },
          "committer": {
            "email": "noreply@github.com",
            "name": "GitHub",
            "username": "web-flow"
          },
          "distinct": true,
          "id": "dcc2469f6c1a4b7d29fe0bbb0dc6852f38e93aec",
          "message": "chore: Add another scan perf test with ~10MB (#869)",
          "timestamp": "2022-03-14T14:53:46+01:00",
          "tree_id": "6bfda283c3719624f9c43fc31524364f7cfba866",
          "url": "https://github.com/rocicorp/replicache/commit/dcc2469f6c1a4b7d29fe0bbb0dc6852f38e93aec"
        },
        "date": 1647266439749,
        "tool": "benchmarkjs",
        "benches": [
          {
            "name": "writeSubRead 1MB total, 64 subs total, 5 subs dirty, 16kb read per sub",
            "value": 769.23,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "19 samples"
          },
          {
            "name": "writeSubRead 4MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 500,
            "range": "±2.2%",
            "unit": "ops/sec",
            "extra": "13 samples"
          },
          {
            "name": "writeSubRead 16MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 294.12,
            "range": "±2.5%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "writeSubRead 64MB total, 128 subs total, 5 subs dirty, 16kb read per sub",
            "value": 322.58,
            "range": "±21.3%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 0)",
            "value": 25.83,
            "range": "±116.2%",
            "unit": "MB/s",
            "extra": "9 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 1)",
            "value": 17.41,
            "range": "±38.2%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x1000 (clean, indexes: 2)",
            "value": 11.56,
            "range": "±42.9%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 0)",
            "value": 30.3,
            "range": "±111.6%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 1)",
            "value": 13.42,
            "range": "±107.0%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "populate 1024x10000 (clean, indexes: 2)",
            "value": 9.12,
            "range": "±95.1%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "scan 1024x1000",
            "value": 250.4,
            "range": "±3.8%",
            "unit": "MB/s",
            "extra": "19 samples"
          },
          {
            "name": "scan 1024x10000",
            "value": 335.59,
            "range": "±23.2%",
            "unit": "MB/s",
            "extra": "15 samples"
          },
          {
            "name": "create index 1024x5000",
            "value": 7.3,
            "range": "±47.2%",
            "unit": "ops/sec",
            "extra": "7 samples"
          },
          {
            "name": "startup read 1024x100 from 1024x100000 stored",
            "value": 0.73,
            "range": "±12.3%",
            "unit": "MB/s",
            "extra": "7 samples"
          },
          {
            "name": "startup scan 1024x100 from 1024x100000 stored",
            "value": 3.11,
            "range": "±8.8%",
            "unit": "MB/s",
            "extra": "15 samples"
          }
        ]
      }
    ]
  }
}